3 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'Car Data:b'8,2,c c c c 0 0 0 0 '
Key error: 1284

Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,501,3 0 0 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128322.892696, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128322.9306462, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,40 0 0 0 0 0 0 0 'Key error: 1282

Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Key error: 1283

Frame ID: 2     data: b'8,2,b b b b 0 0 0 0 \n'
Car Data:b'8,502,4 0 0 0 0 0 0 0 'database message: message('b', 0x2, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
message: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
utils: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128322.9567728, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Car Data:b'8,2,e e e e 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128322.9776683, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Key error: 1285
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,1 12 3 4 5 4 4 4 \n'Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Key error: 1283

Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Key error: 1285
Frame ID: 2     data: b'8,2,c c c c 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
message: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '
utils: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48Car Data:b'8,503,1 13 3 4 5 4 4 4 '

scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128322.992629, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.0105774, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Car Data:b'8,2,f f f f 0 0 0 0 '
Key error: 1282
Frame ID: 1283     data: b'8,503,2 4 5 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,502,2 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,504,80 0 0 0 0 0 0 0 '
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.023582, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 2     data: b'8,2,e e e e 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,500,30 1a 63 0 0 99 42 0 '

Car Data:b'8,1,0 0 0 0 0 0 0 0 '
database: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,502,3 0 0 0 0 0 0 0 '

data after shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
message: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.0425417, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 'Frame ID: 2     data: b'8,2,10 10 10 10 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
data before shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'

decode simple: shortening data to a length: 8
Car Data:b'8,2,11 11 11 11 0 0 0 0 '
data after shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
message: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.0564582, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,501,4 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.0714123, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,0 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,503,0 3d 3d 11 f f 12 3d 'utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,505,0 3a 3a 3a 3b 3a 3a 3b '

Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.0889883, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,502,1 0 0 0 0 0 0 0 '
Car Data:b'8,504,40 0 0 0 0 0 0 0 'message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.1080956, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'7,9cf8a6c9,3 11 2c 84 3f 3e d4 '
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,503,2 4 4 4 4 4 4 4 'database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.1264048, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'

Key error: 1283
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,2,14 14 14 14 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,501,3 0 0 0 0 0 0 0 '
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.145395, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Key error: 1280
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.1674607, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,3 3 3 3 0 0 0 0 '
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.1856413, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

Key error: 1284
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3a 3b 3a 3a 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
Frame ID: 2     data: b'8,2,2 2 2 2 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
data before shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
message: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.2020411, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'Car Data:b'8,500,10 0 0 0 0 0 0 0 '

Key error: 1284
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,503,1 13 3 4 5 4 4 4 'Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>

database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.2191668, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Car Data:b'8,2,4 4 4 4 0 0 0 0 '
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,1 1 1 1 0 0 0 0 \n'
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
data before shortening: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,503,2 4 4 4 4 4 4 4 '
data after shortening: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'

message: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
utils: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.2361195, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,2,6 6 6 6 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,502,3 0 0 0 0 0 0 0 '

utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.2511168, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.2682176, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'Frame ID: 2     data: b'8,2,5 5 5 5 0 0 0 0 \n'

Car Data:b'8,502,4 0 0 0 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
data before shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
message: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
utils: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.283329, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,8 8 8 8 0 0 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.30746, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,2,9 9 9 9 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Key error: 1285
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Key error: 1280
Frame ID: 3     data: b'8,3,7 0 7 0 7 0 7 0 \n'
database message: message('c', 0x3, False, 8, None)
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x07\\x00\\x07\\x00\\x07\\x00\\x07\\x0'
data before shortening: b'\\x07\\x00\\x07\\x00\\x07\\x00\\x07\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x07\\x00\\x07\\x00\\x07\\x00\\x07\\x0'
message: data: b'\\x07\\x00\\x07\\x00\\x07\\x00\\x07\\x0'
utils: data: b'\\x07\\x00\\x07\\x00\\x07\\x00\\x07\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23607, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23607
conversion.py: 23607
scaled: 23607
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.3304007, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,1 13 3 4 5 4 4 4 \n'
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Key error: 1283
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
Key error: 1285
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.3576114, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Car Data:b'8,502,2 0 0 0 0 0 0 0 'Frame ID: 2     data: b'8,2,6 6 6 6 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'Car Data:b'8,503,2 4 4 4 4 4 4 4 '

data before shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
message: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.379506, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,2,b b b b 0 0 0 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,502,3 0 0 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.4049582, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.431017, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,2,d d d d 0 0 0 0 '
Frame ID: 2     data: b'8,2,a a a a 0 0 0 0 \n'
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
message: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.456948, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.478148, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'Car Data:b'8,500,0 0 0 0 0 0 0 0 '

Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Key error: 1285
Car Data:b'8,2,e e e e 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Key error: 1280

Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '
Key error: 1283
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 2     data: b'8,2,b b b b 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
Car Data:b'8,503,1 12 3 4 4 4 4 4 'decode simple: shortening data to a length: 8
data after shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'

message: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
utils: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.5000918, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.5290112, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 5 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

Key error: 1285
Car Data:b'8,502,2 0 0 0 0 0 0 0 '
Car Data:b'8,504,80 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,d d d d 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
message: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.5486667, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,503,3 4 4 3 3d 4 4 4 'database message: message('a', 0x1, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.5715296, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,2,10 10 10 10 0 0 0 0 '

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.5968869, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283

Frame ID: 2     data: b'8,2,f f f f 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,501,4 0 0 0 0 0 0 0 '
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

data after shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
message: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.6169581, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,500,0 0 0 0 0 0 0 0 '

database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.6371777, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Key error: 1282

Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Key error: 1284

Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3a \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'Car Data:b'8,503,0 3d 3d 11 f f 12 3d '

Key error: 1281
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '
Frame ID: 1283     data: b'8,503,1 13 3 4 5 4 4 4 \n'Car Data:b'8,500,10 0 0 0 0 0 0 0 '

Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'Car Data:b'8,2,14 14 14 14 0 0 0 0 '

Car Data:b'8,502,1 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 2     data: b'8,2,10 10 10 10 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'Car Data:b'8,504,40 0 0 0 0 0 0 0 '

data before shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
message: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.6570857, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.67902, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1284
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285Car Data:b'8,501,2 0 0 0 0 0 0 0 '

Car Data:b'8,503,2 4 4 4 4 4 4 4 '
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,13 13 13 13 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
data before shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
Car Data:b'8,2,13 13 13 13 0 0 0 0 '
message: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.6959739, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'Car Data:b'8,500,30 1a 63 0 0 99 42 0 '

Key error: 1283
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,502,3 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,12 12 12 12 0 0 0 0 \n'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
data before shortening: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
message: data: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
utils: data: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.7148027, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Car Data:b'8,2,2 2 2 2 0 0 0 0 '
Key error: 1283
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,502,4 0 0 0 0 0 0 0 '

data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.734973, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.7557695, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3a 3b 3a 3a 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,1 1 1 1 0 0 0 0 \n'
Car Data:b'8,2,3 3 3 3 0 0 0 0 'database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
data before shortening: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,502,0 0 0 0 0 0 0 0 '

data after shortening: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
message: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
utils: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '

conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.7759807, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.800537, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283

Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'Frame ID: 2     data: b'8,2,0 0 0 0 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,502,2 0 0 0 0 0 0 0 '

utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
Car Data:b'8,504,80 0 0 0 0 0 0 0 '
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.8340182, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284Car Data:b'8,1,0 0 0 0 0 0 0 0 '

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,503,3 4 4 3 3d 4 4 4 '
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.8591433, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Car Data:b'8,2,5 5 5 5 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.8841398, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Key error: 1283
Frame ID: 2     data: b'8,2,4 4 4 4 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'Car Data:b'8,501,4 0 0 0 0 0 0 0 '

data before shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

data after shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
message: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.9090126, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.9341185, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'

Key error: 1284
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,503,0 3d 3d 11 10 f 12 3d '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3a 'Key error: 1280

Frame ID: 3     data: b'8,3,6 0 6 0 6 0 6 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x06\\x00\\x06\\x00\\x06\\x00\\x06\\x0'
data before shortening: b'\\x06\\x00\\x06\\x00\\x06\\x00\\x06\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x06\\x00\\x06\\x00\\x06\\x00\\x06\\x0'
message: data: b'\\x06\\x00\\x06\\x00\\x06\\x00\\x06\\x0'
utils: data: b'\\x06\\x00\\x06\\x00\\x06\\x00\\x06\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23606, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23606
conversion.py: 23606
scaled: 23606
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128323.9652379, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23607, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'Car Data:b'8,500,10 0 0 0 0 0 0 0 '

Key error: 1283
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,502,1 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,504,40 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.0018146, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 5 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,5 5 5 5 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
data before shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
Car Data:b'8,503,2 4 4 4 4 4 4 4 'decode simple: shortening data to a length: 8
data after shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
message: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'

utils: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.0425553, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Key error: 1280
Car Data:b'8,2,8 8 8 8 0 0 0 0 '
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.08214, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,3 4 4 3 3d 4 4 4 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.1215532, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'Frame ID: 2     data: b'8,2,9 9 9 9 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'Car Data:b'8,500,40 0 0 0 0 0 0 0 '

data before shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
message: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]Car Data:b'8,502,4 0 0 0 0 0 0 0 '

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.1487114, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)Car Data:b'8,1,0 0 0 0 0 0 0 0 '

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.168176, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 12 3 4 5 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,a a a a 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'Car Data:b'8,502,0 0 0 0 0 0 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
message: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'Car Data:b'8,504,1 1 0 0 0 0 1 0 '
utils: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)

full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '
Car Data:b'8,500,10 0 0 0 0 0 0 0 '

scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48Car Data:b'8,3,e 0 e 0 e 0 e 0 '
Car Data:b'8,503,1 12 3 4 5 4 4 4 '
Car Data:b'8,504,40 0 0 0 0 0 0 0 '
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}

json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.1844125, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.2023344, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Frame ID: 1283     data: b'8,503,2 4 5 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,c c c c 0 0 0 0 \n'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'Car Data:b'8,501,2 0 0 0 0 0 0 0 '

Car Data:b'8,503,2 4 4 4 4 4 4 4 '
message: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
utils: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.2153335, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'Car Data:b'8,2,d d d d 0 0 0 0 '

Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0Car Data:b'8,501,3 0 0 0 0 0 0 0 '

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.231291, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.2462382, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,e e e e 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
message: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'Car Data:b'8,502,4 0 0 0 0 0 0 0 '

utils: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.2631512, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Car Data:b'8,2,11 11 11 11 0 0 0 0 'Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.286152, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Car Data:b'8,3,12 0 12 0 12 0 12 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'Car Data:b'8,502,0 0 0 0 0 0 0 0 '

Key error: 1281
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
Frame ID: 1283     data: b'8,503,1 13 3 4 5 4 4 4 \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

Key error: 1283Car Data:b'8,500,10 0 0 0 0 0 0 0 '

Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 2     data: b'8,2,f f f f 0 0 0 0 \n'
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
Car Data:b'8,503,1 12 3 4 4 4 4 4 '
data before shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
message: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.3090289, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.3364413, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280

Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,502,2 0 0 0 0 0 0 0 '
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,504,80 0 0 0 0 0 0 0 '

Car Data:b'8,505,2 3a 3a 0 0 0 0 0 'data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.3601873, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,3,0 0 0 0 0 0 0 0 '
Key error: 1284
Frame ID: 2     data: b'8,2,11 11 11 11 0 0 0 0 \n'Car Data:b'8,503,3 4 4 3 3d 4 4 4 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>

database: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
data before shortening: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
message: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
utils: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.38774, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'Car Data:b'8,2,14 14 14 14 0 0 0 0 '

Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Key error: 1283
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,501,4 0 0 0 0 0 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.4189382, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.4408798, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3a 3b 3a 3a 3b \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,0 3d 3d 11 f f 12 3d '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.4628277, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Key error: 1282
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,3,3 0 3 0 3 0 3 0 '
Key error: 1284
Frame ID: 2633541321     data: b'7,9cf8a6c9,3 11 2c 84 3f 3e d4 \n'
Key error: 2633541321
Car Data:b'8,502,1 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,504,40 0 0 0 0 0 0 0 'database message: message('a', 0x1, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.4840014, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,14 14 14 14 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
data before shortening: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
message: data: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
utils: data: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.5057755, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 'Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'

Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'Car Data:b'8,2,2 2 2 2 0 0 0 0 '
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,501,3 0 0 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.530063, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.5470161, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'Car Data:b'8,500,40 0 0 0 0 0 0 0 '

Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,3 3 3 3 0 0 0 0 \n'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'Car Data:b'8,502,4 0 0 0 0 0 0 0 '

data before shortening: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
message: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
utils: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.5642037, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

decode simple: shortening data to a length: 8
Car Data:b'8,2,6 6 6 6 0 0 0 0 'data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.5821533, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1285

Car Data:b'8,502,0 0 0 0 0 0 0 0 'Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 13 3 4 5 4 4 4 \n'
Car Data:b'8,504,1 1 0 0 0 0 1 0 '

Key error: 1283
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3a '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Key error: 1285

Frame ID: 2     data: b'8,2,4 4 4 4 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
data before shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
message: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
Car Data:b'8,501,1 0 0 0 0 0 0 0 'utils: expected_length: 8

utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]Car Data:b'8,503,1 13 3 4 4 4 4 4 '

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.5983286, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.6184716, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,2,7 7 7 7 0 0 0 0 'Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283

Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 2     data: b'8,2,6 6 6 6 0 0 0 0 \n'

database message: message('b', 0x2, False, 8, None)Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Car Data:b'8,503,2 4 4 4 4 4 4 4 '

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
data before shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
message: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.6348858, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)Car Data:b'8,2,9 9 9 9 0 0 0 0 '

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,500,30 1a 63 0 0 99 42 0 '

utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,501,3 0 0 0 0 0 0 0 '

utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.6519833, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.6661863, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'Car Data:b'8,500,40 0 0 0 0 0 0 0 '

Key error: 1282
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,8 8 8 8 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
data before shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
message: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
Sent SQL
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.6777158, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,9 9 9 9 0 0 0 0 \n'
Car Data:b'8,2,b b b b 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
data before shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
message: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.6947563, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 'Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284

Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]Car Data:b'8,504,1 1 0 0 0 0 1 0 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '

Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
Car Data:b'8,500,10 0 0 0 0 0 0 0 'scaled: -126

Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
Car Data:b'8,503,1 12 3 4 5 4 4 4 '
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.7097166, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
scaled: -127
Unpacked value: 0

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.7238188, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,2,c c c c 0 0 0 0 'Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'

Key error: 1285
Frame ID: 2     data: b'8,2,b b b b 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

database: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
message: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
utils: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)Car Data:b'8,503,2 4 4 4 4 4 4 4 '

full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.733814, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,2,e e e e 0 0 0 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,502,3 0 0 0 0 0 0 0 '
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.7437494, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Frame ID: 2     data: b'8,2,d d d d 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
message: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.7549107, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,500,40 0 0 0 0 0 0 0 'Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

Car Data:b'8,502,4 0 0 0 0 0 0 0 '
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.7640338, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,e e e e 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)Car Data:b'8,503,4 4 3c 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'

data before shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
message: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'Car Data:b'8,2,10 10 10 10 0 0 0 0 '

utils: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.7740047, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,501,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Car Data:b'8,503,0 3d 3d 11 f f 12 3d '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
Key error: 1281

Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1285

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,10 0 0 0 0 0 0 0 'data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,502,1 0 0 0 0 0 0 0 '
Car Data:b'8,504,40 0 0 0 0 0 0 0 '

Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.784039, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a 'decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.7961135, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,502,2 0 0 0 0 0 0 0 '
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,504,80 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.8063142, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'
Key error: 1283
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 2     data: b'8,2,10 10 10 10 0 0 0 0 \n'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
data before shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'Car Data:b'8,501,3 0 0 0 0 0 0 0 '

message: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,503,3 4 4 3 3d 4 4 4 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.820547, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 'Key error: 1280

Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Car Data:b'8,501,4 0 0 0 0 0 0 0 '

utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.8330212, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 'database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>

database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
Sent SQL
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.8479316, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'Car Data:b'8,500,0 0 0 0 0 0 0 0 '

Key error: 1282
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Key error: 1280
Frame ID: 2     data: b'8,2,14 14 14 14 0 0 0 0 \n'
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
data before shortening: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
message: data: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
utils: data: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.8648877, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,10 0 0 0 0 0 0 0 'Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'

Key error: 1284
Car Data:b'8,3,2 0 2 0 2 0 2 0 'Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285

Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,502,1 0 0 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,504,40 0 0 0 0 0 0 0 '

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.8801186, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,13 13 13 13 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

database: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
data before shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
message: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.8930755, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 'Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282

Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,2,1 1 1 1 0 0 0 0 '
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)Car Data:b'8,501,3 0 0 0 0 0 0 0 '

full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.9050477, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Frame ID: 2     data: b'8,2,2 2 2 2 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
data before shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
data after shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
message: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.9169736, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.9274201, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,3 3 3 3 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

Car Data:b'8,2,5 5 5 5 0 0 0 0 '
database: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
data before shortening: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
message: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
utils: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.94049, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Key error: 1284
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285

Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,502,0 0 0 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283

Car Data:b'8,504,1 1 0 0 0 0 1 0 'Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3a '
Car Data:b'8,500,10 0 0 0 0 0 0 0 '

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.951319, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.9654, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'Car Data:b'8,2,6 6 6 6 0 0 0 0 '
Key error: 1284
Car Data:b'8,1,0 0 0 0 0 0 0 0 '

Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Car Data:b'8,2,8 8 8 8 0 0 0 0 '
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.9775517, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'
Key error: 1283
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
Key error: 1284
Frame ID: 2     data: b'8,2,5 5 5 5 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
data before shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
message: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
utils: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.9892023, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Key error: 1283
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Car Data:b'8,502,4 0 0 0 0 0 0 0 'Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128324.9992723, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.0130358, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,2,a a a a 0 0 0 0 '
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,0 3d 3d 11 10 f 12 3d \n'
Key error: 1283
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
scaled: -127
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3a '
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.0269344, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,501,1 0 0 0 0 0 0 0 'Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285

Car Data:b'8,503,1 12 3 4 4 4 4 4 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.037859, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,2,b b b b 0 0 0 0 '
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Key error: 1283
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,8 8 8 8 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
data before shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'Car Data:b'8,503,2 4 4 4 4 4 4 4 '

message: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.0508718, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,2,d d d d 0 0 0 0 '
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'
Key error: 1283
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,502,3 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.0638695, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1280
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Key error: 1283

Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.078422, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
decode simple: shortening data to a length: 8

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,2,f f f f 0 0 0 0 '

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.0913568, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Car Data:b'8,2,10 10 10 10 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Frame ID: 3     data: b'8,3,e 0 e 0 e 0 e 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0e\\x00\\x0e\\x00\\x0e\\x00\\x0e\\x0'
data before shortening: b'\\x0e\\x00\\x0e\\x00\\x0e\\x00\\x0e\\x0'Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '

decode simple: shortening data to a length: 8
data after shortening: b'\\x0e\\x00\\x0e\\x00\\x0e\\x00\\x0e\\x0'
message: data: b'\\x0e\\x00\\x0e\\x00\\x0e\\x00\\x0e\\x0'
utils: data: b'\\x0e\\x00\\x0e\\x00\\x0e\\x00\\x0e\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23653, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23653
conversion.py: 23653
scaled: 23653
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.1023245, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,1 12 3 4 5 4 4 4 \n'
Key error: 1283
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,500,10 0 0 0 0 0 0 0 '

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0Car Data:b'8,501,1 0 0 0 0 0 0 0 '

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
Car Data:b'8,503,1 12 3 4 4 4 4 4 'scaled: -126
Unpacked value: 0

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.115289, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283

Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,d d d d 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
data before shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
message: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,502,2 0 0 0 0 0 0 0 '

utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48Car Data:b'8,504,80 0 0 0 0 0 0 0 '

conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.1262155, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,2,13 13 13 13 0 0 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,503,3 4 4 3 3d 4 4 4 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.1372693, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

decode simple: shortening data to a length: 8Car Data:b'8,2,12 12 12 12 0 0 0 0 '

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.1488361, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Key error: 1283
Frame ID: 2     data: b'8,2,11 11 11 11 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
data before shortening: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
message: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
Car Data:b'8,501,4 0 0 0 0 0 0 0 '
utils: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.160172, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,12 0 12 0 12 0 12 0 \n'
database message: message('c', 0x3, False, 8, None)Car Data:b'8,1,0 0 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x12\\x00\\x12\\x00\\x12\\x00\\x12\\x0'
data before shortening: b'\\x12\\x00\\x12\\x00\\x12\\x00\\x12\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\x12\\x00\\x12\\x00\\x12\\x00\\x12\\x0'
message: data: b'\\x12\\x00\\x12\\x00\\x12\\x00\\x12\\x0'
utils: data: b'\\x12\\x00\\x12\\x00\\x12\\x00\\x12\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23602, 'c2': 12664, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12664
conversion.py: 12664
scaled: 12664
Unpacked value: 23602
conversion.py: 23602
scaled: 23602
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.170142, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0Car Data:b'8,502,0 0 0 0 0 0 0 0 '

scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
Car Data:b'8,503,0 3d 3d 11 f f 12 3d '
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.1791182, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '

Key error: 1281
Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0Car Data:b'8,501,1 0 0 0 0 0 0 0 '

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0Car Data:b'8,503,1 13 3 4 4 4 4 4 '

scaled: -127
Unpacked value: 0
scaled: -127
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.1895325, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.200098, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'Car Data:b'8,2,0 0 0 0 0 0 0 0 '
Key error: 1284

Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,0 0 0 0 0 0 0 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,2 4 4 4 4 4 4 4 '

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)Car Data:b'8,2,2 2 2 2 0 0 0 0 '

full unpacked: {'c4': 12408, 'c3': 23600, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.2090409, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'
Key error: 1283
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 2     data: b'8,2,14 14 14 14 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
data before shortening: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'Car Data:b'8,501,3 0 0 0 0 0 0 0 '

message: data: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
utils: data: b'\\x14\\x14\\x14\\x14\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.2236571, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,502,4 0 0 0 0 0 0 0 '

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.2344873, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)Car Data:b'8,2,4 4 4 4 0 0 0 0 '

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.24645, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285Car Data:b'8,500,0 0 0 0 0 0 0 0 '

Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,3 0 3 0 3 0 3 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,2,5 5 5 5 0 0 0 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '
database: data: b'\\x03\\x00\\x03\\x00\\x03\\x00\\x03\\x0'
data before shortening: b'\\x03\\x00\\x03\\x00\\x03\\x00\\x03\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x03\\x00\\x03\\x00\\x03\\x00\\x03\\x0'
message: data: b'\\x03\\x00\\x03\\x00\\x03\\x00\\x03\\x0'
utils: data: b'\\x03\\x00\\x03\\x00\\x03\\x00\\x03\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23603, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23603
conversion.py: 23603
scaled: 23603
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.2574549, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Car Data:b'8,501,1 0 0 0 0 0 0 0 'Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'

Car Data:b'8,503,1 13 3 4 4 4 4 4 'Key error: 1285

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.269326, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Car Data:b'8,502,2 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 2     data: b'8,2,2 2 2 2 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
data before shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
message: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.2808375, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 'Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,7 7 7 7 0 0 0 0 '
decode simple: shortening data to a length: 8Car Data:b'8,500,30 1a 63 0 0 99 42 0 '

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]Car Data:b'8,502,3 0 0 0 0 0 0 0 '

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.2928047, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.3051088, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,6 6 6 6 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
data before shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
message: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,500,40 0 0 0 0 0 0 0 '

utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]Car Data:b'8,2,9 9 9 9 0 0 0 0 '

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48Car Data:b'8,502,4 0 0 0 0 0 0 0 '

conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.3153715, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

Car Data:b'8,1,0 0 0 0 0 0 0 0 'database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.3254285, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'Car Data:b'8,500,0 0 0 0 0 0 0 0 '

Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,2,a a a a 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Key error: 1285
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '

Key error: 1283Car Data:b'8,500,10 0 0 0 0 0 0 0 '

Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 2     data: b'8,2,7 7 7 7 0 0 0 0 \n'Car Data:b'8,501,1 0 0 0 0 0 0 0 '

Car Data:b'8,503,1 12 3 4 5 4 4 4 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
data before shortening: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
message: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
utils: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.3374345, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.3505664, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,9 9 9 9 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
Car Data:b'8,502,2 0 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
data before shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'Car Data:b'8,504,80 0 0 0 0 0 0 0 '

message: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.3625338, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '

utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,502,3 0 0 0 0 0 0 0 '

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.3756065, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,2,c c c c 0 0 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.3875053, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Car Data:b'8,500,40 0 0 0 0 0 0 0 'Key error: 1283

Frame ID: 2     data: b'8,2,b b b b 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
message: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
utils: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]Car Data:b'8,3,e 0 e 0 e 0 e 0 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120

conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
Car Data:b'8,503,4 4 3c 0 0 0 0 0 '
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.4024282, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.420389, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Car Data:b'8,503,0 3d 3d 11 f f 12 3d '
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281Car Data:b'8,505,0 3a 3a 3a 3b 3b 3b 3b '

Frame ID: 1283     data: b'8,503,1 12 3 4 5 4 4 4 \n'
Key error: 1283
Car Data:b'8,2,f f f f 0 0 0 0 '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 2     data: b'8,2,c c c c 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
message: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
utils: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48Car Data:b'8,504,40 0 0 0 0 0 0 0 '

fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.436377, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.4562838, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'7,9cf8b6e8,3 11 2c 84 3f 3e d5 'Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,e e e e 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'

decode simple: shortening data to a length: 8Car Data:b'8,3,11 0 11 0 11 0 11 0 '

data after shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
message: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,503,2 4 5 4 4 4 4 4 '

utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.4692552, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,502,3 0 0 0 0 0 0 0 '

database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.4882398, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.5063803, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3c 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,10 10 10 10 0 0 0 0 \n'
Car Data:b'8,2,13 13 13 13 0 0 0 0 '
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
data before shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
message: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.5342817, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,0 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1283
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285
Car Data:b'8,3,14 0 14 0 14 0 14 0 'Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
Car Data:b'8,503,0 3d 3d 11 f f 12 3d '
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.5695267, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,502,1 0 0 0 0 0 0 0 '
Car Data:b'8,504,40 0 0 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.6109862, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a 'Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'

Key error: 1282
Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'Car Data:b'8,503,2 4 4 4 4 4 4 4 '
Key error: 1281

Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'
Key error: 1283
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,501,3 0 0 0 0 0 0 0 '

Unpacked value: 0
Car Data:b'8,503,3 4 4 3 3d 4 4 4 '
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.6392162, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,500,40 0 0 0 0 0 0 0 '

decode simple: shortening data to a length: 8
Car Data:b'8,501,4 0 0 0 0 0 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.6763155, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.7076757, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1285Car Data:b'8,502,0 0 0 0 0 0 0 0 '

Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,2 0 2 0 2 0 2 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x02\\x00\\x02\\x00\\x02\\x00\\x02\\x0'
data before shortening: b'\\x02\\x00\\x02\\x00\\x02\\x00\\x02\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x02\\x00\\x02\\x00\\x02\\x00\\x02\\x0'
message: data: b'\\x02\\x00\\x02\\x00\\x02\\x00\\x02\\x0'
utils: data: b'\\x02\\x00\\x02\\x00\\x02\\x00\\x02\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23602, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23602
conversion.py: 23602
scaled: 23602
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
 json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.7384748, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Car Data:b'8,3,5 0 5 0 5 0 5 0 '
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,1 0 0 0 0 0 0 0 'data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,504,40 0 0 0 0 0 0 0 '

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.7682335, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,1 1 1 1 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
data before shortening: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
message: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
utils: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]Car Data:b'8,501,2 0 0 0 0 0 0 0 '

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
Car Data:b'8,503,2 4 4 4 4 4 4 4 'full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48

scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.7971487, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,2,4 4 4 4 0 0 0 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.8291106, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 'Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>

database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.8582747, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,5 5 5 5 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
data before shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

message: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
utils: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'Car Data:b'8,502,4 0 0 0 0 0 0 0 '

utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.8873012, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 'Key error: 1280

Car Data:b'8,2,8 8 8 8 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.913178, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'Car Data:b'8,504,1 1 0 0 0 0 1 0 '

Key error: 1280
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Car Data:b'8,3,a 0 a 0 a 0 a 0 'Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'

Car Data:b'8,503,1 12 3 4 4 4 4 4 '
Key error: 1285
Frame ID: 2     data: b'8,2,6 6 6 6 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
data before shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
message: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.9383972, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,504,40 0 0 0 0 0 0 0 '

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128325.9748735, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,8 8 8 8 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
data before shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
data after shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
message: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.0048034, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,2,9 9 9 9 0 0 0 0 '

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.0307329, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.0626476, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,a a a a 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

data before shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
data after shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
message: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.0927758, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,2,d d d d 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.11692, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'Car Data:b'8,2,e e e e 0 0 0 0 '

Key error: 1285
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,505,0 3a 3a 3a 3b 3b 3b 3a '
Frame ID: 2     data: b'8,2,b b b b 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,500,10 0 0 0 0 0 0 0 '
database: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'

data before shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,501,1 0 0 0 0 0 0 0 '

data after shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
message: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
utils: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
Car Data:b'8,503,1 12 3 4 4 4 4 4 '
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.1438599, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.1764095, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Key error: 1285

Frame ID: 2     data: b'8,2,d d d d 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
database: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'Car Data:b'8,503,2 4 4 4 4 4 4 4 '

message: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.20032, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Car Data:b'8,2,10 10 10 10 0 0 0 0 '
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,3 0 0 0 0 0 0 0 'utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.2352116, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.2659798, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,f f f f 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,3,12 0 12 0 12 0 12 0 '
database: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 'message: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.293022, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,10 10 10 10 0 0 0 0 \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
data before shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,500,0 0 0 0 0 0 0 0 '

data after shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
message: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.3171988, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Car Data:b'8,502,0 0 0 0 0 0 0 0 'Key error: 1280

Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,503,0 3d 3d 11 f f 12 3d 'Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Key error: 1283

Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,502,1 0 0 0 0 0 0 0 '
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
Car Data:b'8,504,40 0 0 0 0 0 0 0 '
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.3420815, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.3757622, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,13 13 13 13 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

data before shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'Car Data:b'8,2,13 13 13 13 0 0 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
message: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.3971019, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'
Key error: 1283
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 2     data: b'8,2,12 12 12 12 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
data before shortening: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
data after shortening: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
message: data: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
utils: data: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.42104, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'Car Data:b'8,500,40 0 0 0 0 0 0 0 '

Key error: 1283
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0Car Data:b'8,502,4 0 0 0 0 0 0 0 '

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.4501922, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,2 2 2 2 0 0 0 0 '
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.475095, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 'Key error: 1280

Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3a '
Key error: 1281
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,0 0 0 0 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,3,4 0 4 0 4 0 4 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,503,1 13 3 4 4 4 4 4 '

utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48Car Data:b'8,504,40 0 0 0 0 0 0 0 '

conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.5062706, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.5463762, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285

Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,2 2 2 2 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
data before shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,503,2 4 4 4 4 4 4 4 'data after shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
message: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.5753443, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 'Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'

Key error: 1281
Car Data:b'8,2,3 3 3 3 0 0 0 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Key error: 1284

Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.5994742, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.6195264, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Key error: 1282

Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Key error: 1283

Frame ID: 2     data: b'8,2,4 4 4 4 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)Car Data:b'8,502,4 0 0 0 0 0 0 0 '

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
data before shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
message: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.639473, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,5 5 5 5 0 0 0 0 \n'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

database message: message('b', 0x2, False, 8, None)
Car Data:b'8,2,7 7 7 7 0 0 0 0 'message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>

database: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
data before shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
message: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
utils: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.653471, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 'Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284

Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b 'Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,503,1 13 3 4 4 4 4 4 '

Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.667399, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.6853857, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,2,8 8 8 8 0 0 0 0 'Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285

Frame ID: 2     data: b'8,2,7 7 7 7 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
data before shortening: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'data after shortening: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
message: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
utils: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Unpacked value: 120Car Data:b'8,503,2 4 4 4 4 4 4 4 '

conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.69935, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,2,a a a a 0 0 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,3 0 0 0 0 0 0 0 '
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.7148416, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,9 9 9 9 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
data before shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
data after shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
message: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'

utils: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.7298028, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283

Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

decode simple: shortening data to a length: 8
Car Data:b'8,502,4 0 0 0 0 0 0 0 'data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.7444015, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,a a a a 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
message: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
Car Data:b'8,2,c c c c 0 0 0 0 'utils: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.7602391, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,2,d d d d 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,504,1 1 0 0 0 0 1 0 'Frame ID: 1283     data: b'8,503,1 12 3 4 5 4 4 4 \n'
Key error: 1283

Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3a '
Key error: 1285

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,500,10 0 0 0 0 0 0 0 '

Car Data:b'8,501,1 0 0 0 0 0 0 0 'message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127Car Data:b'8,503,1 12 3 4 4 4 4 4 '

Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.7751987, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.7943919, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Key error: 1284

Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,502,2 0 0 0 0 0 0 0 'data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.8089967, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Car Data:b'8,2,f f f f 0 0 0 0 '
Key error: 1282
Car Data:b'8,500,30 1a 63 0 0 99 42 0 'Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284

Frame ID: 2     data: b'8,2,c c c c 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,502,3 0 0 0 0 0 0 0 '
data after shortening: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
message: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
utils: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.8258994, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,e 0 e 0 e 0 e 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0e\\x00\\x0e\\x00\\x0e\\x00\\x0e\\x0'
data before shortening: b'\\x0e\\x00\\x0e\\x00\\x0e\\x00\\x0e\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
data after shortening: b'\\x0e\\x00\\x0e\\x00\\x0e\\x00\\x0e\\x0'
message: data: b'\\x0e\\x00\\x0e\\x00\\x0e\\x00\\x0e\\x0'
utils: data: b'\\x0e\\x00\\x0e\\x00\\x0e\\x00\\x0e\\x0'

utils: expected_length: 8Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23653, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23653
conversion.py: 23653
scaled: 23653
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.839913, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,4 4 3c 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,500,40 0 0 0 0 0 0 0 '
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]Car Data:b'8,2,11 11 11 11 0 0 0 0 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.8538752, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,502,4 0 0 0 0 0 0 0 'Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>

database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.8677914, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3a 3b 3b 3b 3b \n'Car Data:b'8,500,0 0 0 0 0 0 0 0 '

Key error: 1285
Car Data:b'8,501,0 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,f f f f 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,503,0 3d 3d 11 f f 12 3d '
database: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
message: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.8808036, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,500,10 0 0 0 0 0 0 0 'Frame ID: 2633545448     data: b'7,9cf8b6e8,3 11 2c 84 3f 3e d5 \n'
Key error: 2633545448

Frame ID: 3     data: b'8,3,11 0 11 0 11 0 11 0 \n'Car Data:b'8,502,1 0 0 0 0 0 0 0 '
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>

database: data: b'\\x11\\x00\\x11\\x00\\x11\\x00\\x11\\x0'
data before shortening: b'\\x11\\x00\\x11\\x00\\x11\\x00\\x11\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,504,40 0 0 0 0 0 0 0 '

data after shortening: b'\\x11\\x00\\x11\\x00\\x11\\x00\\x11\\x0'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
message: data: b'\\x11\\x00\\x11\\x00\\x11\\x00\\x11\\x0'
utils: data: b'\\x11\\x00\\x11\\x00\\x11\\x00\\x11\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23601, 'c2': 12664, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12664
conversion.py: 12664
scaled: 12664
Unpacked value: 23601
conversion.py: 23601
scaled: 23601
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12664, 'c3': 23601, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.8978841, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23653, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,2 4 5 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285

Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,2 4 4 4 4 4 4 4 '

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.9181037, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
Car Data:b'8,503,3 4 4 3 3d 4 4 4 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.9367743, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Key error: 1280

Frame ID: 2     data: b'8,2,13 13 13 13 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
data before shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
message: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.95568, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Car Data:b'8,501,4 0 0 0 0 0 0 0 '
Key error: 1283
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.9746795, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 3     data: b'8,3,14 0 14 0 14 0 14 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x14\\x00\\x14\\x00\\x14\\x00\\x14\\x0'
data before shortening: b'\\x14\\x00\\x14\\x00\\x14\\x00\\x14\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,500,0 0 0 0 0 0 0 0 '

data after shortening: b'\\x14\\x00\\x14\\x00\\x14\\x00\\x14\\x0'
message: data: b'\\x14\\x00\\x14\\x00\\x14\\x00\\x14\\x0'
utils: data: b'\\x14\\x00\\x14\\x00\\x14\\x00\\x14\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23604, 'c2': 12664, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12664
conversion.py: 12664
scaled: 12664
Unpacked value: 23604
conversion.py: 23604
scaled: 23604
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12664, 'c3': 23604, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128326.993865, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280

Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,502,0 0 0 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,0 3d 3d 11 f f 12 3d '

Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b 'data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.011816, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,500,10 0 0 0 0 0 0 0 'Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'Car Data:b'8,501,1 0 0 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127

Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.0318158, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,2,2 2 2 2 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,1,0 0 0 0 0 0 0 0 'message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,501,2 0 0 0 0 0 0 0 '

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.0517652, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Key error: 1281

Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'Car Data:b'8,2,4 4 4 4 0 0 0 0 '

Key error: 1283
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.0707645, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,502,4 0 0 0 0 0 0 0 '

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.0945253, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,6 6 6 6 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.1186604, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Car Data:b'8,2,7 7 7 7 0 0 0 0 'Key error: 1284

Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Car Data:b'8,502,0 0 0 0 0 0 0 0 'Key error: 1285

Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Key error: 1280
Frame ID: 3     data: b'8,3,5 0 5 0 5 0 5 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x05\\x00\\x05\\x00\\x05\\x00\\x05\\x0'
data before shortening: b'\\x05\\x00\\x05\\x00\\x05\\x00\\x05\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
data after shortening: b'\\x05\\x00\\x05\\x00\\x05\\x00\\x05\\x0'
message: data: b'\\x05\\x00\\x05\\x00\\x05\\x00\\x05\\x0'
utils: data: b'\\x05\\x00\\x05\\x00\\x05\\x00\\x05\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23605, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23605
conversion.py: 23605
scaled: 23605
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.1438224, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,500,10 0 0 0 0 0 0 0 '

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,501,1 0 0 0 0 0 0 0 '

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.1668844, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,4 4 4 4 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
data before shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
message: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
utils: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48Car Data:b'8,502,2 0 0 0 0 0 0 0 '

Unpacked value: 92Car Data:b'8,504,80 0 0 0 0 0 0 0 '
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48

conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.1863964, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Key error: 1284
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,3 0 0 0 0 0 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.2063422, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,504,c1 0 0 0 0 1 0 0 'database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,9 9 9 9 0 0 0 0 '
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.226294, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,40 0 0 0 0 0 0 0 'Key error: 1282

Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283Car Data:b'8,3,b 0 b 0 b 0 b 0 '

Frame ID: 2     data: b'8,2,8 8 8 8 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)Car Data:b'8,502,4 0 0 0 0 0 0 0 '

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
data before shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
message: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.2463405, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.2642498, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284Car Data:b'8,500,0 0 0 0 0 0 0 0 '

Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'Car Data:b'8,3,c 0 c 0 c 0 c 0 '
Key error: 1285

Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,a 0 a 0 a 0 a 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0a\\x00\\x0a\\x00\\x0a\\x00\\x0a\\x0'
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
data before shortening: b'\\x0a\\x00\\x0a\\x00\\x0a\\x00\\x0a\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0a\\x00\\x0a\\x00\\x0a\\x00\\x0a\\x0'
message: data: b'\\x0a\\x00\\x0a\\x00\\x0a\\x00\\x0a\\x0'
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3a 'utils: data: b'\\x0a\\x00\\x0a\\x00\\x0a\\x00\\x0a\\x0'

utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23649, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23649
conversion.py: 23649
scaled: 23649
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.2792592, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Car Data:b'8,503,1 12 3 4 4 4 4 4 '
Key error: 1285
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.2956018, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,9 9 9 9 0 0 0 0 \n'

database message: message('b', 0x2, False, 8, None)Car Data:b'8,1,0 0 0 0 0 0 0 0 '

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,502,2 0 0 0 0 0 0 0 '

database: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'Car Data:b'8,504,80 0 0 0 0 0 0 0 '

data before shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
message: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.3115506, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 'Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,2,f f f f 0 0 0 0 '
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,503,3 4 4 3 3d 4 4 4 '

Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.326514, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 'Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,e e e e 0 0 0 0 '
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.3417006, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283

Frame ID: 2     data: b'8,2,d d d d 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,3,10 0 10 0 10 0 10 0 '

data after shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
message: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.3569062, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,e e e e 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
database: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
message: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.371999, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3a 3b 3b 3b 3a \n'
Key error: 1285
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280

Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'Car Data:b'8,502,0 0 0 0 0 0 0 0 '

Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,503,0 3d 3d 11 f f 12 3d '
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
Car Data:b'8,500,10 0 0 0 0 0 0 0 '

decode simple: shortening data to a length: 8Car Data:b'8,1,0 0 0 0 0 0 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]Car Data:b'8,502,1 0 0 0 0 0 0 0 '
Car Data:b'8,504,40 0 0 0 0 0 0 0 '

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.38692, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.4060147, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'Key error: 1285
Frame ID: 2     data: b'8,2,10 10 10 10 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
data before shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'

message: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92Car Data:b'8,503,2 4 4 4 4 4 4 4 '

Unpacked value: 120Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.4200191, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Car Data:b'8,2,11 11 11 11 0 0 0 0 '
Key error: 1280
Car Data:b'8,500,30 1a 63 0 0 99 42 0 'Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'

Key error: 1282
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,501,3 0 0 0 0 0 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.4349878, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 3     data: b'8,3,12 0 12 0 12 0 12 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x12\\x00\\x12\\x00\\x12\\x00\\x12\\x0'Car Data:b'8,500,40 0 0 0 0 0 0 0 '

data before shortening: b'\\x12\\x00\\x12\\x00\\x12\\x00\\x12\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x12\\x00\\x12\\x00\\x12\\x00\\x12\\x0'
message: data: b'\\x12\\x00\\x12\\x00\\x12\\x00\\x12\\x0'
utils: data: b'\\x12\\x00\\x12\\x00\\x12\\x00\\x12\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23602, 'c2': 12664, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12664
conversion.py: 12664
scaled: 12664
Unpacked value: 23602
conversion.py: 23602
scaled: 23602
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.4509528, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23649, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,4 0 0 0 0 0 0 0 'message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.4689102, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

Car Data:b'8,2,0 0 0 0 0 0 0 0 'data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.4908278, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3a '

utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.5128524, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'Car Data:b'8,3,2 0 2 0 2 0 2 0 '
Key error: 1285

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'Car Data:b'8,503,1 13 3 4 4 4 4 4 '

Car Data:b'8,504,40 0 0 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.5391257, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

Key error: 1285
Frame ID: 2     data: b'8,2,13 13 13 13 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
data before shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
data after shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
message: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.5630133, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 'Key error: 1280

Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,2,1 1 1 1 0 0 0 0 'database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,501,3 0 0 0 0 0 0 0 '

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.58821, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.61419, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,500,40 0 0 0 0 0 0 0 'Frame ID: 2     data: b'8,2,2 2 2 2 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>

database: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
data before shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
message: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

utils: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]Car Data:b'8,502,4 0 0 0 0 0 0 0 '

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.6394067, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,2,5 5 5 5 0 0 0 0 '
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.662946, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3a \n'
Car Data:b'8,502,0 0 0 0 0 0 0 0 'Key error: 1285

Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,4 0 4 0 4 0 4 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x04\\x00\\x04\\x00\\x04\\x00\\x04\\x0'
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
data before shortening: b'\\x04\\x00\\x04\\x00\\x04\\x00\\x04\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x04\\x00\\x04\\x00\\x04\\x00\\x04\\x0'
message: data: b'\\x04\\x00\\x04\\x00\\x04\\x00\\x04\\x0'
utils: data: b'\\x04\\x00\\x04\\x00\\x04\\x00\\x04\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23604, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23604
conversion.py: 23604
scaled: 23604
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.6867452, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.7224355, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Car Data:b'8,2,6 6 6 6 0 0 0 0 '
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Key error: 1285
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,3 3 3 3 0 0 0 0 \n'
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
data before shortening: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
message: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
utils: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.750605, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Car Data:b'8,2,8 8 8 8 0 0 0 0 '
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,502,3 0 0 0 0 0 0 0 '
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.7751453, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,1,0 0 0 0 0 0 0 0 '

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.7940488, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282Car Data:b'8,500,40 0 0 0 0 0 0 0 '

Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,2,a a a a 0 0 0 0 '
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,7 7 7 7 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
data before shortening: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
message: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
utils: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.812052, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.8313627, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Car Data:b'8,3,b 0 b 0 b 0 b 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,505,0 3a 3a 3a 3b 3b 3b 3a '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 2     data: b'8,2,8 8 8 8 0 0 0 0 \n'Car Data:b'8,500,10 0 0 0 0 0 0 0 '

database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
Car Data:b'8,501,1 0 0 0 0 0 0 0 'data before shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
message: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'

utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Car Data:b'8,503,1 12 3 4 4 4 4 4 '
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.851327, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a 'utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.8694918, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1285

Frame ID: 2     data: b'8,2,a a a a 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
message: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'Car Data:b'8,502,2 0 0 0 0 0 0 0 '

Car Data:b'8,503,2 4 4 4 4 4 4 4 '
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.8836665, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Key error: 1280
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 'Key error: 1282

Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Key error: 1284

Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,502,3 0 0 0 0 0 0 0 '
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.897926, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,2,d d d d 0 0 0 0 '

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.9139225, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,c c c c 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,3,f 0 f 0 f 0 f 0 '
data after shortening: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
message: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
utils: data: b'\\x0c\\x0c\\x0c\\x0c\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.9268847, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,d d d d 0 0 0 0 \n'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 'database message: message('b', 0x2, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
message: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.9444456, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Key error: 1285Car Data:b'8,500,0 0 0 0 0 0 0 0 '

Car Data:b'8,3,10 0 10 0 10 0 10 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,500,10 0 0 0 0 0 0 0 '

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Car Data:b'8,503,1 12 3 4 4 4 4 4 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.9618518, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128327.983797, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1282
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Car Data:b'8,502,2 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 2     data: b'8,2,f f f f 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
Car Data:b'8,504,80 0 0 0 0 0 0 0 '
message: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.0007002, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

Key error: 1280
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 'Key error: 1284

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,3,13 0 13 0 13 0 13 0 '

Car Data:b'8,503,3 4 4 3 3d 4 4 4 'data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.0216525, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Car Data:b'8,2,12 12 12 12 0 0 0 0 'Frame ID: 2     data: b'8,2,11 11 11 11 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
data before shortening: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
message: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
utils: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.0403688, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'Car Data:b'8,500,40 0 0 0 0 0 0 0 '

Key error: 1283
Car Data:b'8,501,4 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.0573962, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,0 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,504,1 1 0 0 0 0 1 0 'database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.0784981, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3a '
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Car Data:b'8,3,1 0 1 0 1 0 1 0 '

Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,502,1 0 0 0 0 0 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Car Data:b'8,504,40 0 0 0 0 0 0 0 'Unpacked value: 0

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.1044302, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '

Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'Car Data:b'8,501,2 0 0 0 0 0 0 0 '

Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,2 4 4 4 4 4 4 4 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.129362, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'
Key error: 1283
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,2,0 0 0 0 0 0 0 0 '
Key error: 1284
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.157437, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'Car Data:b'8,500,40 0 0 0 0 0 0 0 '

Key error: 1283
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,502,4 0 0 0 0 0 0 0 '

database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.1877701, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,4 4 4 4 0 0 0 0 'message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.204891, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 2     data: b'8,2,2 2 2 2 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '
data before shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
message: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)Car Data:b'8,500,10 0 0 0 0 0 0 0 '

full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92Car Data:b'8,3,6 0 6 0 6 0 6 0 '

conversion.py: 92Car Data:b'8,503,1 13 3 4 4 4 4 4 '

scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.2240481, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,504,40 0 0 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.2441437, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,4 4 4 4 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
data before shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

data after shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
message: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
Car Data:b'8,501,2 0 0 0 0 0 0 0 'scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Car Data:b'8,503,2 4 4 4 4 4 4 4 '

Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.263048, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Car Data:b'8,2,5 5 5 5 0 0 0 0 '
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,501,3 0 0 0 0 0 0 0 '

database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.2840471, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.3037114, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,6 6 6 6 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
Car Data:b'8,502,4 0 0 0 0 0 0 0 'data before shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
message: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.3172138, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,7 7 7 7 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
data before shortening: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Car Data:b'8,2,9 9 9 9 0 0 0 0 '

message: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
utils: data: b'\\x07\\x07\\x07\\x07\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.3316731, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'Car Data:b'8,500,0 0 0 0 0 0 0 0 '

Key error: 1285
Car Data:b'8,2,a a a a 0 0 0 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,0 3a 3a 3a 3b 3b 3b 3a '
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,503,1 12 3 4 4 4 4 4 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.3456793, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a 'decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.361877, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'7,9cf8868b,3 11 2c 84 3f 3e d6 'Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Key error: 1284

Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280

Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,502,2 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
Car Data:b'8,504,80 0 0 0 0 0 0 0 '
scaled: -127
Unpacked value: 0
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.375799, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
Key error: 1284
Frame ID: 2     data: b'8,2,9 9 9 9 0 0 0 0 \n'Car Data:b'8,503,3 4 4 3 3d 4 4 4 '

database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
data before shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
message: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.3931248, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Key error: 1280
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 3     data: b'8,3,b 0 b 0 b 0 b 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0b\\x00\\x0b\\x00\\x0b\\x00\\x0b\\x0'
data before shortening: b'\\x0b\\x00\\x0b\\x00\\x0b\\x00\\x0b\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0b\\x00\\x0b\\x00\\x0b\\x00\\x0b\\x0'
message: data: b'\\x0b\\x00\\x0b\\x00\\x0b\\x00\\x0b\\x0'
utils: data: b'\\x0b\\x00\\x0b\\x00\\x0b\\x00\\x0b\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23650, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23650
conversion.py: 23650
scaled: 23650
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23650, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.408323, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23604, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,501,4 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.422285, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23650, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 3     data: b'8,3,c 0 c 0 c 0 c 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0c\\x00\\x0c\\x00\\x0c\\x00\\x0c\\x0'

data before shortening: b'\\x0c\\x00\\x0c\\x00\\x0c\\x00\\x0c\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0c\\x00\\x0c\\x00\\x0c\\x00\\x0c\\x0'
message: data: b'\\x0c\\x00\\x0c\\x00\\x0c\\x00\\x0c\\x0'
utils: data: b'\\x0c\\x00\\x0c\\x00\\x0c\\x00\\x0c\\x0'
utils: expected_length: 8Car Data:b'8,500,0 0 0 0 0 0 0 0 '

utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23651, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23651
conversion.py: 23651
scaled: 23651
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23651, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.4382446, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23650, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,502,0 0 0 0 0 0 0 0 'Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Key error: 1285

Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,503,0 3d 3d 11 f f 12 3d '
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3a '

Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,500,10 0 0 0 0 0 0 0 '

Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126Car Data:b'8,501,1 0 0 0 0 0 0 0 '

Unpacked value: 0
scaled: -127
Unpacked value: 0Car Data:b'8,503,1 12 3 4 5 4 4 4 '

scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.4524055, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23651, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.4713562, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23651, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Car Data:b'8,2,f f f f 0 0 0 0 'Key error: 1282

Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,f f f f 0 0 0 0 \n'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'Car Data:b'8,501,2 0 0 0 0 0 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
message: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,503,2 4 4 4 4 4 4 4 '

utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
Car Data:b'8,2,11 11 11 11 0 0 0 0 '
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.4833336, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23651, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'
Key error: 1283
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 2     data: b'8,2,e e e e 0 0 0 0 \n'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 'database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'

data before shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
message: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,502,3 0 0 0 0 0 0 0 '
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.4982913, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23651, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,10 0 10 0 10 0 10 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x10\\x00\\x10\\x00\\x10\\x00\\x10\\x0'
data before shortening: b'\\x10\\x00\\x10\\x00\\x10\\x00\\x10\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x10\\x00\\x10\\x00\\x10\\x00\\x10\\x0'
message: data: b'\\x10\\x00\\x10\\x00\\x10\\x00\\x10\\x0'
utils: data: b'\\x10\\x00\\x10\\x00\\x10\\x00\\x10\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)Car Data:b'8,1,0 0 0 0 0 0 0 0 '
full unpacked: {'c4': 12408, 'c3': 23600, 'c2': 12664, 'c1': 23600}
Unpacked value: 23600

conversion.py: 23600
scaled: 23600
Unpacked value: 12664
conversion.py: 12664
scaled: 12664
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.5133827, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23651, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,3,13 0 13 0 13 0 13 0 '
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.526165, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,502,4 0 0 0 0 0 0 0 'Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'

database message: message('a', 0x1, False, 8, None)
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.5411675, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283

Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,500,0 0 0 0 0 0 0 0 'Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'

Car Data:b'8,501,0 0 0 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,503,0 3d 3d 11 f f 12 3d '

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.5553315, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,502,1 0 0 0 0 0 0 0 'data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126Car Data:b'8,504,40 0 0 0 0 0 0 0 '

Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.5753562, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Key error: 1285

Frame ID: 2     data: b'8,2,11 11 11 11 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
data before shortening: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
message: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
utils: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.6016083, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,500,30 1a 63 0 0 99 42 0 '

utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.6265326, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'Car Data:b'8,503,3 4 4 3 3d 4 4 4 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.6541138, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,0 0 0 0 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,502,4 0 0 0 0 0 0 0 '

utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.6782892, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.702015, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3a \n'
Key error: 1285
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Key error: 1280
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3b '
Frame ID: 3     data: b'8,3,2 0 2 0 2 0 2 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x02\\x00\\x02\\x00\\x02\\x00\\x02\\x0'
data before shortening: b'\\x02\\x00\\x02\\x00\\x02\\x00\\x02\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x02\\x00\\x02\\x00\\x02\\x00\\x02\\x0'
message: data: b'\\x02\\x00\\x02\\x00\\x02\\x00\\x02\\x0'
utils: data: b'\\x02\\x00\\x02\\x00\\x02\\x00\\x02\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23602, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23602
conversion.py: 23602
scaled: 23602
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.7239099, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Car Data:b'8,3,5 0 5 0 5 0 5 0 '
Key error: 1285
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,504,40 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.7560675, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,501,2 0 0 0 0 0 0 0 'Frame ID: 2     data: b'8,2,1 1 1 1 0 0 0 0 \n'

Car Data:b'8,503,2 4 4 4 4 4 4 4 'database message: message('b', 0x2, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
data before shortening: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
message: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
utils: data: b'\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.7891684, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 'Key error: 1280

Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,2,4 4 4 4 0 0 0 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.8091114, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.8277137, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,5 5 5 5 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
database: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
data before shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'Car Data:b'8,502,4 0 0 0 0 0 0 0 '
message: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
utils: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'

utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.8456612, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,8 8 8 8 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.8648033, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,500,0 0 0 0 0 0 0 0 'Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285

Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'Car Data:b'8,2,9 9 9 9 0 0 0 0 '

Key error: 1281
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3a 'Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283

Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 2     data: b'8,2,6 6 6 6 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
data before shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'Car Data:b'8,500,10 0 0 0 0 0 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
message: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: data: b'\\x06\\x06\\x06\\x06\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]Car Data:b'8,501,1 0 0 0 0 0 0 0 '

utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48Car Data:b'8,503,1 13 3 4 4 4 4 4 '

Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.879979, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.896942, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,1,0 0 0 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'

Car Data:b'8,1,0 0 0 0 0 0 0 0 'Key error: 1283

Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,8 8 8 8 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
data before shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
message: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'Car Data:b'8,503,2 4 4 4 4 4 4 4 '

utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.910856, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,2,b b b b 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.9258158, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,a a a a 0 0 0 0 \n'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
database message: message('b', 0x2, False, 8, None)

message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
database: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8

data after shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
message: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.9418166, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 'Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283

Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,2,d d d d 0 0 0 0 '

data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.9583173, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,b 0 b 0 b 0 b 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0b\\x00\\x0b\\x00\\x0b\\x00\\x0b\\x0'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 'data before shortening: b'\\x0b\\x00\\x0b\\x00\\x0b\\x00\\x0b\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0b\\x00\\x0b\\x00\\x0b\\x00\\x0b\\x0'

message: data: b'\\x0b\\x00\\x0b\\x00\\x0b\\x00\\x0b\\x0'
utils: data: b'\\x0b\\x00\\x0b\\x00\\x0b\\x00\\x0b\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23650, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23650
conversion.py: 23650
scaled: 23650
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23650, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.9743748, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23602, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3a 3b 3b 3b 3a \n'
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Car Data:b'8,2,e e e e 0 0 0 0 '
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Car Data:b'8,505,0 3a 3a 3b 3b 3b 3b 3a '
Key error: 1281
Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128328.9895084, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23650, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.0055063, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23650, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,502,2 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Car Data:b'8,504,80 0 0 0 0 0 0 0 '
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.02011, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23650, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Key error: 1282
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 2     data: b'8,2,d d d d 0 0 0 0 \n'Car Data:b'8,502,3 0 0 0 0 0 0 0 '

database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
message: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.0353627, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23650, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,f 0 f 0 f 0 f 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
database: data: b'\\x0f\\x00\\x0f\\x00\\x0f\\x00\\x0f\\x0'
Car Data:b'8,2,10 10 10 10 0 0 0 0 '
data before shortening: b'\\x0f\\x00\\x0f\\x00\\x0f\\x00\\x0f\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0f\\x00\\x0f\\x00\\x0f\\x00\\x0f\\x0'
message: data: b'\\x0f\\x00\\x0f\\x00\\x0f\\x00\\x0f\\x0'
utils: data: b'\\x0f\\x00\\x0f\\x00\\x0f\\x00\\x0f\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23654, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23654
conversion.py: 23654
scaled: 23654
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23654, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.0484993, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23650, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Car Data:b'8,501,4 0 0 0 0 0 0 0 '
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.0628507, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23654, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,10 0 10 0 10 0 10 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x10\\x00\\x10\\x00\\x10\\x00\\x10\\x0'
data before shortening: b'\\x10\\x00\\x10\\x00\\x10\\x00\\x10\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x10\\x00\\x10\\x00\\x10\\x00\\x10\\x0'
message: data: b'\\x10\\x00\\x10\\x00\\x10\\x00\\x10\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,500,0 0 0 0 0 0 0 0 '

utils: data: b'\\x10\\x00\\x10\\x00\\x10\\x00\\x10\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23600, 'c2': 12664, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12664
conversion.py: 12664
scaled: 12664
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.078021, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23654, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,0 3d 3d 11 f f 12 3d '

utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.0914693, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3a '
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0

Car Data:b'8,502,1 0 0 0 0 0 0 0 '
scaled: -127
Unpacked value: 0Car Data:b'8,504,40 0 0 0 0 0 0 0 '

scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.105565, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.1195266, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Car Data:b'8,501,2 0 0 0 0 0 0 0 '

Key error: 1280
Frame ID: 3     data: b'8,3,13 0 13 0 13 0 13 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x13\\x00\\x13\\x00\\x13\\x00\\x13\\x0'
data before shortening: b'\\x13\\x00\\x13\\x00\\x13\\x00\\x13\\x0'
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x13\\x00\\x13\\x00\\x13\\x00\\x13\\x0'
message: data: b'\\x13\\x00\\x13\\x00\\x13\\x00\\x13\\x0'
Car Data:b'8,2,13 13 13 13 0 0 0 0 '
utils: data: b'\\x13\\x00\\x13\\x00\\x13\\x00\\x13\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23603, 'c2': 12664, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12664
conversion.py: 12664
scaled: 12664
Unpacked value: 23603
conversion.py: 23603
scaled: 23603
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.145444, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23600, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'Car Data:b'8,500,30 1a 63 0 0 99 42 0 '

Key error: 1283
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,12 12 12 12 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
data before shortening: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'Car Data:b'8,504,c1 0 0 0 0 1 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
message: data: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
utils: data: b'\\x12\\x12\\x12\\x12\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.1746347, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Key error: 1281
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.2029707, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,2,2 2 2 2 0 0 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.227006, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 'Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284

Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3a \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Key error: 1280
Frame ID: 3     data: b'8,3,1 0 1 0 1 0 1 0 \n'Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '

database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x01\\x00\\x01\\x00\\x01\\x00\\x01\\x0'
data before shortening: b'\\x01\\x00\\x01\\x00\\x01\\x00\\x01\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x01\\x00\\x01\\x00\\x01\\x00\\x01\\x0'
message: data: b'\\x01\\x00\\x01\\x00\\x01\\x00\\x01\\x0'
utils: data: b'\\x01\\x00\\x01\\x00\\x01\\x00\\x01\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23601, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23601
conversion.py: 23601
scaled: 23601
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23601, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.2519, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Car Data:b'8,500,10 0 0 0 0 0 0 0 'Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282

Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,503,1 13 3 4 4 4 4 4 '

decode simple: shortening data to a length: 8Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.2768333, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,2,3 3 3 3 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Car Data:b'8,501,2 0 0 0 0 0 0 0 'Key error: 1285

Car Data:b'8,503,2 4 5 4 4 4 4 4 '
Frame ID: 2     data: b'8,2,0 0 0 0 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.3010373, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Key error: 1284
Car Data:b'8,2,5 5 5 5 0 0 0 0 'Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Unpacked value: 0

scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,501,3 0 0 0 0 0 0 0 '

Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.3290222, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.353912, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,4 4 4 4 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 'message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>

Car Data:b'8,502,4 0 0 0 0 0 0 0 '
database: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
data before shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
message: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.3838253, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Car Data:b'8,2,7 7 7 7 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.4082074, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,2,8 8 8 8 0 0 0 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
Frame ID: 3     data: b'8,3,6 0 6 0 6 0 6 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x06\\x00\\x06\\x00\\x06\\x00\\x06\\x0'
data before shortening: b'\\x06\\x00\\x06\\x00\\x06\\x00\\x06\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x06\\x00\\x06\\x00\\x06\\x00\\x06\\x0'
message: data: b'\\x06\\x00\\x06\\x00\\x06\\x00\\x06\\x0'
utils: data: b'\\x06\\x00\\x06\\x00\\x06\\x00\\x06\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23606, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23606
conversion.py: 23606
scaled: 23606
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.4301567, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23601, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.4550412, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 2     data: b'8,2,5 5 5 5 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
data before shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,1,0 0 0 0 0 0 0 0 'data after shortening: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
message: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
Car Data:b'8,501,2 0 0 0 0 0 0 0 '

utils: data: b'\\x05\\x05\\x05\\x05\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Car Data:b'8,503,2 4 4 4 4 4 4 4 'Unpacked value: 92

conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.4791427, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,2,a a a a 0 0 0 0 '
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,501,3 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.5020661, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.5250077, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,9 9 9 9 0 0 0 0 \n'Car Data:b'8,500,40 0 0 0 0 0 0 0 '

database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'Car Data:b'8,2,c c c c 0 0 0 0 '
Car Data:b'8,502,4 0 0 0 0 0 0 0 '

data before shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
message: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.547764, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQLFrame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280

Frame ID: 2     data: b'8,2,a a a a 0 0 0 0 \n'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
message: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: data: b'\\x0a\\x0a\\x0a\\x0a\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.5697043, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3a 3b 3b 3b 3a \n'
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Car Data:b'8,2,d d d d 0 0 0 0 'Key error: 1285

Car Data:b'8,502,0 0 0 0 0 0 0 0 'Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281

Car Data:b'8,504,1 1 0 0 0 0 1 0 'Frame ID: 1283     data: b'8,503,1 12 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 2633533067     data: b'7,9cf8868b,3 11 2c 84 3f 3e d6 \n'
Key error: 2633533067
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Car Data:b'8,503,1 12 3 4 4 4 4 4 '
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.5926352, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,502,2 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Car Data:b'8,504,80 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'
Key error: 1283
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '

database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 'decode simple: shortening data to a length: 8
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Car Data:b'8,502,3 0 0 0 0 0 0 0 '

Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.6175704, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,2,f f f f 0 0 0 0 '
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,3,11 0 11 0 11 0 11 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,502,4 0 0 0 0 0 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.6445577, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.6674354, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Key error: 1281
Frame ID: 1283     data: b'8,503,1 12 3 4 5 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 2     data: b'8,2,f f f f 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,501,0 0 0 0 0 0 0 0 '

data after shortening: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
Car Data:b'8,503,0 3d 3d 11 f f 12 3d '
message: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: data: b'\\x0f\\x0f\\x0f\\x0f\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92Car Data:b'8,505,0 3a 3a 3a 3b 3a 3a 3b '
Car Data:b'8,500,10 0 0 0 0 0 0 0 '

conversion.py: 92Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,502,1 0 0 0 0 0 0 0 '
Car Data:b'8,504,40 0 0 0 0 0 0 0 '

scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.688986, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a 'database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.7135336, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,11 11 11 11 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Car Data:b'8,503,2 4 4 4 4 4 4 4 '
data before shortening: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
data after shortening: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
message: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
utils: data: b'\\x11\\x11\\x11\\x11\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.7335365, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,501,3 0 0 0 0 0 0 0 '

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127Car Data:b'8,503,3 4 4 3 3d 4 4 4 '

Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.7624087, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Key error: 1280
Frame ID: 3     data: b'8,3,13 0 13 0 13 0 13 0 \n'
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x13\\x00\\x13\\x00\\x13\\x00\\x13\\x0'
data before shortening: b'\\x13\\x00\\x13\\x00\\x13\\x00\\x13\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x13\\x00\\x13\\x00\\x13\\x00\\x13\\x0'
message: data: b'\\x13\\x00\\x13\\x00\\x13\\x00\\x13\\x0'
utils: data: b'\\x13\\x00\\x13\\x00\\x13\\x00\\x13\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23603, 'c2': 12664, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12664
conversion.py: 12664
scaled: 12664
Unpacked value: 23603
conversion.py: 23603
scaled: 23603
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.7913613, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23606, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.8135257, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,0 0 0 0 0 0 0 0 \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

Car Data:b'8,500,0 0 0 0 0 0 0 0 'Key error: 1281

Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '

decode simple: shortening data to a length: 8
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.8315141, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,3,3 0 3 0 3 0 3 0 '
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

Car Data:b'8,503,1 13 3 4 4 4 4 4 '
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8Car Data:b'8,504,40 0 0 0 0 0 0 0 '

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.847472, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a 'Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'

Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,503,2 4 5 4 4 4 4 4 'database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.8665478, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,3 4 4 3 3d 4 4 4 \n'Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Car Data:b'8,2,2 2 2 2 0 0 0 0 '

Key error: 1283
Car Data:b'8,500,30 1a 63 0 0 99 42 0 'Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'

Car Data:b'8,501,3 0 0 0 0 0 0 0 '
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.8874862, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Key error: 1283
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,500,40 0 0 0 0 0 0 0 '

data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]

Car Data:b'8,502,4 0 0 0 0 0 0 0 '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.9044404, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'

utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Car Data:b'8,2,6 6 6 6 0 0 0 0 '
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.9207637, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 'Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3b \n'

Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 3     data: b'8,3,5 0 5 0 5 0 5 0 \n'
Car Data:b'8,2,7 7 7 7 0 0 0 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
database message: message('c', 0x3, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x05\\x00\\x05\\x00\\x05\\x00\\x05\\x0'
data before shortening: b'\\x05\\x00\\x05\\x00\\x05\\x00\\x05\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x05\\x00\\x05\\x00\\x05\\x00\\x05\\x0'
message: data: b'\\x05\\x00\\x05\\x00\\x05\\x00\\x05\\x0'Car Data:b'8,505,0 3a 3a 3a 3b 3b 3b 3b '

utils: data: b'\\x05\\x00\\x05\\x00\\x05\\x00\\x05\\x0'
utils: expected_length: 8
utils: signals: [signal('c1', 0, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c2', 16, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c3', 32, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('c4', 48, 16, 'little_endian', True, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A9E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8DD0>, padding_mask=0)
full unpacked: {'c4': 12408, 'c3': 23605, 'c2': 12408, 'c1': 23600}
Unpacked value: 23600
conversion.py: 23600
scaled: 23600
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
Unpacked value: 23605
conversion.py: 23605
scaled: 23605
Unpacked value: 12408
conversion.py: 12408
scaled: 12408
fulle decoded: {'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.9337735, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12664, 'c3': 23603, 'c4': 12408}
Sent SQL
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'Car Data:b'8,500,10 0 0 0 0 0 0 0 '

Key error: 1285
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.9481134, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,4 4 4 4 0 0 0 0 \n'Car Data:b'8,1,0 0 0 0 0 0 0 0 '

Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
data before shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
message: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'Car Data:b'8,503,2 4 4 4 4 4 4 4 '

utils: data: b'\\x04\\x04\\x04\\x04\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.961421, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Car Data:b'8,2,9 9 9 9 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,500,30 1a 63 0 0 99 42 0 '

decode simple: shortening data to a length: 8
Car Data:b'8,501,3 0 0 0 0 0 0 0 'data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.9753635, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128329.9958732, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Key error: 1282
Car Data:b'8,2,b b b b 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,8 8 8 8 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
data before shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
Car Data:b'8,502,4 0 0 0 0 0 0 0 'decode simple: shortening data to a length: 8

data after shortening: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
message: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: data: b'\\x08\\x08\\x08\\x08\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.0160363, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 2     data: b'8,2,9 9 9 9 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
data before shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
message: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '

utils: data: b'\\x09\\x09\\x09\\x09\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.0397635, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3a \n'
Key error: 1285
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Car Data:b'8,2,c c c c 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,502,0 0 0 0 0 0 0 0 '
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

utils: expected_length: 8
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
Car Data:b'8,503,1 12 3 4 4 4 4 4 '

Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.062195, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.0864177, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,b b b b 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8Car Data:b'8,1,ff 3 0 0 0 0 0 0 '

data after shortening: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
Car Data:b'8,502,2 0 0 0 0 0 0 0 '
message: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'Car Data:b'8,504,80 0 0 0 0 0 0 0 '

utils: data: b'\\x0b\\x0b\\x0b\\x0b\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.1133807, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Car Data:b'8,500,30 1a 63 0 0 99 42 0 'Key error: 1281

Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,502,3 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8

data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.138567, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Frame ID: 2     data: b'8,2,d d d d 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
message: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
Car Data:b'8,2,e e e e 0 0 0 0 '
utils: data: b'\\x0d\\x0d\\x0d\\x0d\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.1637251, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Car Data:b'8,3,10 0 10 0 10 0 10 0 'Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'

Key error: 1283
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,4 0 0 0 0 0 0 0 'decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.1951585, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Key error: 1280
Frame ID: 2     data: b'8,2,e e e e 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
data before shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
message: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: data: b'\\x0e\\x0e\\x0e\\x0e\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.2246153, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3b 3b 3b 3a \n'
Key error: 1285
Car Data:b'8,501,0 0 0 0 0 0 0 0 '
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Car Data:b'8,503,0 3d 3d 11 f f 12 3d 'Key error: 1281

Car Data:b'8,505,0 3a 3a 3a 3b 3a 3a 3b 'Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'

Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Key error: 1283
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,502,1 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,504,40 0 0 0 0 0 0 0 '
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.2481248, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '

data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.2800407, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,2 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1284     data: b'8,504,80 0 0 0 0 0 0 0 \n'
Key error: 1284
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Car Data:b'8,503,2 4 5 4 4 4 4 4 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.309977, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,3 0 0 0 0 0 0 0 \n'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Key error: 1282
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'Car Data:b'8,501,3 0 0 0 0 0 0 0 '
Key error: 1284

Frame ID: 2     data: b'8,2,10 10 10 10 0 0 0 0 \n'Car Data:b'8,503,3 4 4 3 3d 4 4 4 '
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'

data before shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
message: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: data: b'\\x10\\x10\\x10\\x10\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.3360834, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 '
Frame ID: 1281     data: b'8,501,4 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,502,4 0 0 0 0 0 0 0 '
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.363232, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,503,4 4 3d 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
Car Data:b'8,1,0 0 0 0 0 0 0 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.3954532, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Frame ID: 1283     data: b'8,503,0 3d 3d 11 f f 12 3d \n'
Key error: 1283
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3a \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,505,0 3a 3a 3b 3a 3b 3b 3b '
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.4263165, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,1 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Car Data:b'8,3,2 0 2 0 2 0 2 0 '
Frame ID: 1284     data: b'8,504,40 0 0 0 0 0 0 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,503,1 13 3 4 4 4 4 4 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'Car Data:b'8,504,40 0 0 0 0 0 0 0 '

message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.452531, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1281     data: b'8,501,2 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,2 4 4 4 4 4 4 4 \n'
Key error: 1283
Car Data:b'8,505,1 3a 3a 3a 3a 3a 3a 3a '
Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1285     data: b'8,505,2 3a 3a 0 0 0 0 0 \n'
Key error: 1285
Frame ID: 2     data: b'8,2,13 13 13 13 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
data before shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'Car Data:b'8,501,2 0 0 0 0 0 0 0 '
Car Data:b'8,503,2 4 5 4 4 4 4 4 '

decode simple: shortening data to a length: 8
data after shortening: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
message: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: data: b'\\x13\\x13\\x13\\x13\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.4767437, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,30 1a 63 0 0 99 42 0 \n'
Key error: 1280
Car Data:b'8,505,2 3a 3a 0 0 0 0 0 '
Frame ID: 1281     data: b'8,501,3 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1284     data: b'8,504,c1 0 0 0 0 1 0 0 \n'
Key error: 1284
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,1 1 1 1 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,500,30 1a 63 0 0 99 42 0 '
Car Data:b'8,501,3 0 0 0 0 0 0 0 'utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)

full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.5009506, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,40 0 0 0 0 0 0 0 \n'
Key error: 1280
Car Data:b'8,504,c1 0 0 0 0 1 0 0 'Frame ID: 1     data: b'8,1,0 0 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'

Car Data:b'8,1,0 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
data after shortening: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.5282018, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,4 0 0 0 0 0 0 0 \n'Car Data:b'8,500,40 0 0 0 0 0 0 0 '
Key error: 1282

Car Data:b'8,1,ff 3 0 0 0 0 0 0 '
Frame ID: 1283     data: b'8,503,4 4 3d 0 0 0 0 0 \n'
Key error: 1283
Frame ID: 2     data: b'8,2,2 2 2 2 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
data before shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'Car Data:b'8,502,4 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8

data after shortening: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
message: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: data: b'\\x02\\x02\\x02\\x02\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.5511525, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1280     data: b'8,500,0 0 0 0 0 0 0 0 \n'Car Data:b'8,503,4 4 3d 0 0 0 0 0 '

Key error: 1280
Frame ID: 1     data: b'8,1,ff 3 0 0 0 0 0 0 \n'
database message: message('a', 0x1, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
data before shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
decode simple: shortening data to a length: 8
data after shortening: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
message: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
utils: data: b'\\xff\\x03\\x00\\x00\\x00\\x00\\x00\\x0'
Car Data:b'8,2,5 5 5 5 0 0 0 0 'utils: expected_length: 8

utils: signals: [signal('a1', 0, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a2', 1, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a3', 2, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a4', 3, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a5', 4, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a6', 5, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a7', 6, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a8', 7, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a9', 8, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None), signal('a10', 9, 1, 'little_endian', False, None, 1, -127, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8410>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB210>, padding_mask=71213169107795967)
full unpacked: {'a10': 0, 'a9': 0, 'a8': 0, 'a7': 0, 'a6': 1, 'a5': 1, 'a4': 0, 'a3': 0, 'a2': 0, 'a1': 0}
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 1
scaled: -126
Unpacked value: 1
scaled: -126
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
Unpacked value: 0
scaled: -127
fulle decoded: {'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127}
json_dict {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48, 'Timestamp': 1694128330.576125, 'a1': -127, 'a2': -127, 'a3': -127, 'a4': -127, 'a5': -126, 'a6': -126, 'a7': -127, 'a8': -127, 'a9': -127, 'a10': -127, 'c1': 23600, 'c2': 12408, 'c3': 23605, 'c4': 12408}
Sent SQL
Frame ID: 1282     data: b'8,502,0 0 0 0 0 0 0 0 \n'
Key error: 1282
Car Data:b'8,500,0 0 0 0 0 0 0 0 '
Car Data:b'8,2,6 6 6 6 0 0 0 0 'Frame ID: 1284     data: b'8,504,1 1 0 0 0 0 1 0 \n'
Key error: 1284
Frame ID: 1285     data: b'8,505,0 3a 3a 3b 3a 3b 3b 3b \n'
Key error: 1285
Frame ID: 1280     data: b'8,500,10 0 0 0 0 0 0 0 \n'
Key error: 1280
Frame ID: 1281     data: b'8,501,1 0 0 0 0 0 0 0 \n'
Key error: 1281
Frame ID: 1283     data: b'8,503,1 13 3 4 4 4 4 4 \n'

Car Data:b'8,502,0 0 0 0 0 0 0 0 '
Car Data:b'8,504,1 1 0 0 0 0 1 0 '
Key error: 1283
Frame ID: 1285     data: b'8,505,1 3a 3a 3a 3a 3a 3a 3a \n'
Key error: 1285
Car Data:b'8,505,0 3a 3a 3a 3b 3b 3b 3b '
Frame ID: 2     data: b'8,2,3 3 3 3 0 0 0 0 \n'
database message: message('b', 0x2, False, 8, None)
message type (not container): <class 'custom_cantools.cantools.database.can.message.Message'>
database: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
data before shortening: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'Car Data:b'8,500,10 0 0 0 0 0 0 0 '
Car Data:b'8,501,1 0 0 0 0 0 0 0 '
decode simple: shortening data to a length: 8
Car Data:b'8,503,1 13 3 4 4 4 4 4 '

data after shortening: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
message: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
utils: data: b'\\x03\\x03\\x03\\x03\\x00\\x00\\x00\\x0'
utils: expected_length: 8
utils: signals: [signal('b1', 0, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b2', 8, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b3', 16, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None), signal('b4', 24, 8, 'little_endian', False, None, 1, 0, None, None, 'None', False, None, None, None, None)]
utils: formats: Formats(big_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6A8E90>, little_endian=<bitstruct.CompiledFormatDict object at 0x000001FB7A6AB010>, padding_mask=4294967295)
full unpacked: {'b4': 48, 'b3': 120, 'b2': 92, 'b1': 48}
Unpacked value: 48
conversion.py: 48
scaled: 48
Unpacked value: 92
conversion.py: 92
scaled: 92
Unpacked value: 120
conversion.py: 120
scaled: 120
Unpacked value: 48
conversion.py: 48
scaled: 48
fulle decoded: {'b1': 48, 'b2': 92, 'b3': 120, 'b4': 48}
