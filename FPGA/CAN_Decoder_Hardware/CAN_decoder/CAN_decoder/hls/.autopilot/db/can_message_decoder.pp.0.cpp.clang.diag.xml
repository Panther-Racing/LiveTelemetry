<dict>
  <key>main-file</key>
  <string>C:/Users/flaud/Documents/GitHub/LiveTelemetry/FPGA/CAN_Decoder_Hardware/CAN_decoder/CAN_decoder/hls/.autopilot/db/can_message_decoder.pp.0.cpp</string>
  <key>diagnostics</key>
  <array>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>18</integer>
      <key>column</key>
      <integer>9</integer>
      <key>message</key>
      <string>HLS pragma dump _XLX_SEP_ PragmaIsValid=1_XLX_SEP_ PragmaType=pipeline_XLX_SEP_ PragmaContext=_XLX_SEP_ PragmaFunction=initialize_hash_table_XLX_SEP_ PragmaOptions=II=1_XLX_SEP_</string>
      <key>ID</key>
      <integer>5471</integer>
      <key>WarningOption</key>
      <string>dump-hls-pragmas</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>directive</string>
      <key>line</key>
      <integer>1</integer>
      <key>column</key>
      <integer>9</integer>
      <key>message</key>
      <string>HLS pragma dump _XLX_SEP_ PragmaIsValid=1_XLX_SEP_ PragmaType=top_XLX_SEP_ PragmaContext=directive_XLX_SEP_ PragmaFunction=decode_can_message_XLX_SEP_ PragmaOptions=name=decode_can_message_XLX_SEP_</string>
      <key>ID</key>
      <integer>5471</integer>
      <key>WarningOption</key>
      <string>dump-hls-pragmas</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>64</integer>
      <key>column</key>
      <integer>9</integer>
      <key>message</key>
      <string>HLS pragma dump _XLX_SEP_ PragmaIsValid=1_XLX_SEP_ PragmaType=interface_XLX_SEP_ PragmaContext=_XLX_SEP_ PragmaFunction=decode_can_message_XLX_SEP_ PragmaOptions=ap_memory depth=512 port=msg_lut_XLX_SEP_</string>
      <key>ID</key>
      <integer>5471</integer>
      <key>WarningOption</key>
      <string>dump-hls-pragmas</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>65</integer>
      <key>column</key>
      <integer>9</integer>
      <key>message</key>
      <string>HLS pragma dump _XLX_SEP_ PragmaIsValid=1_XLX_SEP_ PragmaType=interface_XLX_SEP_ PragmaContext=_XLX_SEP_ PragmaFunction=decode_can_message_XLX_SEP_ PragmaOptions=ap_memory depth=512 port=signal_def_mem_XLX_SEP_</string>
      <key>ID</key>
      <integer>5471</integer>
      <key>WarningOption</key>
      <string>dump-hls-pragmas</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>66</integer>
      <key>column</key>
      <integer>9</integer>
      <key>message</key>
      <string>HLS pragma dump _XLX_SEP_ PragmaIsValid=1_XLX_SEP_ PragmaType=interface_XLX_SEP_ PragmaContext=_XLX_SEP_ PragmaFunction=decode_can_message_XLX_SEP_ PragmaOptions=ap_memory depth=512 port=signal_names_XLX_SEP_</string>
      <key>ID</key>
      <integer>5471</integer>
      <key>WarningOption</key>
      <string>dump-hls-pragmas</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>67</integer>
      <key>column</key>
      <integer>9</integer>
      <key>message</key>
      <string>HLS pragma dump _XLX_SEP_ PragmaIsValid=1_XLX_SEP_ PragmaType=interface_XLX_SEP_ PragmaContext=_XLX_SEP_ PragmaFunction=decode_can_message_XLX_SEP_ PragmaOptions=ap_memory port=decoded_signals_XLX_SEP_</string>
      <key>ID</key>
      <integer>5471</integer>
      <key>WarningOption</key>
      <string>dump-hls-pragmas</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>68</integer>
      <key>column</key>
      <integer>9</integer>
      <key>message</key>
      <string>HLS pragma dump _XLX_SEP_ PragmaIsValid=1_XLX_SEP_ PragmaType=interface_XLX_SEP_ PragmaContext=_XLX_SEP_ PragmaFunction=decode_can_message_XLX_SEP_ PragmaOptions=s_axilite port=message_XLX_SEP_</string>
      <key>ID</key>
      <integer>5471</integer>
      <key>WarningOption</key>
      <string>dump-hls-pragmas</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>69</integer>
      <key>column</key>
      <integer>9</integer>
      <key>message</key>
      <string>HLS pragma dump _XLX_SEP_ PragmaIsValid=1_XLX_SEP_ PragmaType=interface_XLX_SEP_ PragmaContext=_XLX_SEP_ PragmaFunction=decode_can_message_XLX_SEP_ PragmaOptions=s_axilite port=num_decoded_signals_XLX_SEP_</string>
      <key>ID</key>
      <integer>5471</integer>
      <key>WarningOption</key>
      <string>dump-hls-pragmas</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>72</integer>
      <key>column</key>
      <integer>83</integer>
      <key>message</key>
      <string>format specifies type &apos;unsigned int&apos; but the argument has type &apos;ap_uint&lt;29&gt;&apos;</string>
      <key>ID</key>
      <integer>4855</integer>
      <key>WarningOption</key>
      <string>format</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>72</integer>
      <key>column</key>
      <integer>95</integer>
      <key>message</key>
      <string>format specifies type &apos;unsigned int&apos; but the argument has type &apos;ap_uint&lt;64&gt;&apos;</string>
      <key>ID</key>
      <integer>4855</integer>
      <key>WarningOption</key>
      <string>format</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>79</integer>
      <key>column</key>
      <integer>71</integer>
      <key>message</key>
      <string>format specifies type &apos;unsigned int&apos; but the argument has type &apos;ap_uint&lt;29&gt;&apos;</string>
      <key>ID</key>
      <integer>4855</integer>
      <key>WarningOption</key>
      <string>format</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>86</integer>
      <key>column</key>
      <integer>87</integer>
      <key>message</key>
      <string>format specifies type &apos;unsigned int&apos; but the argument has type &apos;ap_uint&lt;29&gt;&apos;</string>
      <key>ID</key>
      <integer>4855</integer>
      <key>WarningOption</key>
      <string>format</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>86</integer>
      <key>column</key>
      <integer>114</integer>
      <key>message</key>
      <string>format specifies type &apos;unsigned int&apos; but the argument has type &apos;ap_uint&lt;29&gt;&apos;</string>
      <key>ID</key>
      <integer>4855</integer>
      <key>WarningOption</key>
      <string>format</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>105</integer>
      <key>column</key>
      <integer>47</integer>
      <key>message</key>
      <string>format specifies type &apos;unsigned int&apos; but the argument has type &apos;ap_uint&lt;56&gt;&apos;</string>
      <key>ID</key>
      <integer>4855</integer>
      <key>WarningOption</key>
      <string>format</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>106</integer>
      <key>column</key>
      <integer>97</integer>
      <key>message</key>
      <string>format specifies type &apos;unsigned int&apos; but the argument has type &apos;ap_uint&lt;7&gt;&apos;</string>
      <key>ID</key>
      <integer>4855</integer>
      <key>WarningOption</key>
      <string>format</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>118</integer>
      <key>column</key>
      <integer>9</integer>
      <key>message</key>
      <string>HLS pragma dump _XLX_SEP_ PragmaIsValid=1_XLX_SEP_ PragmaType=unroll_XLX_SEP_ PragmaContext=_XLX_SEP_ PragmaFunction=decode_can_message_XLX_SEP_ PragmaOptions=factor=68_XLX_SEP_</string>
      <key>ID</key>
      <integer>5471</integer>
      <key>WarningOption</key>
      <string>dump-hls-pragmas</string>
    </dict>
    <dict>
      <key>level</key>
      <string>warning</string>
      <key>filename</key>
      <string>can_message_decoder.cpp</string>
      <key>line</key>
      <integer>160</integer>
      <key>column</key>
      <integer>46</integer>
      <key>message</key>
      <string>format specifies type &apos;unsigned long long&apos; but the argument has type &apos;ap_int&lt;32&gt;&apos;</string>
      <key>ID</key>
      <integer>4855</integer>
      <key>WarningOption</key>
      <string>format</string>
    </dict>
  </array>
</dict>
