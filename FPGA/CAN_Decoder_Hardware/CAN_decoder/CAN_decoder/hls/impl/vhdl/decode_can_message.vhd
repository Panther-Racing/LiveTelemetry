-- ==============================================================
-- Generated by Vitis HLS v2024.1.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity decode_can_message is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    decoded_signals_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    decoded_signals_ce0 : OUT STD_LOGIC;
    decoded_signals_we0 : OUT STD_LOGIC;
    decoded_signals_d0 : OUT STD_LOGIC_VECTOR (42 downto 0);
    hash_table_message_id_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    hash_table_message_id_ce0 : OUT STD_LOGIC;
    hash_table_message_id_q0 : IN STD_LOGIC_VECTOR (28 downto 0);
    hash_table_lut_index_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    hash_table_lut_index_ce0 : OUT STD_LOGIC;
    hash_table_lut_index_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hash_table_accumulator_accumulated_values_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    hash_table_accumulator_accumulated_values_ce0 : OUT STD_LOGIC;
    hash_table_accumulator_accumulated_values_we0 : OUT STD_LOGIC;
    hash_table_accumulator_accumulated_values_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    hash_table_accumulator_accumulated_values_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    hash_table_accumulator_accumulated_values_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    hash_table_accumulator_accumulated_values_ce1 : OUT STD_LOGIC;
    hash_table_accumulator_accumulated_values_we1 : OUT STD_LOGIC;
    hash_table_accumulator_accumulated_values_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    hash_table_accumulator_accumulated_values_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    hash_table_accumulator_counter_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    hash_table_accumulator_counter_ce0 : OUT STD_LOGIC;
    hash_table_accumulator_counter_we0 : OUT STD_LOGIC;
    hash_table_accumulator_counter_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hash_table_accumulator_counter_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    msg_lut_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    msg_lut_ce0 : OUT STD_LOGIC;
    msg_lut_q0 : IN STD_LOGIC_VECTOR (55 downto 0);
    signal_def_mem_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    signal_def_mem_ce0 : OUT STD_LOGIC;
    signal_def_mem_q0 : IN STD_LOGIC_VECTOR (79 downto 0);
    signal_def_mem_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    signal_def_mem_ce1 : OUT STD_LOGIC;
    signal_def_mem_q1 : IN STD_LOGIC_VECTOR (79 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of decode_can_message is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "decode_can_message_decode_can_message,hls_ip_2024_1_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=11.099240,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=74015,HLS_SYN_LUT=112116,HLS_VERSION=2024_1_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal message : STD_LOGIC_VECTOR (127 downto 0);
    signal num_decoded_signals_i : STD_LOGIC_VECTOR (31 downto 0);
    signal num_decoded_signals_o : STD_LOGIC_VECTOR (31 downto 0);
    signal num_decoded_signals_o_ap_vld : STD_LOGIC;
    signal reg_255 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal message_id_fu_262_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal message_id_reg_445 : STD_LOGIC_VECTOR (28 downto 0);
    signal hash_index_fu_283_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal hash_index_reg_450 : STD_LOGIC_VECTOR (8 downto 0);
    signal message_data_reg_455 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln84_loc_load_load_fu_306_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_loc_load_reg_463 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal hash_table_accumulator_counter_addr_reg_472 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln117_fu_332_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln117_reg_489 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln172_fu_345_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln172_reg_500 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln172_fu_351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_505 : STD_LOGIC_VECTOR (63 downto 0);
    signal hash_table_accumulator_counter_addr_1_reg_510 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln184_fu_380_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln184_reg_515 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal hash_table_accumulator_counter_load_1_reg_520 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln174_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln174_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal trunc_ln182_fu_397_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln182_reg_539 : STD_LOGIC_VECTOR (8 downto 0);
    signal num_decoded_signals_read_reg_544 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_402_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_reg_549 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_start : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_done : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_idle : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_ready : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_table_message_id_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_table_message_id_ce0 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_index_1_out : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_index_1_out_ap_vld : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_mul_ln164_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_mul_ln164_out_ap_vld : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_icmp_ln84_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_icmp_ln84_out_ap_vld : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_start : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_done : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_idle : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_ready : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_ce0 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_ce1 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_ce0 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_we0 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_ce1 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_we1 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_start : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_done : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_idle : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_ready : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_ce0 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_we0 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_ce1 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_signal_def_mem_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_signal_def_mem_ce0 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_ce0 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_we0 : STD_LOGIC;
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_d0 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal mul_ln164_loc_fu_110 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln84_loc_fu_106 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal zext_ln76_fu_309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln99_fu_320_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln172_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln177_fu_392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_118 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal add_ln182_fu_417_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln182_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal hash_table_lut_index_ce0_local : STD_LOGIC;
    signal hash_table_lut_index_address0_local : STD_LOGIC_VECTOR (8 downto 0);
    signal hash_table_accumulator_counter_ce0_local : STD_LOGIC;
    signal hash_table_accumulator_counter_address0_local : STD_LOGIC_VECTOR (8 downto 0);
    signal hash_table_accumulator_counter_we0_local : STD_LOGIC;
    signal hash_table_accumulator_counter_d0_local : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln110_fu_325_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msg_lut_ce0_local : STD_LOGIC;
    signal msg_lut_address0_local : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln13_1_fu_271_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl1_fu_275_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln13_fu_267_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_369_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_fu_362_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln184_fu_376_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_i_i73_fu_407_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component decode_can_message_decode_can_message_Pipeline_VITIS_LOOP_84_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln84 : IN STD_LOGIC_VECTOR (8 downto 0);
        hash_table_message_id_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        hash_table_message_id_ce0 : OUT STD_LOGIC;
        hash_table_message_id_q0 : IN STD_LOGIC_VECTOR (28 downto 0);
        empty : IN STD_LOGIC_VECTOR (28 downto 0);
        hash_index_1_out : OUT STD_LOGIC_VECTOR (8 downto 0);
        hash_index_1_out_ap_vld : OUT STD_LOGIC;
        mul_ln164_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        mul_ln164_out_ap_vld : OUT STD_LOGIC;
        icmp_ln84_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        icmp_ln84_out_ap_vld : OUT STD_LOGIC );
    end component;


    component decode_can_message_decode_can_message_Pipeline_VITIS_LOOP_117_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        num_signals3 : IN STD_LOGIC_VECTOR (6 downto 0);
        empty : IN STD_LOGIC_VECTOR (8 downto 0);
        signal_def_mem_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        signal_def_mem_ce0 : OUT STD_LOGIC;
        signal_def_mem_q0 : IN STD_LOGIC_VECTOR (79 downto 0);
        signal_def_mem_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        signal_def_mem_ce1 : OUT STD_LOGIC;
        signal_def_mem_q1 : IN STD_LOGIC_VECTOR (79 downto 0);
        message_data2 : IN STD_LOGIC_VECTOR (63 downto 0);
        mul_ln164_reload : IN STD_LOGIC_VECTOR (15 downto 0);
        hash_table_accumulator_accumulated_values_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        hash_table_accumulator_accumulated_values_ce0 : OUT STD_LOGIC;
        hash_table_accumulator_accumulated_values_we0 : OUT STD_LOGIC;
        hash_table_accumulator_accumulated_values_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        hash_table_accumulator_accumulated_values_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        hash_table_accumulator_accumulated_values_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        hash_table_accumulator_accumulated_values_ce1 : OUT STD_LOGIC;
        hash_table_accumulator_accumulated_values_we1 : OUT STD_LOGIC;
        hash_table_accumulator_accumulated_values_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        hash_table_accumulator_accumulated_values_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln117 : IN STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component decode_can_message_decode_can_message_Pipeline_VITIS_LOOP_182_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty_27 : IN STD_LOGIC_VECTOR (6 downto 0);
        num_signals_150 : IN STD_LOGIC_VECTOR (6 downto 0);
        mul_ln184 : IN STD_LOGIC_VECTOR (15 downto 0);
        hash_table_accumulator_accumulated_values_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        hash_table_accumulator_accumulated_values_ce0 : OUT STD_LOGIC;
        hash_table_accumulator_accumulated_values_we0 : OUT STD_LOGIC;
        hash_table_accumulator_accumulated_values_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        hash_table_accumulator_accumulated_values_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        hash_table_accumulator_accumulated_values_ce1 : OUT STD_LOGIC;
        hash_table_accumulator_accumulated_values_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        empty : IN STD_LOGIC_VECTOR (8 downto 0);
        signal_def_mem_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        signal_def_mem_ce0 : OUT STD_LOGIC;
        signal_def_mem_q0 : IN STD_LOGIC_VECTOR (79 downto 0);
        conv_i32 : IN STD_LOGIC_VECTOR (31 downto 0);
        decoded_signals_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        decoded_signals_ce0 : OUT STD_LOGIC;
        decoded_signals_we0 : OUT STD_LOGIC;
        decoded_signals_d0 : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component decode_can_message_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        message : OUT STD_LOGIC_VECTOR (127 downto 0);
        num_decoded_signals_o : IN STD_LOGIC_VECTOR (31 downto 0);
        num_decoded_signals_o_ap_vld : IN STD_LOGIC;
        num_decoded_signals_i : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205 : component decode_can_message_decode_can_message_Pipeline_VITIS_LOOP_84_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_start,
        ap_done => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_done,
        ap_idle => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_idle,
        ap_ready => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_ready,
        zext_ln84 => hash_index_reg_450,
        hash_table_message_id_address0 => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_table_message_id_address0,
        hash_table_message_id_ce0 => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_table_message_id_ce0,
        hash_table_message_id_q0 => hash_table_message_id_q0,
        empty => message_id_reg_445,
        hash_index_1_out => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_index_1_out,
        hash_index_1_out_ap_vld => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_index_1_out_ap_vld,
        mul_ln164_out => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_mul_ln164_out,
        mul_ln164_out_ap_vld => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_mul_ln164_out_ap_vld,
        icmp_ln84_out => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_icmp_ln84_out,
        icmp_ln84_out_ap_vld => grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_icmp_ln84_out_ap_vld);

    grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216 : component decode_can_message_decode_can_message_Pipeline_VITIS_LOOP_117_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_start,
        ap_done => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_done,
        ap_idle => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_idle,
        ap_ready => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_ready,
        num_signals3 => reg_255,
        empty => trunc_ln117_reg_489,
        signal_def_mem_address0 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_address0,
        signal_def_mem_ce0 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_ce0,
        signal_def_mem_q0 => signal_def_mem_q0,
        signal_def_mem_address1 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_address1,
        signal_def_mem_ce1 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_ce1,
        signal_def_mem_q1 => signal_def_mem_q1,
        message_data2 => message_data_reg_455,
        mul_ln164_reload => mul_ln164_loc_fu_110,
        hash_table_accumulator_accumulated_values_address0 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_address0,
        hash_table_accumulator_accumulated_values_ce0 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_ce0,
        hash_table_accumulator_accumulated_values_we0 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_we0,
        hash_table_accumulator_accumulated_values_d0 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_d0,
        hash_table_accumulator_accumulated_values_q0 => hash_table_accumulator_accumulated_values_q0,
        hash_table_accumulator_accumulated_values_address1 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_address1,
        hash_table_accumulator_accumulated_values_ce1 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_ce1,
        hash_table_accumulator_accumulated_values_we1 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_we1,
        hash_table_accumulator_accumulated_values_d1 => grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_d1,
        hash_table_accumulator_accumulated_values_q1 => hash_table_accumulator_accumulated_values_q1,
        zext_ln117 => reg_255);

    grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229 : component decode_can_message_decode_can_message_Pipeline_VITIS_LOOP_182_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_start,
        ap_done => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_done,
        ap_idle => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_idle,
        ap_ready => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_ready,
        empty_27 => empty_reg_549,
        num_signals_150 => reg_255,
        mul_ln184 => add_ln184_reg_515,
        hash_table_accumulator_accumulated_values_address0 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_address0,
        hash_table_accumulator_accumulated_values_ce0 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_ce0,
        hash_table_accumulator_accumulated_values_we0 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_we0,
        hash_table_accumulator_accumulated_values_d0 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_d0,
        hash_table_accumulator_accumulated_values_address1 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_address1,
        hash_table_accumulator_accumulated_values_ce1 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_ce1,
        hash_table_accumulator_accumulated_values_q1 => hash_table_accumulator_accumulated_values_q1,
        empty => trunc_ln182_reg_539,
        signal_def_mem_address0 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_signal_def_mem_address0,
        signal_def_mem_ce0 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_signal_def_mem_ce0,
        signal_def_mem_q0 => signal_def_mem_q0,
        conv_i32 => hash_table_accumulator_counter_load_1_reg_520,
        decoded_signals_address0 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_address0,
        decoded_signals_ce0 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_ce0,
        decoded_signals_we0 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_we0,
        decoded_signals_d0 => grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_d0);

    control_s_axi_U : component decode_can_message_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        message => message,
        num_decoded_signals_o => num_decoded_signals_o,
        num_decoded_signals_o_ap_vld => num_decoded_signals_o_ap_vld,
        num_decoded_signals_i => num_decoded_signals_i);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_ready = ap_const_logic_1)) then 
                    grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_ready = ap_const_logic_1)) then 
                    grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_ready = ap_const_logic_1)) then 
                    grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln84_loc_load_load_fu_306_p1 = ap_const_lv1_0))) then 
                i_fu_118 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i_fu_118 <= add_ln172_reg_500;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln172_reg_500 <= add_ln172_fu_345_p2;
                hash_table_accumulator_counter_addr_1_reg_510 <= zext_ln172_fu_351_p1(9 - 1 downto 0);
                    zext_ln172_reg_505(9 downto 0) <= zext_ln172_fu_351_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    add_ln184_reg_515(15 downto 2) <= add_ln184_fu_380_p2(15 downto 2);
                hash_table_accumulator_counter_load_1_reg_520 <= hash_table_accumulator_counter_q0;
                icmp_ln174_reg_525 <= icmp_ln174_fu_386_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                empty_reg_549 <= empty_fu_402_p1;
                num_decoded_signals_read_reg_544 <= num_decoded_signals_i;
                trunc_ln182_reg_539 <= trunc_ln182_fu_397_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                hash_index_reg_450 <= hash_index_fu_283_p2;
                message_data_reg_455 <= message(127 downto 64);
                message_id_reg_445 <= message_id_fu_262_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                hash_table_accumulator_counter_addr_reg_472 <= zext_ln76_fu_309_p1(9 - 1 downto 0);
                icmp_ln84_loc_load_reg_463 <= icmp_ln84_loc_fu_106;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_icmp_ln84_out_ap_vld = ap_const_logic_1))) then
                icmp_ln84_loc_fu_106 <= grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_icmp_ln84_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_mul_ln164_out_ap_vld = ap_const_logic_1))) then
                mul_ln164_loc_fu_110 <= grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_mul_ln164_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state11))) then
                reg_255 <= msg_lut_q0(22 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                trunc_ln117_reg_489 <= trunc_ln117_fu_332_p1;
            end if;
        end if;
    end process;
    zext_ln172_reg_505(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    add_ln184_reg_515(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln84_loc_load_load_fu_306_p1, icmp_ln84_loc_load_reg_463, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state9, icmp_ln174_fu_386_p2, grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_done, grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state12, icmp_ln172_fu_339_p2, ap_block_state12_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln84_loc_load_load_fu_306_p1 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln172_fu_339_p2 = ap_const_lv1_1) or (icmp_ln84_loc_load_reg_463 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln174_fu_386_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln110_fu_325_p2 <= std_logic_vector(unsigned(hash_table_accumulator_counter_q0) + unsigned(ap_const_lv32_1));
    add_ln172_fu_345_p2 <= std_logic_vector(unsigned(i_fu_118) + unsigned(ap_const_lv10_1));
    add_ln182_fu_417_p2 <= std_logic_vector(unsigned(num_decoded_signals_read_reg_544) + unsigned(conv_i_i73_fu_407_p1));
    add_ln184_fu_380_p2 <= std_logic_vector(unsigned(p_shl_fu_362_p3) + unsigned(zext_ln184_fu_376_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state12_on_subcall_done)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_done)
    begin
        if ((grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_done)
    begin
        if ((grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state12_on_subcall_done_assign_proc : process(icmp_ln174_reg_525, grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_done)
    begin
                ap_block_state12_on_subcall_done <= ((grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_done = ap_const_logic_0) and (icmp_ln174_reg_525 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(icmp_ln84_loc_load_reg_463, ap_CS_fsm_state8, icmp_ln172_fu_339_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln172_fu_339_p2 = ap_const_lv1_1) or (icmp_ln84_loc_load_reg_463 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln84_loc_load_reg_463, ap_CS_fsm_state8, icmp_ln172_fu_339_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln172_fu_339_p2 = ap_const_lv1_1) or (icmp_ln84_loc_load_reg_463 = ap_const_lv1_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    conv_i_i73_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_255),32));
    decoded_signals_address0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_address0;
    decoded_signals_ce0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_ce0;
    decoded_signals_d0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_d0;
    decoded_signals_we0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_decoded_signals_we0;
    empty_fu_402_p1 <= num_decoded_signals_i(7 - 1 downto 0);
    grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_start <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_ap_start_reg;
    grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_start <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_ap_start_reg;
    grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_start <= grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_ap_start_reg;
    hash_index_fu_283_p2 <= std_logic_vector(unsigned(p_shl1_fu_275_p3) - unsigned(trunc_ln13_fu_267_p1));

    hash_table_accumulator_accumulated_values_address0_assign_proc : process(icmp_ln174_reg_525, grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_address0, grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_address0, ap_CS_fsm_state7, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0))) then 
            hash_table_accumulator_accumulated_values_address0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            hash_table_accumulator_accumulated_values_address0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_address0;
        else 
            hash_table_accumulator_accumulated_values_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hash_table_accumulator_accumulated_values_address1_assign_proc : process(icmp_ln174_reg_525, grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_address1, grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_address1, ap_CS_fsm_state7, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0))) then 
            hash_table_accumulator_accumulated_values_address1 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            hash_table_accumulator_accumulated_values_address1 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_address1;
        else 
            hash_table_accumulator_accumulated_values_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hash_table_accumulator_accumulated_values_ce0_assign_proc : process(icmp_ln174_reg_525, grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_ce0, grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_ce0, ap_CS_fsm_state7, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0))) then 
            hash_table_accumulator_accumulated_values_ce0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            hash_table_accumulator_accumulated_values_ce0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_ce0;
        else 
            hash_table_accumulator_accumulated_values_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hash_table_accumulator_accumulated_values_ce1_assign_proc : process(icmp_ln174_reg_525, grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_ce1, grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_ce1, ap_CS_fsm_state7, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0))) then 
            hash_table_accumulator_accumulated_values_ce1 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            hash_table_accumulator_accumulated_values_ce1 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_ce1;
        else 
            hash_table_accumulator_accumulated_values_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    hash_table_accumulator_accumulated_values_d0_assign_proc : process(icmp_ln174_reg_525, grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_d0, grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_d0, ap_CS_fsm_state7, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0))) then 
            hash_table_accumulator_accumulated_values_d0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            hash_table_accumulator_accumulated_values_d0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_d0;
        else 
            hash_table_accumulator_accumulated_values_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    hash_table_accumulator_accumulated_values_d1 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_d1;

    hash_table_accumulator_accumulated_values_we0_assign_proc : process(icmp_ln174_reg_525, grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_we0, grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_we0, ap_CS_fsm_state7, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0))) then 
            hash_table_accumulator_accumulated_values_we0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_hash_table_accumulator_accumulated_values_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            hash_table_accumulator_accumulated_values_we0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_we0;
        else 
            hash_table_accumulator_accumulated_values_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hash_table_accumulator_accumulated_values_we1_assign_proc : process(grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_we1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            hash_table_accumulator_accumulated_values_we1 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_hash_table_accumulator_accumulated_values_we1;
        else 
            hash_table_accumulator_accumulated_values_we1 <= ap_const_logic_0;
        end if; 
    end process;

    hash_table_accumulator_counter_address0 <= hash_table_accumulator_counter_address0_local;

    hash_table_accumulator_counter_address0_local_assign_proc : process(ap_CS_fsm_state3, hash_table_accumulator_counter_addr_reg_472, ap_CS_fsm_state4, ap_CS_fsm_state8, zext_ln172_fu_351_p1, hash_table_accumulator_counter_addr_1_reg_510, ap_CS_fsm_state12, zext_ln76_fu_309_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            hash_table_accumulator_counter_address0_local <= hash_table_accumulator_counter_addr_1_reg_510;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            hash_table_accumulator_counter_address0_local <= zext_ln172_fu_351_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            hash_table_accumulator_counter_address0_local <= hash_table_accumulator_counter_addr_reg_472;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            hash_table_accumulator_counter_address0_local <= zext_ln76_fu_309_p1(9 - 1 downto 0);
        else 
            hash_table_accumulator_counter_address0_local <= "XXXXXXXXX";
        end if; 
    end process;

    hash_table_accumulator_counter_ce0 <= hash_table_accumulator_counter_ce0_local;

    hash_table_accumulator_counter_ce0_local_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            hash_table_accumulator_counter_ce0_local <= ap_const_logic_1;
        else 
            hash_table_accumulator_counter_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    hash_table_accumulator_counter_d0 <= hash_table_accumulator_counter_d0_local;

    hash_table_accumulator_counter_d0_local_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state12, add_ln110_fu_325_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            hash_table_accumulator_counter_d0_local <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            hash_table_accumulator_counter_d0_local <= add_ln110_fu_325_p2;
        else 
            hash_table_accumulator_counter_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    hash_table_accumulator_counter_we0 <= hash_table_accumulator_counter_we0_local;

    hash_table_accumulator_counter_we0_local_assign_proc : process(ap_CS_fsm_state4, icmp_ln174_reg_525, ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0)))) then 
            hash_table_accumulator_counter_we0_local <= ap_const_logic_1;
        else 
            hash_table_accumulator_counter_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    hash_table_lut_index_address0 <= hash_table_lut_index_address0_local;

    hash_table_lut_index_address0_local_assign_proc : process(ap_CS_fsm_state3, zext_ln172_reg_505, ap_CS_fsm_state9, zext_ln76_fu_309_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hash_table_lut_index_address0_local <= zext_ln172_reg_505(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            hash_table_lut_index_address0_local <= zext_ln76_fu_309_p1(9 - 1 downto 0);
        else 
            hash_table_lut_index_address0_local <= "XXXXXXXXX";
        end if; 
    end process;

    hash_table_lut_index_ce0 <= hash_table_lut_index_ce0_local;

    hash_table_lut_index_ce0_local_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            hash_table_lut_index_ce0_local <= ap_const_logic_1;
        else 
            hash_table_lut_index_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    hash_table_message_id_address0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_table_message_id_address0;
    hash_table_message_id_ce0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_table_message_id_ce0;
    icmp_ln172_fu_339_p2 <= "1" when (i_fu_118 = ap_const_lv10_200) else "0";
    icmp_ln174_fu_386_p2 <= "1" when (hash_table_accumulator_counter_q0 = ap_const_lv32_0) else "0";
    icmp_ln182_fu_411_p2 <= "1" when (reg_255 = ap_const_lv7_0) else "0";
    icmp_ln84_loc_load_load_fu_306_p1 <= icmp_ln84_loc_fu_106;
    message_id_fu_262_p1 <= message(29 - 1 downto 0);
    msg_lut_address0 <= msg_lut_address0_local;

    msg_lut_address0_local_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, zext_ln99_fu_320_p1, zext_ln177_fu_392_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            msg_lut_address0_local <= zext_ln177_fu_392_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            msg_lut_address0_local <= zext_ln99_fu_320_p1(9 - 1 downto 0);
        else 
            msg_lut_address0_local <= "XXXXXXXXX";
        end if; 
    end process;

    msg_lut_ce0 <= msg_lut_ce0_local;

    msg_lut_ce0_local_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            msg_lut_ce0_local <= ap_const_logic_1;
        else 
            msg_lut_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    num_decoded_signals_o_assign_proc : process(num_decoded_signals_i, icmp_ln174_reg_525, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, add_ln182_fu_417_p2, icmp_ln182_fu_411_p2)
    begin
        if (((icmp_ln182_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0))) then 
            num_decoded_signals_o <= add_ln182_fu_417_p2;
        else 
            num_decoded_signals_o <= num_decoded_signals_i;
        end if; 
    end process;


    num_decoded_signals_o_ap_vld_assign_proc : process(icmp_ln174_reg_525, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, icmp_ln182_fu_411_p2)
    begin
        if (((icmp_ln182_fu_411_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0))) then 
            num_decoded_signals_o_ap_vld <= ap_const_logic_1;
        else 
            num_decoded_signals_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_shl1_fu_275_p3 <= (trunc_ln13_1_fu_271_p1 & ap_const_lv5_0);
    p_shl_fu_362_p3 <= (i_fu_118 & ap_const_lv6_0);

    signal_def_mem_address0_assign_proc : process(icmp_ln174_reg_525, grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_address0, grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_signal_def_mem_address0, ap_CS_fsm_state7, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0))) then 
            signal_def_mem_address0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_signal_def_mem_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            signal_def_mem_address0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_address0;
        else 
            signal_def_mem_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    signal_def_mem_address1 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_address1;

    signal_def_mem_ce0_assign_proc : process(icmp_ln174_reg_525, grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_ce0, grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_signal_def_mem_ce0, ap_CS_fsm_state7, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln174_reg_525 = ap_const_lv1_0))) then 
            signal_def_mem_ce0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_182_4_fu_229_signal_def_mem_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            signal_def_mem_ce0 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_ce0;
        else 
            signal_def_mem_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    signal_def_mem_ce1_assign_proc : process(grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            signal_def_mem_ce1 <= grp_decode_can_message_Pipeline_VITIS_LOOP_117_2_fu_216_signal_def_mem_ce1;
        else 
            signal_def_mem_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_369_p3 <= (i_fu_118 & ap_const_lv2_0);
    trunc_ln117_fu_332_p1 <= msg_lut_q0(9 - 1 downto 0);
    trunc_ln13_1_fu_271_p1 <= message(4 - 1 downto 0);
    trunc_ln13_fu_267_p1 <= message(9 - 1 downto 0);
    trunc_ln182_fu_397_p1 <= msg_lut_q0(9 - 1 downto 0);
    zext_ln172_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_118),64));
    zext_ln177_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hash_table_lut_index_q0),64));
    zext_ln184_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_369_p3),16));
    zext_ln76_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_decode_can_message_Pipeline_VITIS_LOOP_84_1_fu_205_hash_index_1_out),64));
    zext_ln99_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hash_table_lut_index_q0),64));
end behav;
